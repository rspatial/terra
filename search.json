[{"path":"https://rspatial.github.io/terra/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Robert J. Hijmans. Maintainer, author. Márcia Barbosa. Contributor. Roger Bivand. Contributor. Andrew Brown. Contributor. Michael Chirico. Contributor. Emanuele Cordano. Contributor. Krzysztof Dyba. Contributor. Edzer Pebesma. Contributor. Barry Rowlingson. Contributor. Michael D. Sumner. Contributor.","code":""},{"path":"https://rspatial.github.io/terra/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hijmans R (2025). terra: Spatial Data Analysis. R package version 1.8-27, https://rspatial.github.io/terra/, https://rspatial.org/.","code":"@Manual{,   title = {terra: Spatial Data Analysis},   author = {Robert J. Hijmans},   year = {2025},   note = {R package version 1.8-27, https://rspatial.github.io/terra/},   url = {https://rspatial.org/}, }"},{"path":"https://rspatial.github.io/terra/index.html","id":"terra-","dir":"","previous_headings":"","what":"Spatial Data Analysis","title":"Spatial Data Analysis","text":"logo Zane Dax  terra R package spatial data analysis. tutorials rspatial.org. Stack Overflow good place ask questions get stuck. Make sure include simple reproducible example. think found bug, want request new feature, please file issue. terra replaces raster package. interfaces terra raster similar, terra simpler, faster can .","code":""},{"path":"https://rspatial.github.io/terra/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Spatial Data Analysis","text":"terra available CRAN, can use install.packages(\"terra\") get current released version. easiest way use development version Windows MacOS, install R-universe, like :","code":"install.packages('terra', repos='https://rspatial.r-universe.dev')"},{"path":"https://rspatial.github.io/terra/index.html","id":"from-source-code","dir":"","previous_headings":"Installation","what":"From source-code","title":"Spatial Data Analysis","text":"install source-code, first install Rcpp package terra depends : continue based OS using.","code":"install.packages(\"Rcpp\")"},{"path":"https://rspatial.github.io/terra/index.html","id":"windows","dir":"","previous_headings":"Installation > From source-code","what":"Windows","title":"Spatial Data Analysis","text":"Windows, need first install Rtools get C++ compiler R can use. need recent version Rtools42 (rtools42-5355-5357). , R, install package.","code":"Sys.setenv(\"R_REMOTES_NO_ERRORS_FROM_WARNINGS\" = \"true\") remotes::install_github(\"rspatial/terra\")"},{"path":"https://rspatial.github.io/terra/index.html","id":"macos","dir":"","previous_headings":"Installation > From source-code","what":"macOS","title":"Spatial Data Analysis","text":"macOS, can use MacPorts Homebrew. MacPorts can Homebrew, need first install GDAL: Followed (note additional configuration argument needed Homebrew) install CRAN version source ","code":"sudo port install R-terra brew install pkg-config brew install gdal remotes::install_github(\"rspatial/terra\", configure.args = \"--with-proj-lib=$(brew --prefix)/lib/\") install.packages(\"terra\", type = \"source\", configure.args = \"--with-proj-lib=$(brew --prefix)/lib/\")"},{"path":"https://rspatial.github.io/terra/index.html","id":"linux","dir":"","previous_headings":"Installation > From source-code","what":"Linux","title":"Spatial Data Analysis","text":"easy way install terra Ubuntu r2u. harder way: Install system requirements GDAL (>= 2.2.3), GEOS (>= 3.4.0), PROJ (>= 4.9.3), sqlite3. now, R, install package See sf instructions installation linux systems — possible updates/improvements instructions.","code":"sudo add-apt-repository ppa:ubuntugis/ubuntugis-unstable sudo apt-get update sudo apt-get install libgdal-dev libgeos-dev libproj-dev remotes::install_github(\"rspatial/terra\")"},{"path":"https://rspatial.github.io/terra/reference/NAflag.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the NA flag — NAflag","title":"Set the NA flag — NAflag","text":"main purpose method allow correct reading SpatRaster based file incorrect NA flag. file changed, flagged value set NA values read file (\"lazy evaluation\"). contrast, values memory change made immediately. change values, generally better use classify","code":""},{"path":"https://rspatial.github.io/terra/reference/NAflag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the NA flag — NAflag","text":"","code":"# S4 method for class 'SpatRaster' NAflag(x)  # S4 method for class 'SpatRaster' NAflag(x) <- value"},{"path":"https://rspatial.github.io/terra/reference/NAflag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the NA flag — NAflag","text":"x SpatRaster value numeric. value interpreted NA; set reading values file. can single value, multiple values, one data source (file / subdataset)","code":""},{"path":"https://rspatial.github.io/terra/reference/NAflag.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the NA flag — NAflag","text":"none numeric","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/NAflag.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the NA flag — NAflag","text":"","code":"s <- rast(system.file(\"ex/logo.tif\", package=\"terra\"))[[1]]    NAflag(s) <- 255 plot(s)  NAflag(s) #> [1] 255"},{"path":"https://rspatial.github.io/terra/reference/NIPD.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of immediate adjacent cells flowing into each cell — NIDP","title":"Number of immediate adjacent cells flowing into each cell — NIDP","text":"Compute number immediate adjacent cells flowing cell","code":""},{"path":"https://rspatial.github.io/terra/reference/NIPD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of immediate adjacent cells flowing into each cell — NIDP","text":"","code":"# S4 method for class 'SpatRaster' NIDP(x, filename=\"\",...)"},{"path":"https://rspatial.github.io/terra/reference/NIPD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of immediate adjacent cells flowing into each cell — NIDP","text":"x SpatRaster flow-direction. see terrain filename character. Output filename ... additional arguments writing files writeRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/NIPD.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number of immediate adjacent cells flowing into each cell — NIDP","text":"SpatRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/NIPD.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Number of immediate adjacent cells flowing into each cell — NIDP","text":"NDIP computed first compute flow-accumulation algorithm Zhou al, 2019.","code":""},{"path":"https://rspatial.github.io/terra/reference/NIPD.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Number of immediate adjacent cells flowing into each cell — NIDP","text":"Zhou, G., Wei, H. & Fu, S. fast simple algorithm calculating flow accumulation matrices raster digital elevation. Front. Earth Sci. 13, 317–326 (2019). https://doi.org/10.1007/s11707-018-0725-9 https://link.springer.com/article/10.1007/s11707-018-0725-9","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/NIPD.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Number of immediate adjacent cells flowing into each cell — NIDP","text":"Emanuele Cordano","code":""},{"path":"https://rspatial.github.io/terra/reference/NIPD.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Number of immediate adjacent cells flowing into each cell — NIDP","text":"","code":"elev1 <- array(NA,c(9,9)) elev2 <- elev1 dx <- 1 dy <- 1  for (r in 1:nrow(elev1)) {   y <- (r-5)*dx   for (c in 1:ncol(elev1)) {          x <- (c-5)*dy     elev1[r,c] <- 5*(x^2+y^2)     elev2[r,c] <- 10+5*(abs(x))-0.001*y ### 5*(x^2+y^2)   } }    ## Elevation Raster  elev1 <- rast(elev1) elev2 <- rast(elev2)  t(array(elev1[],rev(dim(elev1)[1:2]))) #>       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] #>  [1,]  160  125  100   85   80   85  100  125  160 #>  [2,]  125   90   65   50   45   50   65   90  125 #>  [3,]  100   65   40   25   20   25   40   65  100 #>  [4,]   85   50   25   10    5   10   25   50   85 #>  [5,]   80   45   20    5    0    5   20   45   80 #>  [6,]   85   50   25   10    5   10   25   50   85 #>  [7,]  100   65   40   25   20   25   40   65  100 #>  [8,]  125   90   65   50   45   50   65   90  125 #>  [9,]  160  125  100   85   80   85  100  125  160 t(array(elev2[],rev(dim(elev2)[1:2]))) #>         [,1]   [,2]   [,3]   [,4]   [,5]   [,6]   [,7]   [,8]   [,9] #>  [1,] 30.004 25.004 20.004 15.004 10.004 15.004 20.004 25.004 30.004 #>  [2,] 30.003 25.003 20.003 15.003 10.003 15.003 20.003 25.003 30.003 #>  [3,] 30.002 25.002 20.002 15.002 10.002 15.002 20.002 25.002 30.002 #>  [4,] 30.001 25.001 20.001 15.001 10.001 15.001 20.001 25.001 30.001 #>  [5,] 30.000 25.000 20.000 15.000 10.000 15.000 20.000 25.000 30.000 #>  [6,] 29.999 24.999 19.999 14.999  9.999 14.999 19.999 24.999 29.999 #>  [7,] 29.998 24.998 19.998 14.998  9.998 14.998 19.998 24.998 29.998 #>  [8,] 29.997 24.997 19.997 14.997  9.997 14.997 19.997 24.997 29.997 #>  [9,] 29.996 24.996 19.996 14.996  9.996 14.996 19.996 24.996 29.996  plot(elev1)  plot(elev2)   ## Flow Direction Raster flowdir1<- terrain(elev1,v=\"flowdir\") flowdir2<- terrain(elev2,v=\"flowdir\")   t(array(flowdir1[],rev(dim(flowdir1)[1:2]))) #>       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] #>  [1,]    2    2    2    4    4    4    8    8    8 #>  [2,]    2    2    2    4    4    4    8    8    8 #>  [3,]    2    2    2    4    4    4    8    8    8 #>  [4,]    1    1    1    2    4    8   16   16   16 #>  [5,]    1    1    1    1    0   16   16   16   16 #>  [6,]    1    1    1  128   64   32   16   16   16 #>  [7,]  128  128  128   64   64   64   32   32   32 #>  [8,]  128  128  128   64   64   64   32   32   32 #>  [9,]  128  128  128   64   64   64   32   32   32 t(array(flowdir2[],rev(dim(flowdir2)[1:2]))) #>       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] #>  [1,]    1    1    1    1    4   16   16   16   16 #>  [2,]    1    1    1    1    4   16   16   16   16 #>  [3,]    1    1    1    1    4   16   16   16   16 #>  [4,]    1    1    1    1    4   16   16   16   16 #>  [5,]    1    1    1    1    4   16   16   16   16 #>  [6,]    1    1    1    1    4   16   16   16   16 #>  [7,]    1    1    1    1    4   16   16   16   16 #>  [8,]    1    1    1    1    4   16   16   16   16 #>  [9,]    1    1    1    1    0   16   16   16   16  plot(flowdir1)  plot(flowdir2)   ##  nidp1 <- NIDP((flowdir1)) nidp2 <- NIDP((flowdir2))  t(array(nidp1[],rev(dim(nidp1)[1:2]))) #>       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] #>  [1,]    0    0    0    0    0    0    0    0    0 #>  [2,]    0    1    1    2    1    2    1    1    0 #>  [3,]    0    1    1    2    1    2    1    1    0 #>  [4,]    0    2    2    3    1    3    2    2    0 #>  [5,]    0    1    1    1    9    1    1    1    0 #>  [6,]    0    2    2    3    1    3    2    2    0 #>  [7,]    0    1    1    2    1    2    1    1    0 #>  [8,]    0    1    1    2    1    2    1    1    0 #>  [9,]    0    0    0    0    0    0    0    0    0 t(array(nidp2[],rev(dim(nidp2)[1:2]))) #>       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] #>  [1,]    0    1    1    1    2    1    1    1    0 #>  [2,]    0    1    1    1    3    1    1    1    0 #>  [3,]    0    1    1    1    3    1    1    1    0 #>  [4,]    0    1    1    1    3    1    1    1    0 #>  [5,]    0    1    1    1    3    1    1    1    0 #>  [6,]    0    1    1    1    3    1    1    1    0 #>  [7,]    0    1    1    1    3    1    1    1    0 #>  [8,]    0    1    1    1    3    1    1    1    0 #>  [9,]    0    1    1    1    4    1    1    1    0  plot(nidp1)  plot(nidp2)"},{"path":"https://rspatial.github.io/terra/reference/RGB.html","id":null,"dir":"Reference","previous_headings":"","what":"Layers representing colors — RGB","title":"Layers representing colors — RGB","text":"RGB can get set layers used Red, Green Blue plotting SpatRaster. Currently, benefit plot send object plotRGB. can also associated layers another color space (HSV, HSI HSL) colorize can convert three-layer RGB SpatRaster color spaces. can also convert single-layer SpatRaster color-table.","code":""},{"path":"https://rspatial.github.io/terra/reference/RGB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Layers representing colors — RGB","text":"","code":"# S4 method for class 'SpatRaster' RGB(x, value=NULL, type=\"rgb\")  # S4 method for class 'SpatRaster' RGB(x, ..., type = \"rgb\") <- value  # S4 method for class 'SpatRaster' colorize(x, to=\"hsv\", alpha=FALSE, stretch=NULL,    grays=FALSE, NAzero=FALSE, filename=\"\", overwrite=FALSE, ...)  # S4 method for class 'SpatRaster' has.RGB(x, strict=TRUE)"},{"path":"https://rspatial.github.io/terra/reference/RGB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Layers representing colors — RGB","text":"x SpatRaster value three (four) positive integers indicating layers red, green blue (optionally fourth transparency layer). NULL remove RGB settings type character. color space. One \"rgb\" \"hsv\", \"hsi\" \"hsl\" character. color space transform values . x RGB set, can transform \"hsv\", \"hsi\" \"hsl\", use \"col\" create single layer color table. can also use \"rgb\" back transform RGB alpha logical. alpha (transparency) channel included? used x color-table =\"rgb\" stretch character. Option stretch values increase contrast: \"lin\" (linear) \"hist\" (histogram). used transforming RGB col grays logical. TRUE, gray-scale color-table created. used transforming RGB col NAzero logical. TRUE, NAs treated zeros color can returned least one three channels value. used transforming RGB (\"col\") strict logical. TRUE, function returns FALSE color space \"hsv\", \"hsi\" \"hsl\" used filename character. Output filename overwrite logical. TRUE, filename overwritten ... additional arguments writing files writeRaster","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/RGB.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Layers representing colors — RGB","text":"","code":"r <- rast(system.file(\"ex/logo.tif\", package=\"terra\"))    RGB(r) #> [1] 1 2 3 plot(r)  has.RGB(r) #> [1] TRUE RGB(r) <- NULL has.RGB(r) #> [1] FALSE plot(r)  RGB(r) <- c(3,1,2) # same as  # r <- RGB(r, c(3,1,2))  plot(r)   RGB(r) <- 1:3 x <- colorize(r, \"col\") y <- colorize(r, \"hsv\") z <- colorize(y, \"rgb\")"},{"path":"https://rspatial.github.io/terra/reference/SpatExtent-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class ","title":"Class ","text":"Objects class SpatExtent used define spatial extent (extremes) objects SpatRaster class.","code":""},{"path":"https://rspatial.github.io/terra/reference/SpatExtent-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"Class ","text":"can use ext function create SpatExtent objects, extract SpatRaster, SpatVector related objects.","code":""},{"path":"https://rspatial.github.io/terra/reference/SpatExtent-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class ","text":"show display values SpatExtent object","code":""},{"path":"https://rspatial.github.io/terra/reference/SpatExtent-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class ","text":"","code":"e <- ext(-180, 180, -90, 90) e #> SpatExtent : -180, 180, -90, 90 (xmin, xmax, ymin, ymax)"},{"path":"https://rspatial.github.io/terra/reference/SpatRaster-class.html","id":null,"dir":"Reference","previous_headings":"","what":"SpatRaster class — SpatRaster-class","title":"SpatRaster class — SpatRaster-class","text":"SpatRaster represents rectangular part world sub-divided rectangular cells equal area (terms units coordinate reference system). cell can multiple values (\"layers\"). object SpatRaster class can point one files disk hold cell values, /can hold values memory. objects can created rast method. SpatRasterDataset collection sub-datasets, SpatRaster area (extent) coordinate reference system, possibly different resolution. Sub-datasets often used capture variables (e.g. temperature precipitation), fourth dimension (e.g. height, depth time) sub-datasets already three dimensions (multiple layers). SpatRasterCollection collection SpatRasters restriction extent geometric parameters.","code":""},{"path":"https://rspatial.github.io/terra/reference/SpatRaster-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SpatRaster class — SpatRaster-class","text":"","code":"rast() #> class       : SpatRaster  #> dimensions  : 180, 360, 1  (nrow, ncol, nlyr) #> resolution  : 1, 1  (x, y) #> extent      : -180, 180, -90, 90  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (CRS84) (OGC:CRS84)"},{"path":"https://rspatial.github.io/terra/reference/SpatVector-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class ","title":"Class ","text":"SpatVector can represent points, lines polygons. SpatVectorCollection can hold collection SpatVectors SpatVectorProxy SpatVector data -disk -stead memory.","code":""},{"path":"https://rspatial.github.io/terra/reference/activeCat.html","id":null,"dir":"Reference","previous_headings":"","what":"Active category — activeCat","title":"Active category — activeCat","text":"Get set active category multi-categorical SpatRaster layer","code":""},{"path":"https://rspatial.github.io/terra/reference/activeCat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Active category — activeCat","text":"","code":"# S4 method for class 'SpatRaster' activeCat(x, layer=1) # S4 method for class 'SpatRaster' activeCat(x, layer = 1) <- value"},{"path":"https://rspatial.github.io/terra/reference/activeCat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Active category — activeCat","text":"x SpatRaster layer positive integer, layer number name value positive integer character, indicating column categories use. Note number used index zero based, \"1\" refers second column. first column categories cell values, categorical labels","code":""},{"path":"https://rspatial.github.io/terra/reference/activeCat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Active category — activeCat","text":"integer","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/activeCat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Active category — activeCat","text":"","code":"set.seed(0) r <- rast(nrows=10, ncols=10) values(r) <- sample(3, ncell(r), replace=TRUE) + 10 d <- data.frame(id=11:13, cover=c(\"forest\", \"water\", \"urban\"), letters=letters[1:3], value=10:12) levels(r) <- d  activeCat(r) #> [1] 1 activeCat(r) <- 3 activeCat(r) #> [1] 3"},{"path":"https://rspatial.github.io/terra/reference/add.html","id":null,"dir":"Reference","previous_headings":"","what":"Add (in place) a SpatRaster to another SpatRaster or to a SpatRasterDataset or SpatRasterCollection — add","title":"Add (in place) a SpatRaster to another SpatRaster or to a SpatRasterDataset or SpatRasterCollection — add","text":"Add (place) SpatRaster another SpatRaster. Comparable c, without copying object.","code":""},{"path":"https://rspatial.github.io/terra/reference/add.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add (in place) a SpatRaster to another SpatRaster or to a SpatRasterDataset or SpatRasterCollection — add","text":"","code":"# S4 method for class 'SpatRaster,SpatRaster' add(x) <- value  # S4 method for class 'SpatRasterDataset,SpatRaster' add(x) <- value  # S4 method for class 'SpatRasterCollection,SpatRaster' add(x) <- value"},{"path":"https://rspatial.github.io/terra/reference/add.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add (in place) a SpatRaster to another SpatRaster or to a SpatRasterDataset or SpatRasterCollection — add","text":"x SpatRaster, SpatRasterDataset SpatRasterCollection value SpatRaster","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/add.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add (in place) a SpatRaster to another SpatRaster or to a SpatRasterDataset or SpatRasterCollection — add","text":"SpatRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/add.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add (in place) a SpatRaster to another SpatRaster or to a SpatRasterDataset or SpatRasterCollection — add","text":"","code":"r <- rast(nrows=5, ncols=9, vals=1:45) x <- c(r, r*2) add(x) <- r*3 x #> class       : SpatRaster  #> dimensions  : 5, 9, 3  (nrow, ncol, nlyr) #> resolution  : 40, 36  (x, y) #> extent      : -180, 180, -90, 90  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (CRS84) (OGC:CRS84)  #> source(s)   : memory #> names       : lyr.1, lyr.1, lyr.1  #> min values  :     1,     2,     3  #> max values  :    45,    90,   135"},{"path":"https://rspatial.github.io/terra/reference/add_mtext.html","id":null,"dir":"Reference","previous_headings":"","what":"draw a box — add_mtext","title":"draw a box — add_mtext","text":"Similar mtext allowing adding text margins map. function useds margins around mapped area; margins R use.","code":""},{"path":"https://rspatial.github.io/terra/reference/add_mtext.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"draw a box — add_mtext","text":"","code":"add_mtext(text, side=3, line=0, ...)"},{"path":"https://rspatial.github.io/terra/reference/add_mtext.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"draw a box — add_mtext","text":"text character expression vector specifying text written side integer indicating margin use (1=bottom, 2=left, 3=top, 4=right) line numeric move text outwards. ... arguments passed text","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/add_mtext.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"draw a box — add_mtext","text":"","code":"f <- system.file(\"ex/elev.tif\", package=\"terra\") r <- rast(f)  plot(r, axes=FALSE, legend=FALSE) add_box() for (i in 1:4) add_mtext(\"margin text\", i, cex=i, col=i, line=2-i)"},{"path":"https://rspatial.github.io/terra/reference/adjacent.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjacent cells or polygons — adjacent","title":"Adjacent cells or polygons — adjacent","text":"Identify cells adjacent set raster cells. identify adjacent polygons","code":""},{"path":"https://rspatial.github.io/terra/reference/adjacent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjacent cells or polygons — adjacent","text":"","code":"# S4 method for class 'SpatRaster' adjacent(x, cells, directions=\"rook\", pairs=FALSE, include=FALSE, symmetrical=FALSE)  # S4 method for class 'SpatVector' adjacent(x, type=\"rook\", pairs=TRUE, symmetrical=FALSE)"},{"path":"https://rspatial.github.io/terra/reference/adjacent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjacent cells or polygons — adjacent","text":"x SpatRaster, SpatVector polygons cells vector cell numbers adjacent cells found. Cell numbers start 1 upper-left corner increase left right top bottom directions character matrix indicated directions cells considered connected. following character values allowed: \"rook\" \"4\" horizontal vertical neighbors; \"bishop\" get diagonal neighbors; \"queen\" \"8\" get vertical, horizontal diagonal neighbors; \"16\" knight one-cell queen move neighbors. directions matrix odd dimensions logical (0, 1) values pairs logical. TRUE, two-column matrix pairs adjacent cells returned. x SpatRaster pairs FALSE, n*m matrix returned number rows n length(cells) number columns m number neighbors requested directions include logical. focal cells included result? type character. One \"rook\", \"queen\", \"touches\", \"intersects\". \"queen\" \"touches\" synonyms. \"rook\" exclude polygons touch single node . \"intersects\" includes polygons touch overlap symmetrical logical. TRUE pairs=TRUE, adjacent pair included . example, polygon 1 adjacent polygon 3, implied adjacency 3 1 reported","code":""},{"path":"https://rspatial.github.io/terra/reference/adjacent.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Adjacent cells or polygons — adjacent","text":"using global lon/lat rasters, adjacent cells side date-line included.","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/adjacent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adjacent cells or polygons — adjacent","text":"matrix","code":""},{"path":"https://rspatial.github.io/terra/reference/adjacent.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adjacent cells or polygons — adjacent","text":"","code":"r <- rast(nrows=10, ncols=10) adjacent(r, cells=c(1, 5, 55), directions=\"queen\")  #>    [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] #> 0   NaN  NaN  NaN   10    2   20   11   12 #> 4   NaN  NaN  NaN    4    6   14   15   16 #> 54   44   45   46   54   56   64   65   66 r <- rast(nrows=10, ncols=10, crs=\"+proj=utm +zone=1 +datum=WGS84\") adjacent(r, cells=11, directions=\"rook\")  #>    [,1] [,2] [,3] [,4] #> 10    1  NaN   12   21  #same as  rk <- matrix(c(0,1,0,1,0,1,0,1,0), 3, 3) adjacent(r, cells=11, directions=rk)  #>    [,1] [,2] [,3] [,4] #> 10    1  NaN   12   21  ## note that with global lat/lon data the E and W connect r <- rast(nrows=10, ncols=10, crs=\"+proj=longlat +datum=WGS84\") adjacent(r, cells=11, directions=\"rook\")  #>    [,1] [,2] [,3] [,4] #> 10    1   20   12   21  f <- system.file(\"ex/lux.shp\", package=\"terra\") v <- vect(f) a <- adjacent(v, symmetrical=TRUE) head(a) #>      from to #> [1,]    1  2 #> [2,]    1  4 #> [3,]    1  5 #> [4,]    2  3 #> [5,]    2  4 #> [6,]    2  5"},{"path":"https://rspatial.github.io/terra/reference/aggregate.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate raster or vector data — aggregate","title":"Aggregate raster or vector data — aggregate","text":"Aggregate SpatRaster create new SpatRaster lower resolution (larger cells). Aggregation groups rectangular areas create larger cells. value resulting cells computed user-specified function. can also aggregate (\"dissolve\") SpatVector. either combines geometries one geometry, combines geometries value variable(s) specified argument .","code":""},{"path":"https://rspatial.github.io/terra/reference/aggregate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate raster or vector data — aggregate","text":"","code":"# S4 method for class 'SpatRaster' aggregate(x, fact=2, fun=\"mean\", ..., cores=1, filename=\"\", overwrite=FALSE, wopt=list())  # S4 method for class 'SpatVector' aggregate(x, by=NULL, dissolve=TRUE, fun=\"mean\", count=TRUE, ...)"},{"path":"https://rspatial.github.io/terra/reference/aggregate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate raster or vector data — aggregate","text":"x SpatRaster fact positive integer. Aggregation factor expressed number cells direction (horizontally vertically). two integers (horizontal vertical aggregation factor) three integers (also aggregating layers) fun function used aggregate values. Either actual function, following, name: \"mean\", \"max\", \"min\", \"median\", \"sum\", \"modal\", \"\", \"\", \"prod\", \".min\", \".max\", \"table\", \"sd\" (sample standard deviation) \"std\" (population standard deviation) ... additional arguments passed fun, na.rm=TRUE cores positive integer. cores > 1, 'parallel' package cluster many cores created. Ignored C++ level implemented functions listed fun filename character. Output filename overwrite logical. TRUE, filename overwritten wopt list named options writing files writeRaster character. variable(s) used group geometries dissolve logical. borders aggregated geometries dissolved? count logical. TRUE NULL, variable \"agg_n\" included shows number input geometries output geometry","code":""},{"path":"https://rspatial.github.io/terra/reference/aggregate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Aggregate raster or vector data — aggregate","text":"Aggregation starts upper-left end SpatRaster. division number columns rows factor return integer, extent resulting SpatRaster somewhat larger original SpatRaster. example, input SpatRaster 100 columns, fact=12, output SpatRaster 9 columns maximum x coordinate output SpatRaster also adjusted. function fun take multiple numbers, return one numeric values. multiple numbers returned, length returned vector always , also, example, input NA values. reason, range works, unique fail cases.","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/aggregate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate raster or vector data — aggregate","text":"SpatRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/aggregate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aggregate raster or vector data — aggregate","text":"","code":"r <- rast() # aggregated SpatRaster, no values ra <- aggregate(r, fact=10)  values(r) <- runif(ncell(r)) # aggregated raster, max of the values ra <- aggregate(r, fact=10, fun=max)  # multiple layers s <- c(r, r*2) x <- aggregate(s, 20)   ## SpatVector  f <- system.file(\"ex/lux.shp\", package=\"terra\") v <- vect(f) va <- aggregate(v, \"ID_1\")  plot(va, \"NAME_1\", lwd=5, plg=list(x=\"topright\"), mar=rep(2,4)) lines(v, lwd=3, col=\"light gray\") lines(va) text(v, \"ID_1\", halo=TRUE)"},{"path":"https://rspatial.github.io/terra/reference/align.html","id":null,"dir":"Reference","previous_headings":"","what":"Align a SpatExtent — align","title":"Align a SpatExtent — align","text":"Align SpatExtent SpatRaster can useful create new SpatRaster origin resolution existing SpatRaster. use force data match really match (use e.g. resample (dis)aggregate ). also possible align SpatExtent clean divisor.","code":""},{"path":"https://rspatial.github.io/terra/reference/align.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Align a SpatExtent — align","text":"","code":"# S4 method for class 'SpatExtent,SpatRaster' align(x, y, snap=\"near\")  # S4 method for class 'SpatExtent,numeric' align(x, y)"},{"path":"https://rspatial.github.io/terra/reference/align.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Align a SpatExtent — align","text":"x SpatExtent y SpatRaster numeric snap Character. One \"near\", \"\", \"\", determine direction extent aligned. nearest border, inwards outwards","code":""},{"path":"https://rspatial.github.io/terra/reference/align.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Align a SpatExtent — align","text":"SpatExtent","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/align.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Align a SpatExtent — align","text":"","code":"r <- rast() e <- ext(-10.1, 9.9, -20.1, 19.9) ea <- align(e, r) e #> SpatExtent : -10.1, 9.9, -20.1, 19.9 (xmin, xmax, ymin, ymax) ext(r) #> SpatExtent : -180, 180, -90, 90 (xmin, xmax, ymin, ymax) ea #> SpatExtent : -10, 10, -20, 20 (xmin, xmax, ymin, ymax)  align(e, 0.5) #> SpatExtent : -10.5, 10, -20.5, 20 (xmin, xmax, ymin, ymax)"},{"path":"https://rspatial.github.io/terra/reference/all.equal.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare two SpatRasters for equality — all.equal","title":"Compare two SpatRasters for equality — all.equal","text":"Compare two SpatRasters (near) equality. First attributes objects compared. , (perhaps small) sample raster cells compared well. sample size used can increased maxcell argument. can set Inf, large rasters computer may sufficient memory. See examples safe way compare values.","code":""},{"path":"https://rspatial.github.io/terra/reference/all.equal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare two SpatRasters for equality — all.equal","text":"","code":"# S4 method for class 'SpatRaster,SpatRaster' all.equal(target, current, maxcell=100000, ...)"},{"path":"https://rspatial.github.io/terra/reference/all.equal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare two SpatRasters for equality — all.equal","text":"target SpatRaster current SpatRaster maxcell positive integer. size regular sample used compare cell values ... additional arguments passed .equal.numeric compare cell values","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/all.equal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare two SpatRasters for equality — all.equal","text":"Either TRUE character vector describing differences target current.","code":""},{"path":"https://rspatial.github.io/terra/reference/all.equal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare two SpatRasters for equality — all.equal","text":"","code":"x <- sqrt(1:100) mat <- matrix(x, 10, 10) r1 <- rast(nrows=10, ncols=10, xmin=0, vals = x) r2 <- rast(nrows=10, ncols=10, xmin=0, vals = mat)  all.equal(r1, r2) #> [1] \"Mean relative difference: 0.3858482\" all.equal(r1, r1*1) #> [1] TRUE all.equal(rast(r1), rast(r2)) #> [1] TRUE  # compare geometries  compareGeom(r1, r2) #> [1] TRUE  # Compare all cell values for near equality # as floating point number imprecision can be a problem m <- minmax(r1 - r2) all(abs(m) < 1e-7) #> [1] FALSE  # comparison of cell values to create new SpatRaster e <- r1 == r2"},{"path":"https://rspatial.github.io/terra/reference/animate.html","id":null,"dir":"Reference","previous_headings":"","what":"Animate a SpatRaster — animate","title":"Animate a SpatRaster — animate","text":"Animate (sequentially plot) layers SpatRaster create movie. work R-Studio.","code":""},{"path":"https://rspatial.github.io/terra/reference/animate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Animate a SpatRaster — animate","text":"","code":"# S4 method for class 'SpatRaster' animate(x, pause=0.25, main, range, maxcell=50000, n=1, ...)"},{"path":"https://rspatial.github.io/terra/reference/animate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Animate a SpatRaster — animate","text":"x SpatRaster pause numeric. long pause layers? main title layer. supplied z-value used available. Otherwise names used. range numeric vector length 2. Range values plot maxcell positive integer. Maximum number cells use plot. maxcell < ncell(x), spatSample(type=\"regular\") used plotting n integer > 0. Number loops ... Additional arguments passed plot","code":""},{"path":"https://rspatial.github.io/terra/reference/animate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Animate a SpatRaster — animate","text":"None","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/animate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Animate a SpatRaster — animate","text":"","code":"s <- rast(system.file(\"ex/logo.tif\", package=\"terra\"))    animate(s, n=1)"},{"path":"https://rspatial.github.io/terra/reference/app.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply a function to the cells of a SpatRaster — app","title":"Apply a function to the cells of a SpatRaster — app","text":"Apply function values cell SpatRaster. Similar apply – think layer SpatRaster column (row) matrix. generally used summarize values multiple layers one layer; required. app calls function fun raster data first argument. Depending function supplied, raster data represented either matrix layer column, vector representing cell. function return vector matrix divisible ncell(x). Thus, \"sum\" \"rowSums\" can used, \"colSums\" used. can also apply function fun across datasets layer SpatRasterDataset. case, summarization layer across SpatRasters.","code":""},{"path":"https://rspatial.github.io/terra/reference/app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply a function to the cells of a SpatRaster — app","text":"","code":"# S4 method for class 'SpatRaster' app(x, fun, ..., cores=1, filename=\"\", overwrite=FALSE, wopt=list())  # S4 method for class 'SpatRasterDataset' app(x, fun, ..., cores=1, filename=\"\", overwrite=FALSE, wopt=list())"},{"path":"https://rspatial.github.io/terra/reference/app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply a function to the cells of a SpatRaster — app","text":"x SpatRaster SpatRasterDataset fun function operates vector matrix. can function defined base-R package, function write (see examples). Functions return complex output (e.g. list) may need wrapped function simplify output vector matrix. following functions re-implemented C++ speed: \"sum\", \"mean\", \"median\", \"modal\", \"\", \".min\", \".max\", \"min\", \"max\", \"prod\", \"\", \"\", \"sd\", \"std\", \"first\". use base-R function say, \"min\", use something like fun=function() min() equivalent fun = \\() min() ... additional arguments fun. typically numerical constants. *never* another SpatRaster cores positive integer. cores > 1, 'parallel' package cluster many cores created used. can also supply cluster object. Ignored functions implemented terra C++ (see fun) filename character. Output filename overwrite logical. TRUE, filename overwritten wopt list named options writing files writeRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/app.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply a function to the cells of a SpatRaster — app","text":"SpatRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/app.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply a function to the cells of a SpatRaster — app","text":"speed things , parallelization supported, often helpful, may actually slower. speed gain many cores (> 8) /complex (slow) function fun. write fun , consider supplying cppFunction made Rcpp package instead (go cup tea computer works ).","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/app.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply a function to the cells of a SpatRaster — app","text":"","code":"r <- rast(ncols=10, nrows=10) values(r) <- 1:ncell(r) x <- c(r, sqrt(r), r+50) s <- app(x, fun=sum) s #> class       : SpatRaster  #> dimensions  : 10, 10, 1  (nrow, ncol, nlyr) #> resolution  : 36, 18  (x, y) #> extent      : -180, 180, -90, 90  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (CRS84) (OGC:CRS84)  #> source(s)   : memory #> name        : sum  #> min value   :  53  #> max value   : 260  # for a few generic functions like  # \"sum\", \"mean\", and \"max\" you can also do sum(x) #> class       : SpatRaster  #> dimensions  : 10, 10, 1  (nrow, ncol, nlyr) #> resolution  : 36, 18  (x, y) #> extent      : -180, 180, -90, 90  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (CRS84) (OGC:CRS84)  #> source(s)   : memory #> name        : sum  #> min value   :  53  #> max value   : 260   ## SpatRasterDataset sd <- sds(x, x*2, x/3) a <- app(sd, max) a #> class       : SpatRaster  #> dimensions  : 10, 10, 3  (nrow, ncol, nlyr) #> resolution  : 36, 18  (x, y) #> extent      : -180, 180, -90, 90  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (CRS84) (OGC:CRS84)  #> source(s)   : memory #> names       : lyr.1, lyr.1, lyr.1  #> min values  :     2,     2,   102  #> max values  :   200,    20,   300  # same as  max(x, x*2, x/3) #> class       : SpatRaster  #> dimensions  : 10, 10, 3  (nrow, ncol, nlyr) #> resolution  : 36, 18  (x, y) #> extent      : -180, 180, -90, 90  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (CRS84) (OGC:CRS84)  #> source(s)   : memory #> names       : lyr.1, lyr.1, lyr.1  #> min values  :     2,     2,   102  #> max values  :   200,    20,   300  # and as (but slower) b <- app(sd, function(i) max(i))   ## also works for a single layer f <- function(i) (i+1) * 2 * i + sqrt(i) s <- app(r, f) # same as above, but that is not memory-safe # and has no filename argument  s <- f(r)  if (FALSE) { # \\dontrun{ #### multiple cores  test0 <- app(x, sqrt)  test1 <- app(x, sqrt, cores=2)  testfun <- function(i) { 2 * sqrt(i) } test2 <- app(x, fun=testfun, cores =2)  ## this fails because testfun is not exported to the nodes # test3 <- app(x, fun=function(i) testfun(i), cores=2) ## to export it, add it as argument to fun test3 <- app(x, fun=function(i, ff) ff(i), cores =3, ff=testfun) } # }"},{"path":"https://rspatial.github.io/terra/reference/approximate.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate values for cell values that are NA by interpolating between layers — approximate","title":"Estimate values for cell values that are NA by interpolating between layers — approximate","text":"approximate uses stats function approx estimate values cells NA interpolation across layers. Layers considered equidistant, unless argument z used, time(x) returns values NA, case values used determine distance layers. estimation based neighboring cells see focal","code":""},{"path":"https://rspatial.github.io/terra/reference/approximate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate values for cell values that are NA by interpolating between layers — approximate","text":"","code":"# S4 method for class 'SpatRaster' approximate(x, method=\"linear\", yleft, yright,             rule=1, f=0, ties=mean, z=NULL, NArule=1,filename=\"\",  ...)"},{"path":"https://rspatial.github.io/terra/reference/approximate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate values for cell values that are NA by interpolating between layers — approximate","text":"x SpatRaster method specifies interpolation method used. Choices \"linear\" \"constant\" (step function; see example approx yleft value returned non-NA value encountered. default defined value rule given yright value returned last non-NA value encountered. default defined value rule given rule integer (length 1 2) describing interpolation take place first last cells (non-NA values encountered). rule 1 NAs returned points 2, value closest data extreme used. Use, e.g., rule = 2:1, left right side extrapolation differ f method = \"constant\" number 0 1 inclusive, indicating compromise left- right-continuous step functions. y0 y1 values left right point value y0*(1-f)+y1*f f = 0) right-continuous f = 1 left-continuous ties Handling tied 'z' values. Either function single vector argument returning single number result string \"ordered\" z numeric vector indicate distance layers (e.g., depth). default time(x) NA else 1:nlys(x) NArule single integer used determine single layer non-NA value encountered (linear interpolation possible). default value 1 indicates layers get value cell; values change cell values filename character. Output filename ... additional arguments writing files writeRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/approximate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate values for cell values that are NA by interpolating between layers — approximate","text":"SpatRaster","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/approximate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate values for cell values that are NA by interpolating between layers — approximate","text":"","code":"r <- rast(ncols=5, nrows=5) r1 <- setValues(r, runif(ncell(r))) r2 <- setValues(r, runif(ncell(r))) r3 <- setValues(r, runif(ncell(r))) r4 <- setValues(r, runif(ncell(r))) r5 <- setValues(r, NA) r6 <- setValues(r, runif(ncell(r))) r1[6:10] <- NA r2[5:15] <- NA r3[8:25] <- NA s <- c(r1,r2,r3,r4,r5,r6) s[1:5] <- NA x1 <- approximate(s) x2 <- approximate(s, rule=2) x3 <- approximate(s, rule=2, z=c(1,2,3,5,14,15))"},{"path":"https://rspatial.github.io/terra/reference/arith-generic.html","id":null,"dir":"Reference","previous_headings":"","what":"Arithmetic — Arith-methods","title":"Arithmetic — Arith-methods","text":"Standard arithmetic operators computations SpatRasters. Computations local (applied cell cell basis). multiple SpatRasters used, must geometry (extent resolution). operators implemented: +, -, *, /, ^, %%, %/% can also use SpatRaster vector matrix. use SpatRaster vector multiple numbers, element vector considered layer (constant value). use SpatRaster matrix, number columns matrix must match number layers SpatRaster. rows used match cells. , two rows, match cells 1 2, recycled 3 4, etc. following methods implemented (SpatExtent, SpatExtent): +, -, following (SpatExtent, numeric): +, -, *, /, %%","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/arith-generic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Arithmetic — Arith-methods","text":"SpatRaster SpatExtent","code":""},{"path":"https://rspatial.github.io/terra/reference/arith-generic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Arithmetic — Arith-methods","text":"","code":"r1 <- rast(ncols=10, nrows=10) v <- runif(ncell(r1)) v[10:20] <- NA values(r1) <- v r2 <- rast(r1) values(r2) <- 1:ncell(r2) / ncell(r2) r3 <- r1 + r2 r2 <- r1 / 10 r3 <- r1 * (r2 - 1 / r2)  b <- c(r1, r2, r3) b2 <- b * 10  ### SpatExtent methods x <- ext(0.1, 2.2, 0, 3) y <- ext(-2, 1, -2,2) # union x + y #> SpatExtent : -2, 2.2, -2, 3 (xmin, xmax, ymin, ymax) # intersection x * y #> SpatExtent : 0.1, 1, 0, 2 (xmin, xmax, ymin, ymax)  e <- x  e #> SpatExtent : 0.1, 2.2, 0, 3 (xmin, xmax, ymin, ymax) e * 2 #> SpatExtent : -0.95, 3.25, -1.5, 4.5 (xmin, xmax, ymin, ymax) e / 2 #> SpatExtent : 0.625, 1.675, 0.75, 2.25 (xmin, xmax, ymin, ymax) e + 1 #> SpatExtent : -0.9, 3.2, -1, 4 (xmin, xmax, ymin, ymax) e - 1 #> SpatExtent : 1.1, 1.2, 1, 2 (xmin, xmax, ymin, ymax)"},{"path":"https://rspatial.github.io/terra/reference/as.character.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a text representation of (the skeleton of) an object — as.character","title":"Create a text representation of (the skeleton of) an object — as.character","text":"Create text representation (skeleton ) object","code":""},{"path":"https://rspatial.github.io/terra/reference/as.character.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a text representation of (the skeleton of) an object — as.character","text":"","code":"# S4 method for class 'SpatExtent' as.character(x)  # S4 method for class 'SpatRaster' as.character(x)"},{"path":"https://rspatial.github.io/terra/reference/as.character.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a text representation of (the skeleton of) an object — as.character","text":"x SpatRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/as.character.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a text representation of (the skeleton of) an object — as.character","text":"character","code":""},{"path":"https://rspatial.github.io/terra/reference/as.character.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a text representation of (the skeleton of) an object — as.character","text":"","code":"r <- rast() ext(r) #> SpatExtent : -180, 180, -90, 90 (xmin, xmax, ymin, ymax) ext(c(0, 20, 0, 20)) #> SpatExtent : 0, 20, 0, 20 (xmin, xmax, ymin, ymax)"},{"path":"https://rspatial.github.io/terra/reference/as.data.frame.html","id":null,"dir":"Reference","previous_headings":"","what":"SpatRaster or SpatVector to data.frame — as.data.frame","title":"SpatRaster or SpatVector to data.frame — as.data.frame","text":"Coerce SpatRaster SpatVector data.frame","code":""},{"path":"https://rspatial.github.io/terra/reference/as.data.frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SpatRaster or SpatVector to data.frame — as.data.frame","text":"","code":"# S4 method for class 'SpatVector' as.data.frame(x, row.names=NULL, optional=FALSE, geom=NULL, ...)  # S4 method for class 'SpatRaster' as.data.frame(x, row.names=NULL, optional=FALSE, xy=FALSE,    cells=FALSE, time=FALSE, na.rm=NA, wide=TRUE, ...)"},{"path":"https://rspatial.github.io/terra/reference/as.data.frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SpatRaster or SpatVector to data.frame — as.data.frame","text":"x SpatRaster SpatVector geom character NULL. NULL, either \"WKT\" \"HEX\", get geometry included Well-Known-Text hexadecimal notation. x point geometry, can also \"XY\" add coordinates point xy logical. TRUE, coordinates raster cell included time logical. TRUE, time data included (available) na.rm logical. TRUE, cells NA value least one layer removed. argument set NA cells NA values layers removed cells logical. TRUE, cell numbers raster cell included wide logical. FALSE, data.frame returned \"long\" format ... Additional arguments passed data.frame row.names argument ignored optional argument ignored","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/as.data.frame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SpatRaster or SpatVector to data.frame — as.data.frame","text":"data.frame","code":""},{"path":"https://rspatial.github.io/terra/reference/as.data.frame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SpatRaster or SpatVector to data.frame — as.data.frame","text":"","code":"f <- system.file(\"ex/lux.shp\", package=\"terra\") v <- vect(f) as.data.frame(v) #>    ID_1       NAME_1 ID_2           NAME_2 AREA    POP #> 1     1     Diekirch    1         Clervaux  312  18081 #> 2     1     Diekirch    2         Diekirch  218  32543 #> 3     1     Diekirch    3          Redange  259  18664 #> 4     1     Diekirch    4          Vianden   76   5163 #> 5     1     Diekirch    5            Wiltz  263  16735 #> 6     2 Grevenmacher    6       Echternach  188  18899 #> 7     2 Grevenmacher    7           Remich  129  22366 #> 8     2 Grevenmacher   12     Grevenmacher  210  29828 #> 9     3   Luxembourg    8         Capellen  185  48187 #> 10    3   Luxembourg    9 Esch-sur-Alzette  251 176820 #> 11    3   Luxembourg   10       Luxembourg  237 182607 #> 12    3   Luxembourg   11           Mersch  233  32112"},{"path":"https://rspatial.github.io/terra/reference/as.lines.html","id":null,"dir":"Reference","previous_headings":"","what":"Conversion to a SpatVector of lines — as.lines","title":"Conversion to a SpatVector of lines — as.lines","text":"Conversion SpatRaster, SpatVector SpatExtent SpatVector lines.","code":""},{"path":"https://rspatial.github.io/terra/reference/as.lines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conversion to a SpatVector of lines — as.lines","text":"","code":"# S4 method for class 'SpatRaster' as.lines(x)  # S4 method for class 'SpatVector' as.lines(x)  # S4 method for class 'SpatExtent' as.lines(x, crs=\"\")  # S4 method for class 'matrix' as.lines(x, crs=\"\")"},{"path":"https://rspatial.github.io/terra/reference/as.lines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conversion to a SpatVector of lines — as.lines","text":"x SpatRaster, SpatVector, SpatExtent matrix. x matrix two columns single line, four columns, row start end coordinates (x, y) lines crs character. coordinate reference system (see crs)","code":""},{"path":"https://rspatial.github.io/terra/reference/as.lines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conversion to a SpatVector of lines — as.lines","text":"SpatVector","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/as.lines.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Conversion to a SpatVector of lines — as.lines","text":"","code":"r <- rast(ncols=2, nrows=2) values(r) <- 1:ncell(r)  as.lines(r) #>  class       : SpatVector  #>  geometry    : lines  #>  dimensions  : 6, 0  (geometries, attributes) #>  extent      : -180, 180, -90, 90  (xmin, xmax, ymin, ymax) #>  coord. ref. : lon/lat WGS 84 (CRS84) (OGC:CRS84)   as.lines(ext(r), crs=crs(r)) #>  class       : SpatVector  #>  geometry    : lines  #>  dimensions  : 1, 0  (geometries, attributes) #>  extent      : -180, 180, -90, 90  (xmin, xmax, ymin, ymax) #>  coord. ref. : lon/lat WGS 84 (CRS84) (OGC:CRS84)   p <- as.polygons(r) as.lines(p) #>  class       : SpatVector  #>  geometry    : lines  #>  dimensions  : 4, 1  (geometries, attributes) #>  extent      : -180, 180, -90, 90  (xmin, xmax, ymin, ymax) #>  coord. ref. : lon/lat WGS 84 (CRS84) (OGC:CRS84)  #>  names       : lyr.1 #>  type        : <int> #>  values      :     1 #>                    2 #>                    3   ## with a matrix s <- cbind(1:5, 1:5) e <- cbind(1:5, 0)  as.lines(s) #>  class       : SpatVector  #>  geometry    : lines  #>  dimensions  : 1, 0  (geometries, attributes) #>  extent      : 1, 5, 1, 5  (xmin, xmax, ymin, ymax) #>  coord. ref. :   as.lines(cbind(s, e), \"+proj=longlat\") #>  class       : SpatVector  #>  geometry    : lines  #>  dimensions  : 5, 0  (geometries, attributes) #>  extent      : 1, 5, 0, 5  (xmin, xmax, ymin, ymax) #>  coord. ref. : +proj=longlat +datum=WGS84 +no_defs"},{"path":"https://rspatial.github.io/terra/reference/as.list.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce a Spat* object to a list — as.list","title":"Coerce a Spat* object to a list — as.list","text":"Coerce SpatRaster, SpatRasterCollection, SpatRasterDataset, SpatVector SpatVectorCollection list. SpatRaster, layer becomes list element. SpatRasterCollection SpatRasterDataset, SpatRaster becomes list element. SpatVector, variable (attribute) becomes list element. SpatVectorCollection, SpatVector becomes list element.","code":""},{"path":"https://rspatial.github.io/terra/reference/as.list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce a Spat* object to a list — as.list","text":"","code":"# S4 method for class 'SpatRaster' as.list(x, geom=NULL, ...)  # S4 method for class 'SpatRasterCollection' as.list(x, ...)  # S4 method for class 'SpatVector' as.list(x, geom=NULL, ...)  # S4 method for class 'SpatVectorCollection' as.list(x, ...)"},{"path":"https://rspatial.github.io/terra/reference/as.list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce a Spat* object to a list — as.list","text":"x SpatRaster, SpatRasterDataset, SpatRasterCollection, SpatVector geom character NULL. NULL, x SpatVector, either \"WKT\" \"HEX\", get geometry included Well-Known-Text hexadecimal notation. x point geometry, can also bey \"XY\" add coordinates point. x SpatRaster, value NULL return list parameters describing geometry SpatRaster returned ... additional arguments. ignored","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/as.list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce a Spat* object to a list — as.list","text":"list","code":""},{"path":"https://rspatial.github.io/terra/reference/as.list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce a Spat* object to a list — as.list","text":"","code":"f <- system.file(\"ex/lux.shp\", package=\"terra\") v <- vect(f) as.list(v) #> $ID_1 #>  [1] 1 1 1 1 1 2 2 2 3 3 3 3 #>  #> $NAME_1 #>  [1] \"Diekirch\"     \"Diekirch\"     \"Diekirch\"     \"Diekirch\"     \"Diekirch\"     #>  [6] \"Grevenmacher\" \"Grevenmacher\" \"Grevenmacher\" \"Luxembourg\"   \"Luxembourg\"   #> [11] \"Luxembourg\"   \"Luxembourg\"   #>  #> $ID_2 #>  [1]  1  2  3  4  5  6  7 12  8  9 10 11 #>  #> $NAME_2 #>  [1] \"Clervaux\"         \"Diekirch\"         \"Redange\"          \"Vianden\"          #>  [5] \"Wiltz\"            \"Echternach\"       \"Remich\"           \"Grevenmacher\"     #>  [9] \"Capellen\"         \"Esch-sur-Alzette\" \"Luxembourg\"       \"Mersch\"           #>  #> $AREA #>  [1] 312 218 259  76 263 188 129 210 185 251 237 233 #>  #> $POP #>  [1]  18081  32543  18664   5163  16735  18899  22366  29828  48187 176820 #> [11] 182607  32112 #>    s <- rast(system.file(\"ex/logo.tif\", package=\"terra\")) + 1   as.list(s) #> [[1]] #> class       : SpatRaster  #> dimensions  : 77, 101, 1  (nrow, ncol, nlyr) #> resolution  : 1, 1  (x, y) #> extent      : 0, 101, 0, 77  (xmin, xmax, ymin, ymax) #> coord. ref. : Cartesian (Meter)  #> source(s)   : memory #> varname     : logo  #> name        : red  #> min value   :   1  #> max value   : 256  #>  #> [[2]] #> class       : SpatRaster  #> dimensions  : 77, 101, 1  (nrow, ncol, nlyr) #> resolution  : 1, 1  (x, y) #> extent      : 0, 101, 0, 77  (xmin, xmax, ymin, ymax) #> coord. ref. : Cartesian (Meter)  #> source(s)   : memory #> varname     : logo  #> name        : green  #> min value   :     1  #> max value   :   256  #>  #> [[3]] #> class       : SpatRaster  #> dimensions  : 77, 101, 1  (nrow, ncol, nlyr) #> resolution  : 1, 1  (x, y) #> extent      : 0, 101, 0, 77  (xmin, xmax, ymin, ymax) #> coord. ref. : Cartesian (Meter)  #> source(s)   : memory #> varname     : logo  #> name        : blue  #> min value   :    1  #> max value   :  256  #>"},{"path":"https://rspatial.github.io/terra/reference/as.points.html","id":null,"dir":"Reference","previous_headings":"","what":"Conversion to a SpatVector of points — as.points","title":"Conversion to a SpatVector of points — as.points","text":"Conversion SpatRaster, SpatVector SpatExtent SpatVector points.","code":""},{"path":"https://rspatial.github.io/terra/reference/as.points.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conversion to a SpatVector of points — as.points","text":"","code":"# S4 method for class 'SpatRaster' as.points(x, values=TRUE, na.rm=TRUE, na.all=FALSE)  # S4 method for class 'SpatVector' as.points(x, multi=FALSE, skiplast=TRUE)  # S4 method for class 'SpatExtent' as.points(x, crs=\"\")"},{"path":"https://rspatial.github.io/terra/reference/as.points.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conversion to a SpatVector of points — as.points","text":"x SpatRaster, SpatVector SpatExtent values logical; include cell values attributes? multi logical. TRUE multi-point geometry returned skiplast logical. TRUE last point polygon (first point) included na.rm logical. TRUE cells NA ignored na.logical. TRUE cells ignored na.rm=TRUE value NA layers instead layer crs character. coordinate reference system (see crs)","code":""},{"path":"https://rspatial.github.io/terra/reference/as.points.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conversion to a SpatVector of points — as.points","text":"SpatVector","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/as.points.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Conversion to a SpatVector of points — as.points","text":"","code":"r <- rast(ncols=2, nrows=2) values(r) <- 1:ncell(r)  as.points(r) #>  class       : SpatVector  #>  geometry    : points  #>  dimensions  : 4, 1  (geometries, attributes) #>  extent      : -90, 90, -45, 45  (xmin, xmax, ymin, ymax) #>  coord. ref. : lon/lat WGS 84 (CRS84) (OGC:CRS84)  #>  names       : lyr.1 #>  type        : <num> #>  values      :     1 #>                    2 #>                    3  p <- as.polygons(r) as.points(p) #>  class       : SpatVector  #>  geometry    : points  #>  dimensions  : 16, 1  (geometries, attributes) #>  extent      : -180, 180, -90, 90  (xmin, xmax, ymin, ymax) #>  coord. ref. : lon/lat WGS 84 (CRS84) (OGC:CRS84)  #>  names       : lyr.1 #>  type        : <int> #>  values      :     1 #>                    1 #>                    1"},{"path":"https://rspatial.github.io/terra/reference/as.polygons.html","id":null,"dir":"Reference","previous_headings":"","what":"Conversion to a SpatVector of polygons — as.polygons","title":"Conversion to a SpatVector of polygons — as.polygons","text":"Conversion SpatRaster, SpatVector SpatExtent SpatVector polygons.","code":""},{"path":"https://rspatial.github.io/terra/reference/as.polygons.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conversion to a SpatVector of polygons — as.polygons","text":"","code":"# S4 method for class 'SpatRaster' as.polygons(x, round=TRUE, aggregate=TRUE, values=TRUE,     na.rm=TRUE, na.all=FALSE, extent=FALSE, digits=0, ...)  # S4 method for class 'SpatVector' as.polygons(x, extent=FALSE)  # S4 method for class 'SpatExtent' as.polygons(x, crs=\"\")"},{"path":"https://rspatial.github.io/terra/reference/as.polygons.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conversion to a SpatVector of polygons — as.polygons","text":"x SpatRaster, SpatVector SpatExtent round logical; TRUE aggregate=TRUE, values rounded aggregation. value FALSE SpatVector returned can many polygons can large aggregate logical; combine cells values? TRUE first layer x processed values logical; include cell values attributes? extent logical. TRUE, polygon extent SpatRaster SpatVector returned. x SpatRaster, polygon vertices row column, just four corners raster. can useful precise projection. required, efficient get extent represented four corners .polygons(ext(x), crs=crs(x)) na.rm logical. TRUE cells NA ignored na.logical. TRUE cells ignored na.rm=TRUE value NA layers instead layer digits integer. number digits rounding (round=TRUE) crs character. coordinate reference system (see crs) ... additional arguments. backward compatibility. removed future","code":""},{"path":"https://rspatial.github.io/terra/reference/as.polygons.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conversion to a SpatVector of polygons — as.polygons","text":"SpatVector","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/as.polygons.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Conversion to a SpatVector of polygons — as.polygons","text":"","code":"r <- rast(ncols=2, nrows=2) values(r) <- 1:ncell(r)  p <- as.polygons(r) p #>  class       : SpatVector  #>  geometry    : polygons  #>  dimensions  : 4, 1  (geometries, attributes) #>  extent      : -180, 180, -90, 90  (xmin, xmax, ymin, ymax) #>  coord. ref. : lon/lat WGS 84 (CRS84) (OGC:CRS84)  #>  names       : lyr.1 #>  type        : <int> #>  values      :     1 #>                    2 #>                    3"},{"path":"https://rspatial.github.io/terra/reference/as.raster.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce to a ","title":"Coerce to a ","text":"Implementation generic .raster function create \"raster\" (small r) object. objects can used plotting rasterImage function. CONFUSED Raster* (big R) objects defined 'raster' package!","code":""},{"path":"https://rspatial.github.io/terra/reference/as.raster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce to a ","text":"","code":"# S4 method for class 'SpatRaster' as.raster(x, maxcell=500000, col)"},{"path":"https://rspatial.github.io/terra/reference/as.raster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce to a ","text":"x SpatRaster maxcell positive integer. Maximum number cells use plot col vector colors. default map.pal(\"viridis\", 100)","code":""},{"path":"https://rspatial.github.io/terra/reference/as.raster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce to a ","text":"'raster' object","code":""},{"path":"https://rspatial.github.io/terra/reference/as.raster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce to a ","text":"","code":"r <- rast(ncols=3, nrows=3) values(r) <- 1:ncell(r) as.raster(r) #>      [,1]      [,2]      [,3]      #> [1,] \"#440154\" \"#472B7A\" \"#3A528B\" #> [2,] \"#2C718E\" \"#218F8D\" \"#27AD80\" #> [3,] \"#5BC863\" \"#ADDC2F\" \"#FDE725\""},{"path":"https://rspatial.github.io/terra/reference/atan2.html","id":null,"dir":"Reference","previous_headings":"","what":"Two argument arc-tangent — atan2","title":"Two argument arc-tangent — atan2","text":"SpatRasters x y, atan2(y, x) returns angle radians tangent y/x, handling case x zero. See Trig See Math-methods trigonometric mathematical functions can used SpatRasters.","code":""},{"path":"https://rspatial.github.io/terra/reference/atan2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Two argument arc-tangent — atan2","text":"","code":"# S4 method for class 'SpatRaster,SpatRaster' atan2(y, x)  # S4 method for class 'SpatRaster,SpatRaster' atan_2(y, x, filename, ...)"},{"path":"https://rspatial.github.io/terra/reference/atan2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Two argument arc-tangent — atan2","text":"y SpatRaster x SpatRaster filename character. Output filename ... additional arguments writing files writeRaster","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/atan2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Two argument arc-tangent — atan2","text":"","code":"r1 <- rast(nrows=10, ncols=10) r2 <- rast(nrows=10, ncols=10) values(r1) <- (runif(ncell(r1))-0.5) * 10 values(r2) <- (runif(ncell(r1))-0.5) * 10 atan2(r1, r2) #> class       : SpatRaster  #> dimensions  : 10, 10, 1  (nrow, ncol, nlyr) #> resolution  : 36, 18  (x, y) #> extent      : -180, 180, -90, 90  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (CRS84) (OGC:CRS84)  #> source(s)   : memory #> name        :     lyr.1  #> min value   : -3.125421  #> max value   :  2.948635"},{"path":"https://rspatial.github.io/terra/reference/autocor.html","id":null,"dir":"Reference","previous_headings":"","what":"Spatial autocorrelation — autocorrelation","title":"Spatial autocorrelation — autocorrelation","text":"Compute spatial autocorrelation numeric vector SpatRaster. can compute standard (global) Moran's Geary's C, local indicators spatial autocorrelation (Anselin, 1995).","code":""},{"path":"https://rspatial.github.io/terra/reference/autocor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spatial autocorrelation — autocorrelation","text":"","code":"# S4 method for class 'numeric' autocor(x, w, method=\"moran\")  # S4 method for class 'SpatRaster' autocor(x, w=matrix(c(1,1,1,1,0,1,1,1,1),3), method=\"moran\", global=TRUE)"},{"path":"https://rspatial.github.io/terra/reference/autocor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spatial autocorrelation — autocorrelation","text":"x numeric SpatRaster w Spatial weights defined rectangular matrix. SpatRaster matrix must sides must odd length (3, 5, ...) global logical. TRUE global autocorrelation computed instead local autocorrelation method character. x numeric SpatRaster: \"moran\" Moran's \"geary\" Geary's C. x numeric also: \"Gi\", \"Gi*\" (Getis-Ord statistics), locmor (local Moran's ) \"mean\" (local mean)","code":""},{"path":"https://rspatial.github.io/terra/reference/autocor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Spatial autocorrelation — autocorrelation","text":"numeric SpatRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/autocor.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Spatial autocorrelation — autocorrelation","text":"default setting uses 3x3 neighborhood compute \"Queen's case\" indices. can use filter (weights matrix) things, \"Rook's case\", different lags.","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/autocor.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Spatial autocorrelation — autocorrelation","text":"Moran, P..P., 1950. Notes continuous stochastic phenomena. Biometrika 37:17-23 Geary, R.C., 1954. contiguity ratio statistical mapping. Incorporated Statistician 5: 115-145 Anselin, L., 1995. Local indicators spatial association-LISA. Geographical Analysis 27:93-115 https://en.wikipedia.org/wiki/Indicators_of_spatial_association","code":""},{"path":"https://rspatial.github.io/terra/reference/autocor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Spatial autocorrelation — autocorrelation","text":"","code":"### raster r <- rast(nrows=10, ncols=10, xmin=0) values(r) <- 1:ncell(r)  autocor(r) #>     lyr.1  #> 0.8362573   # rook's case neighbors f <- matrix(c(0,1,0,1,0,1,0,1,0), nrow=3) autocor(r, f) #>     lyr.1  #> 0.8888889   # local  rc <- autocor(r, w=f, global=FALSE)  ### numeric (for vector data) f <- system.file(\"ex/lux.shp\", package=\"terra\") v <- vect(f) w <- relate(v, relation=\"touches\")  # global autocor(v$AREA, w) #> [1] -0.1531971  # local v$Gi <- autocor(v$AREA, w, \"Gi\")  plot(v, \"Gi\")"},{"path":"https://rspatial.github.io/terra/reference/barplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Bar plot of a SpatRaster — barplot","title":"Bar plot of a SpatRaster — barplot","text":"Create barplot values first layer SpatRaster. large datasets regular sample size approximately maxcells used.","code":""},{"path":"https://rspatial.github.io/terra/reference/barplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bar plot of a SpatRaster — barplot","text":"","code":"# S4 method for class 'SpatRaster' barplot(height, maxcell=1000000, digits=0, breaks=NULL, col, ...)"},{"path":"https://rspatial.github.io/terra/reference/barplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bar plot of a SpatRaster — barplot","text":"height SpatRaster maxcell integer. regularly subsample large datasets digits integer used determine round values tabulating. Set NULL large number want rounding breaks breaks used group data cut col color generating function rainbow (default), vector colors ... additional arguments plotting barplot","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/barplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bar plot of a SpatRaster — barplot","text":"numeric vector (matrix, beside = TRUE) coordinates bar midpoints, useful adding graph. See barplot","code":""},{"path":"https://rspatial.github.io/terra/reference/barplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bar plot of a SpatRaster — barplot","text":"","code":"f <- system.file(\"ex/elev.tif\", package=\"terra\") r <- rast(f) barplot(r, digits=-1, las=2, ylab=\"Frequency\")   op <- par(no.readonly = TRUE) par(mai = c(1, 2, .5, .5)) barplot(r, breaks=10, col=c(\"red\", \"blue\"), horiz=TRUE, digits=NULL, las=1)  par(op)"},{"path":"https://rspatial.github.io/terra/reference/bestMatch.html","id":null,"dir":"Reference","previous_headings":"","what":"bestMatch — bestMatch","title":"bestMatch — bestMatch","text":"Determine grid cell reference similar . reference consists SpatVector reference locations, data.frame matrix column matches layer name SpatRaster. Similarity computed mean absolute mean squared differences cell reference, alternative function provide. may important first scale input.","code":""},{"path":"https://rspatial.github.io/terra/reference/bestMatch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"bestMatch — bestMatch","text":"","code":"# S4 method for class 'SpatRaster,SpatVector' bestMatch(x, y, labels=NULL, fun=\"squared\", ...,      filename=\"\", overwrite=FALSE, wopt=list())  # S4 method for class 'SpatRaster,data.frame' bestMatch(x, y, labels=NULL, fun=\"squared\", ...,      filename=\"\", overwrite=FALSE, wopt=list())  # S4 method for class 'SpatRaster,matrix' bestMatch(x, y, labels=NULL, fun=\"squared\", ...,      filename=\"\", overwrite=FALSE, wopt=list())"},{"path":"https://rspatial.github.io/terra/reference/bestMatch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"bestMatch — bestMatch","text":"x SpatRaster y SpatVector, data.frame matrix labels character. labels correspond class (row y fun character. One \"abs\" mean absolute difference, \"squared\" mean squared difference. true function like terra:::match_sqr ... additional arguments passed fun. built-functions can na.rm=TRUE filename character. Output filename overwrite logical. TRUE, filename overwritten wopt additional arguments writing files writeRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/bestMatch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"bestMatch — bestMatch","text":"SpatRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/bestMatch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"bestMatch — bestMatch","text":"","code":"f <- system.file(\"ex/logo.tif\", package = \"terra\") r <- rast(f)  # locations of interest  pts <- vect(cbind(c(25.25, 34.324, 43.003), c(54.577, 46.489, 30.905))) pts$code <- LETTERS[1:3]  plot(r) points(pts, pch=20, cex=2, col=\"red\") text(pts, \"code\", pos=4, halo=TRUE)   x <- scale(r)  s1 <- bestMatch(x, pts, labels=pts$code) plot(s1)   # same result e <- extract(x, pts, ID=FALSE) s2 <- bestMatch(x, e, labels=c(\"Ap\", \"Nt\", \"Ms\"))"},{"path":"https://rspatial.github.io/terra/reference/boundaries.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect boundaries (edges) — boundaries","title":"Detect boundaries (edges) — boundaries","text":"Detect boundaries (edges). Boundaries cells one class 4 8 cells surrounding , , classes=FALSE, cells values cells NA.","code":""},{"path":"https://rspatial.github.io/terra/reference/boundaries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect boundaries (edges) — boundaries","text":"","code":"# S4 method for class 'SpatRaster' boundaries(x, classes=FALSE, inner=TRUE,           directions=8, falseval=0, filename=\"\", ...)"},{"path":"https://rspatial.github.io/terra/reference/boundaries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect boundaries (edges) — boundaries","text":"x SpatRaster inner logical. TRUE, \"inner\" boundaries returned, else \"outer\" boundaries returned classes character. Logical. TRUE different values (rounding) distinguished, well NA. FALSE (default) edges NA non-NA cells considered directions integer. cells considered adjacent? 8 (Queen's case) 4 (Rook's case) falseval numeric. value use cells boundary NA filename character. Output filename ... options writing files writeRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/boundaries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect boundaries (edges) — boundaries","text":"SpatRaster. Cell values either 1 (border) 0 (border), NA","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/boundaries.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect boundaries (edges) — boundaries","text":"","code":"r <- rast(nrows=18, ncols=36, xmin=0) r[150:250] <- 1 r[251:450] <- 2 bi <- boundaries(r) bo <- boundaries(r, inner=FALSE) bc <- boundaries(r, classes=TRUE) #plot(bc)"},{"path":"https://rspatial.github.io/terra/reference/box.html","id":null,"dir":"Reference","previous_headings":"","what":"draw a box — add_box","title":"draw a box — add_box","text":"Similar box allowing adding box around map. function place box around mapped area.","code":""},{"path":"https://rspatial.github.io/terra/reference/box.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"draw a box — add_box","text":"","code":"add_box(...)"},{"path":"https://rspatial.github.io/terra/reference/box.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"draw a box — add_box","text":"... arguments passed lines","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/box.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"draw a box — add_box","text":"","code":"v <- vect(system.file(\"ex/lux.shp\", package=\"terra\")) plot(v) add_box(col=\"red\", lwd=3, xpd=TRUE)"},{"path":"https://rspatial.github.io/terra/reference/boxplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Box plot of SpatRaster data — boxplot","title":"Box plot of SpatRaster data — boxplot","text":"Box plot layers SpatRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/boxplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Box plot of SpatRaster data — boxplot","text":"","code":"# S4 method for class 'SpatRaster' boxplot(x, y=NULL, maxcell=100000, ...)"},{"path":"https://rspatial.github.io/terra/reference/boxplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Box plot of SpatRaster data — boxplot","text":"x SpatRaster y NULL SpatRaster. x SpatRaster used group values x \"zone\" maxcell Integer. Number cells sample datasets ... additional arguments passed graphics::boxplot","code":""},{"path":"https://rspatial.github.io/terra/reference/boxplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Box plot of SpatRaster data — boxplot","text":"boxplot returns list (invisibly) can used bxp","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/boxplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Box plot of SpatRaster data — boxplot","text":"","code":"r1 <- r2 <- r3 <- rast(ncols=10, nrows=10) set.seed(409) values(r1) <- rnorm(ncell(r1), 100, 40) values(r2) <- rnorm(ncell(r1), 80, 10) values(r3) <- rnorm(ncell(r1), 120, 30) s <- c(r1, r2, r3) names(s) <- c(\"Apple\", \"Pear\", \"Cherry\")  boxplot(s, notch=TRUE, col=c(\"red\", \"blue\", \"orange\"), main=\"Box plot\", ylab=\"random\", las=1)   op <- par(no.readonly = TRUE) par(mar=c(4,6,2,2)) boxplot(s, horizontal=TRUE, col=\"lightskyblue\", axes=FALSE) axis(1) axis(2, at=0:3, labels=c(\"\", names(s)), las=1, cex.axis=.9, lty=0)  par(op)  ## boxplot with 2 layers v <- vect(system.file(\"ex/lux.shp\", package=\"terra\")) r <- rast(system.file(\"ex/elev.tif\", package=\"terra\")) y <- rasterize(v, r, \"NAME_2\") b <- boxplot(r, y)  bxp(b)"},{"path":"https://rspatial.github.io/terra/reference/buffer.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a buffer around vector geometries or raster patches — buffer","title":"Create a buffer around vector geometries or raster patches — buffer","text":"Calculate buffer around cells NA SpatRaster, around geometries SpatVector. SpatRaster cells inside buffer distance get value 1. Note distance unit buffer width parameter meters CRS (+proj=longlat), map units (typically also meters) .","code":""},{"path":"https://rspatial.github.io/terra/reference/buffer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a buffer around vector geometries or raster patches — buffer","text":"","code":"# S4 method for class 'SpatRaster' buffer(x, width, background=0, filename=\"\", ...)  # S4 method for class 'SpatVector' buffer(x, width, quadsegs=10, capstyle=\"round\",      joinstyle=\"round\", mitrelimit=NA, singlesided=FALSE)"},{"path":"https://rspatial.github.io/terra/reference/buffer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a buffer around vector geometries or raster patches — buffer","text":"x SpatRaster SpatVector width numeric. Unit meter x longitude/latitude CRS, units coordinate reference system cases (typically also meter). value > 0 x SpatRaster. x SpatVector, argument vectorized, meaning can provide different value geometry x; can also use name variable x widths filename character. Output filename ... additional arguments writing files writeRaster background numeric. value assign cells outside buffer. value zero FALSE, boolean SpatRaster returned quadsegs positive integer. Number line segments use draw quart circle capstyle character. One \"round\", \"square\" \"flat\". Ignored .lonlat(x) joinstyle character. One \"round\", \"mitre\" \"bevel\". Ignored .lonlat(x) mitrelimit numeric. Place upper bound mitre join avoid extending far acute angles input geometry. Ignored .lonlat(x) singlesided logical. TRUE buffer constructed one side input line.  Ignored .lonlat(x)","code":""},{"path":"https://rspatial.github.io/terra/reference/buffer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a buffer around vector geometries or raster patches — buffer","text":"x","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/buffer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a buffer around vector geometries or raster patches — buffer","text":"","code":"r <- rast(ncols=36, nrows=18) r[500] <- 1 b <- buffer(r, width=5000000)  plot(b)   v <- vect(rbind(c(10,10), c(0,60)), crs=\"+proj=merc\") b <- buffer(v, 20) plot(b) points(v)   crs(v) <- \"+proj=longlat\"  b <- buffer(v, 1500000) plot(b) points(v)"},{"path":"https://rspatial.github.io/terra/reference/c.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine SpatRaster or SpatVector objects — c","title":"Combine SpatRaster or SpatVector objects — c","text":"c can: – Combine SpatRaster objects. must extent resolution. However, x empty (cell values), geometry ignored warning. Two empty SpatRasters geometry can also combined (get summed number layers). Also see add<- – Add SpatRaster SpatRasterDataset SpatRasterCollection – Add SpatVector objects new existing SpatVectorCollection append SpatVectors, use rbind.","code":""},{"path":"https://rspatial.github.io/terra/reference/c.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine SpatRaster or SpatVector objects — c","text":"","code":"# S4 method for class 'SpatRaster' c(x, ..., warn=TRUE)  # S4 method for class 'SpatRasterDataset' c(x, ...)  # S4 method for class 'SpatRasterCollection' c(x, ...)  # S4 method for class 'SpatVector' c(x, ...)  # S4 method for class 'SpatVectorCollection' c(x, ...)"},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/c.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine SpatRaster or SpatVector objects — c","text":"x SpatRaster, SpatVector, SpatRasterDataset SpatVectorCollection warn logical. TRUE, warning emitted x empty SpatRaster ... x (can combine raster raster data vector vector data)","code":""},{"path":"https://rspatial.github.io/terra/reference/c.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine SpatRaster or SpatVector objects — c","text":"class x","code":""},{"path":"https://rspatial.github.io/terra/reference/c.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine SpatRaster or SpatVector objects — c","text":"","code":"r <- rast(nrows=5, ncols=9) values(r) <- 1:ncell(r) x <- c(r, r*2, r*3)"},{"path":"https://rspatial.github.io/terra/reference/cartogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Cartogram — cartogram","title":"Cartogram — cartogram","text":"Make cartogram, , map area polygons made proportional another variable. can good way map raw count data (e.g. votes).","code":""},{"path":"https://rspatial.github.io/terra/reference/cartogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cartogram — cartogram","text":"","code":"# S4 method for class 'SpatVector' cartogram(x, var, type)"},{"path":"https://rspatial.github.io/terra/reference/cartogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cartogram — cartogram","text":"x SpatVector var character. variable name x type character. Cartogram type, \"nc\" (non-contiguous) currently supported","code":""},{"path":"https://rspatial.github.io/terra/reference/cartogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cartogram — cartogram","text":"SpatVector","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/cartogram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cartogram — cartogram","text":"","code":"f <- system.file(\"ex/lux.shp\", package=\"terra\") v <- vect(f) v$value <- 1:12 p <- cartogram(v, \"value\", \"nc\") plot(v, col=\"light gray\", border=\"gray\") lines(p, col=\"red\", lwd=2)"},{"path":"https://rspatial.github.io/terra/reference/catalyze.html","id":null,"dir":"Reference","previous_headings":"","what":"Factors to numeric — catalyze","title":"Factors to numeric — catalyze","text":"Change categorical layer one numerical layers. .numeric can transfer active category values cell values non-categorical SpatRaster. catalyze creates new layers category.","code":""},{"path":"https://rspatial.github.io/terra/reference/catalyze.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Factors to numeric — catalyze","text":"","code":"# S4 method for class 'SpatRaster' as.numeric(x, index=NULL, filename=\"\", ...)  # S4 method for class 'SpatRaster' catalyze(x, filename=\"\", ...)"},{"path":"https://rspatial.github.io/terra/reference/catalyze.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Factors to numeric — catalyze","text":"x SpatRaster index positive integer category indicating category use. NULL active category used filename character. Output filename ... additional arguments writing files writeRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/catalyze.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Factors to numeric — catalyze","text":"SpatRaster","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/catalyze.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Factors to numeric — catalyze","text":"","code":"set.seed(0) r <- rast(nrows=10, ncols=10) values(r) <- sample(3, ncell(r), replace=TRUE) + 10 d <- data.frame(id=11:13, cover=c(\"forest\", \"water\", \"urban\"), letters=letters[1:3], value=10:12) levels(r) <- d catalyze(r) #> class       : SpatRaster  #> dimensions  : 10, 10, 3  (nrow, ncol, nlyr) #> resolution  : 36, 18  (x, y) #> extent      : -180, 180, -90, 90  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (CRS84) (OGC:CRS84)  #> source(s)   : memory #> names       : cover, letters, value  #> min values  :     1,       1,    10  #> max values  :     3,       3,    12   activeCat(r) <- 3 as.numeric(r) #> class       : SpatRaster  #> dimensions  : 10, 10, 1  (nrow, ncol, nlyr) #> resolution  : 36, 18  (x, y) #> extent      : -180, 180, -90, 90  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (CRS84) (OGC:CRS84)  #> source(s)   : memory #> name        : letters  #> min value   :       1  #> max value   :       3"},{"path":"https://rspatial.github.io/terra/reference/cellSize.html","id":null,"dir":"Reference","previous_headings":"","what":"Area covered by each raster cell — cellSize","title":"Area covered by each raster cell — cellSize","text":"Compute area covered individual raster cells. Computing surface area raster cells especially relevant longitude/latitude rasters. note angular (longitude/latitude) planar (projected) coordinate reference systems raster cells sizes generally constant, unless using equal-area coordinate reference system. planar CRSs, area therefore computed based linear units coordinate reference system, rather transforming cells longitude/latitude. want correction, can use transform=FALSE init(x, prod(res(x)))","code":""},{"path":"https://rspatial.github.io/terra/reference/cellSize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Area covered by each raster cell — cellSize","text":"","code":"# S4 method for class 'SpatRaster' cellSize(x, mask=FALSE, lyrs=FALSE, unit=\"m\", transform=TRUE, rcx=100, filename=\"\", ...)"},{"path":"https://rspatial.github.io/terra/reference/cellSize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Area covered by each raster cell — cellSize","text":"x SpatRaster mask logical. TRUE, cells NA x also NA output lyrs logical. TRUE mask=TRUE, output number layers x. useful cases layers x different cells NA unit character. One \"m\", \"km\", \"ha\" transform logical. TRUE, planar CRS data transformed lon/lat accuracy rcx positive integer. maximum number rows columns used compute area planar data transform=TRUE. x rows /columns, raster aggregated match limit, values original cells estimated bilinear interpolation (see resample). can save lot time filename character. Output filename ... additional arguments writing files writeRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/cellSize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Area covered by each raster cell — cellSize","text":"SpatRaster","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/cellSize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Area covered by each raster cell — cellSize","text":"","code":"# SpatRaster  r <- rast(nrows=18, ncols=36) v <- 1:ncell(r) v[200:400] <- NA values(r) <- v  # size of each raster cell a <- cellSize(r)  # illustration of distortion r <- rast(ncols=90, nrows=45, ymin=-80, ymax=80) m <- project(r, \"+proj=merc\")  bad <- init(m, prod(res(m)) / 1000000, wopt=list(names=\"naive\")) good <- cellSize(m, unit=\"km\", names=\"corrected\") plot(c(good, bad), nc=1, mar=c(2,2,1,6))"},{"path":"https://rspatial.github.io/terra/reference/cells.html","id":null,"dir":"Reference","previous_headings":"","what":"Get cell numbers — cells","title":"Get cell numbers — cells","text":"Get cell numbers covered SpatVector SpatExtent. match values vector; non NA values.","code":""},{"path":"https://rspatial.github.io/terra/reference/cells.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get cell numbers — cells","text":"","code":"# S4 method for class 'SpatRaster,missing' cells(x, y)  # S4 method for class 'SpatRaster,numeric' cells(x, y, pairs=FALSE)  # S4 method for class 'SpatRaster,SpatVector' cells(x, y, method=\"simple\", weights=FALSE, exact=FALSE,          touches=is.lines(y), small=TRUE)  # S4 method for class 'SpatRaster,SpatExtent' cells(x, y)"},{"path":"https://rspatial.github.io/terra/reference/cells.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get cell numbers — cells","text":"x SpatRaster y SpatVector, SpatExtent, 2-column matrix representing points, numeric representing values match, missing method character. Method getting cell numbers points. default \"simple\", alternative \"bilinear\". \"bilinear\", four nearest cells weights returned weights logical. TRUE y polygons, approximate fraction cell covered returned well pairs logical. TRUE cell values matched area also returned exact logical. TRUE y polygons, exact fraction cell covered returned well touches logical. TRUE, values cells touched lines polygons extracted, just line render path, whose center point within polygon. relevant points small logical. TRUE, values cells touched polygons extracted none cells center points within polygon; even touches=FALSE","code":""},{"path":"https://rspatial.github.io/terra/reference/cells.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get cell numbers — cells","text":"numeric vector matrix","code":""},{"path":"https://rspatial.github.io/terra/reference/cells.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get cell numbers — cells","text":"","code":"r <- rast(ncols=10, nrows=10) values(r) <- 1:ncell(r) r[c(1:25, 31:100)] <- NA r <- ifel(r > 28, r + 10, r)  # all cell numbers of cells that are not NA cells(r) #> [1] 26 27 28 29 30  # cell numbers that match values x <- cells(r, c(28,38)) x$lyr.1 #> [1] 28  # cells for points m <- cbind(x=c(0,10,-30), y=c(40,-10,20)) cellFromXY(r, m) #> [1] 26 56 35  v <- vect(m) cells(r, v) #>      ID cell #> [1,]  1   26 #> [2,]  2   56 #> [3,]  3   35 cells(r, v, method=\"bilinear\") #>      ID c1 c2 c3 c4        w1        w2         w3         w4 #> [1,]  1 25 26 35 36 0.3611111 0.3611111 0.13888889 0.13888889 #> [2,]  2 55 56 65 66 0.2098765 0.7345679 0.01234568 0.04320988 #> [3,]  3 34 35 44 45 0.2037037 0.4074074 0.12962963 0.25925926  # cells for polygons f <- system.file(\"ex/lux.shp\", package=\"terra\") v <- vect(f) r <- rast(v) cv <- cells(r, v)"},{"path":"https://rspatial.github.io/terra/reference/centroids.html","id":null,"dir":"Reference","previous_headings":"","what":"Centroids — centroids","title":"Centroids — centroids","text":"Get centroids polygons lines, centroid-like points guaranteed inside polygons lines.","code":""},{"path":"https://rspatial.github.io/terra/reference/centroids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Centroids — centroids","text":"","code":"# S4 method for class 'SpatVector' centroids(x, inside=FALSE)"},{"path":"https://rspatial.github.io/terra/reference/centroids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Centroids — centroids","text":"x SpatVector inside logical. TRUE points returned guaranteed inside polygons lines, true centroids. True centroids may outside polygon, example polygon \"bean shaped\", unlikely line","code":""},{"path":"https://rspatial.github.io/terra/reference/centroids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Centroids — centroids","text":"SpatVector points","code":""},{"path":"https://rspatial.github.io/terra/reference/centroids.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Centroids — centroids","text":"","code":"f <- system.file(\"ex/lux.shp\", package=\"terra\") v <- vect(f) x <- centroids(v) y <- centroids(v, TRUE)"},{"path":"https://rspatial.github.io/terra/reference/clamp.html","id":null,"dir":"Reference","previous_headings":"","what":"Clamp values — clamp","title":"Clamp values — clamp","text":"Clamp values minimum maximum value. , values lower threshold value upper threshold value become either NA, , values=TRUE, become threshold value","code":""},{"path":"https://rspatial.github.io/terra/reference/clamp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clamp values — clamp","text":"","code":"# S4 method for class 'SpatRaster' clamp(x, lower=-Inf, upper=Inf, values=TRUE, filename=\"\", ...)  # S4 method for class 'numeric' clamp(x, lower=-Inf, upper=Inf, values=TRUE, ...)"},{"path":"https://rspatial.github.io/terra/reference/clamp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clamp values — clamp","text":"x SpatRaster lower numeric lowest acceptable value (can specify different value layer). SpatRaster single layer number layers x upper numeric highest acceptable value (can specify different value layer). SpatRaster single layer number layers x values logical. FALSE values outside clamping range become NA, TRUE, get extreme values filename character. Output filename ... additional arguments writing files writeRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/clamp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clamp values — clamp","text":"SpatRaster","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/clamp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clamp values — clamp","text":"","code":"r <- rast(ncols=10, nrows=10) values(r) <- 1:ncell(r) rc <- clamp(r, 25, 75)  rc #> class       : SpatRaster  #> dimensions  : 10, 10, 1  (nrow, ncol, nlyr) #> resolution  : 36, 18  (x, y) #> extent      : -180, 180, -90, 90  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (CRS84) (OGC:CRS84)  #> source(s)   : memory #> name        : lyr.1  #> min value   :    25  #> max value   :    75"},{"path":"https://rspatial.github.io/terra/reference/clamp_ts.html","id":null,"dir":"Reference","previous_headings":"","what":"clamp time series data — clamp_ts","title":"clamp time series data — clamp_ts","text":"clamp time-series datat S shaped. value layers minimum value cell can set minimum value, value layers maximum value cell can set maximum value.","code":""},{"path":"https://rspatial.github.io/terra/reference/clamp_ts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"clamp time series data — clamp_ts","text":"","code":"# S4 method for class 'SpatRaster' clamp_ts(x, min=FALSE, max=TRUE, filename=\"\", ...)"},{"path":"https://rspatial.github.io/terra/reference/clamp_ts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"clamp time series data — clamp_ts","text":"x SpatRaster min logical. TRUE time-series clamped minimum value max logical. TRUE time-series clamped maximum value filename character. Output filename ... additional arguments writing files writeRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/clamp_ts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"clamp time series data — clamp_ts","text":"SpatRaster","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/clamp_ts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"clamp time series data — clamp_ts","text":"","code":"sigm <- function(x) { .8 / (1 + exp(-(x-10))) + runif(length(x))/4 } r <- rast(ncols=10, nrows=10, nlyr=50) s <- seq(5.2, 15,.2) set.seed(1) values(r) <- t(replicate(100, sigm(s)))  x <- clamp_ts(r, TRUE, TRUE)   plot(unlist(r[4])) lines(unlist(x[4]))"},{"path":"https://rspatial.github.io/terra/reference/classify.html","id":null,"dir":"Reference","previous_headings":"","what":"Classify (or reclassify) cell values — classify","title":"Classify (or reclassify) cell values — classify","text":"Classify values SpatRaster. function (re-)classifies groups values values. classification done based argument rcl. can classify ranges specifying three-column matrix \"--becomes\" change specific values using two-column matrix \"-becomes\". can also supply vector \"cuts\" \"number cuts\". \"--becomes\" \"-becomes\" classification done row order matrix. Thus, overlapping ranges values, first time number within range determines reclassification value. \"cuts\" values sorted, order provided matter.","code":""},{"path":"https://rspatial.github.io/terra/reference/classify.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Classify (or reclassify) cell values — classify","text":"","code":"# S4 method for class 'SpatRaster' classify(x, rcl, include.lowest=FALSE, right=TRUE,       others=NULL, brackets=TRUE, filename=\"\", ...)"},{"path":"https://rspatial.github.io/terra/reference/classify.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Classify (or reclassify) cell values — classify","text":"x SpatRaster rcl matrix classification. matrix must 1, 2 3 columns. three columns, first two columns \"\" \"\" input values, third column \"becomes\" new value range. two column matrix (\"\", \"becomes\") can useful classifying integer values. case, arguments right include.lowest ignored. single column matrix (vector) interpreted set cuts one value. case values classified based location -cut-values. single number provided, used make number cuts, equal intervals lowest highest values SpatRaster. include.lowest logical, indicating value equal lowest value rcl (highest value second column, right=FALSE) included. right logical. TRUE, intervals closed right (open left). FALSE open right closed left. \"open\" means extreme value ** included interval. Thus, right-closed left open (0,1] = {x | 0 < x <= 1}. can also close sides right=NA, meaningful \"--becomes\" classification integers. example classify 1-5 -> 1, 6-10 -> 2, 11-15 -> 3. may easier read write equivalent 1-5 -> 1, 5-10 -> 2, 10-15 -> 3 right=TRUE include.lowest=TRUE others numeric. NULL values matched set value. Otherwise retain original value. brackets logical. TRUE, intervals parenthesis brackets around indicate whether open closed. applies rcl vector (single column matrix) filename character. Output filename ... Additional arguments writing files writeRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/classify.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Classify (or reclassify) cell values — classify","text":"SpatRaster","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/classify.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Classify (or reclassify) cell values — classify","text":"classify works \"raw\" values categorical rasters, ignoring levels (labels, categories). change labels categorical rasters, use subst instead. model-based classification see predict","code":""},{"path":"https://rspatial.github.io/terra/reference/classify.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Classify (or reclassify) cell values — classify","text":"","code":"r <- rast(ncols=10, nrows=10) values(r) <- (0:99)/99  ## from-to-becomes # classify the values into three groups  # all values >= 0 and <= 0.25 become 1, etc. m <- c(0, 0.25, 1,        0.25, 0.5, 2,        0.5, 1, 3) rclmat <- matrix(m, ncol=3, byrow=TRUE) rc1 <- classify(r, rclmat, include.lowest=TRUE)  ## cuts # equivalent to the above, but now a categorical SpatRaster is returned  rc2 <- classify(r, c(0, 0.25, 0.5, 1), include.lowest=TRUE, brackets=TRUE) freq(rc2) #>   layer        value count #> 1     1   [0 - 0.25]    25 #> 2     1 (0.25 - 0.5]    25 #> 3     1    (0.5 - 1]    50  ## is-becomes  x <- round(r*3) unique(x) #>   lyr.1 #> 1     0 #> 2     1 #> 3     2 #> 4     3 # replace 0 with NA y <- classify(x, cbind(0, NA)) unique(y) #>   lyr.1 #> 1     1 #> 2     2 #> 3     3  # multiple replacements m <- rbind(c(2, 200), c(3, 300)) m #>      [,1] [,2] #> [1,]    2  200 #> [2,]    3  300  rcx1 <- classify(x, m) unique(rcx1) #>   lyr.1 #> 1     0 #> 2     1 #> 3   200 #> 4   300  rcx2 <- classify(x, m, others=NA) unique(rcx2) #>   lyr.1 #> 1   200 #> 2   300"},{"path":"https://rspatial.github.io/terra/reference/click.html","id":null,"dir":"Reference","previous_headings":"","what":"Query by clicking on a map — click","title":"Query by clicking on a map — click","text":"Click map (plot) get coordinates values SpatRaster SpatVector location. SpatRaster can also get coordinates cell number location. Note many installations work well default RStudio plotting device. work around , can first run dev.new(noRStudioGD = TRUE) create separate window plotting, use plot() followed click() click map. may also help set RStudio \"Tools/Global Options/Appearance/Zoom\" 100","code":""},{"path":"https://rspatial.github.io/terra/reference/click.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query by clicking on a map — click","text":"","code":"# S4 method for class 'SpatRaster' click(x, n=10, id=FALSE, xy=FALSE, cell=FALSE, type=\"p\", show=TRUE, ...)  # S4 method for class 'SpatVector' click(x,  n=10, id=FALSE, xy=FALSE, type=\"p\", show=TRUE, ...)  # S4 method for class 'missing' click(x, n=10, id=FALSE, type=\"p\", show=TRUE, ...)"},{"path":"https://rspatial.github.io/terra/reference/click.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query by clicking on a map — click","text":"x SpatRaster SpatVector, missing n number clicks plot (map) id logical. TRUE, numeric ID shown map corresponds row number output xy logical. TRUE, xy coordinates included output cell logical. TRUE, cell numbers included output type one \"n\", \"p\", \"l\" \"o\". \"p\" \"o\" points plotted; \"l\" \"o\" joined lines. See locator show logical. Print values click? ... additional graphics parameters used type != \"n\" plotting locations. See locator","code":""},{"path":"https://rspatial.github.io/terra/reference/click.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Query by clicking on a map — click","text":"value(s) x point(s) clicked (touched box drawn). data.frame value(s) layers SpatRaster x cell(s) clicked ; attributes geometries SpatVector x intersect box drawn).","code":""},{"path":"https://rspatial.github.io/terra/reference/click.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Query by clicking on a map — click","text":"plot provides coordinates spatial query, values read SpatRaster SpatVector passed argument. Thus, can extract values object plotted, long spatially overlaps extent plot. Unless process terminated prematurely values n positions determined. identification process can terminated, depending interact R, hitting Esc, clicking right mouse button selecting \"Stop\" menu, \"Stop\" menu graphics window.","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/click.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Query by clicking on a map — click","text":"","code":"if (FALSE) { # \\dontrun{ r <-rast(system.file(\"ex/elev.tif\", package=\"terra\")) plot(r) click(r, n=1) ## now click on the plot (map) } # }"},{"path":"https://rspatial.github.io/terra/reference/coerce.html","id":null,"dir":"Reference","previous_headings":"","what":"Coercion to vector, matrix or array — coerce","title":"Coercion to vector, matrix or array — coerce","text":"Coercion SpatRaster vector, matrix array. coerce SpatExtent vector matrix","code":""},{"path":"https://rspatial.github.io/terra/reference/coerce.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coercion to vector, matrix or array — coerce","text":"","code":"# S4 method for class 'SpatRaster' as.vector(x, mode='any')  # S4 method for class 'SpatRaster' as.matrix(x, wide=FALSE, ...)  # S4 method for class 'SpatRaster' as.array(x)  # S4 method for class 'SpatRasterDataset' as.array(x)  # S4 method for class 'SpatExtent' as.vector(x, mode='any')  # S4 method for class 'SpatExtent' as.matrix(x, ...)"},{"path":"https://rspatial.github.io/terra/reference/coerce.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coercion to vector, matrix or array — coerce","text":"x SpatRaster SpatVector wide logical. FALSE layer SpatRaster becomes column matrix cell SpatRaster becomes row. TRUE row SpatRaster becomes row matrix column SpatRaster becomes column matrix mode argument ignored ... additional arguments (none implemented)","code":""},{"path":"https://rspatial.github.io/terra/reference/coerce.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coercion to vector, matrix or array — coerce","text":"vector, matrix, array","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/coerce.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coercion to vector, matrix or array — coerce","text":"","code":"r <- rast(ncols=2, nrows=2) values(r) <- 1:ncell(r)  as.vector(r) #> [1] 1 2 3 4 as.matrix(r) #>      lyr.1 #> [1,]     1 #> [2,]     2 #> [3,]     3 #> [4,]     4 as.matrix(r, wide=TRUE) #>      [,1] [,2] #> [1,]    1    2 #> [2,]    3    4 as.data.frame(r, xy=TRUE) #>     x   y lyr.1 #> 1 -90  45     1 #> 2  90  45     2 #> 3 -90 -45     3 #> 4  90 -45     4 as.array(r) #> , , 1 #>  #>      [,1] [,2] #> [1,]    1    2 #> [2,]    3    4 #>   as.vector(ext(r)) #> xmin xmax ymin ymax  #> -180  180  -90   90  as.matrix(ext(r)) #>       min max #> [1,] -180 180 #> [2,]  -90  90"},{"path":"https://rspatial.github.io/terra/reference/collapse.html","id":null,"dir":"Reference","previous_headings":"","what":"tighten SpatRaster or SpatRasterDataset objects — tighten","title":"tighten SpatRaster or SpatRasterDataset objects — tighten","text":"Combines data sources within SpatRaster (memory, file) allow faster processing. combine sub-datasets SpatRaster.","code":""},{"path":"https://rspatial.github.io/terra/reference/collapse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"tighten SpatRaster or SpatRasterDataset objects — tighten","text":"","code":"# S4 method for class 'SpatRaster' tighten(x)  # S4 method for class 'SpatRasterDataset' tighten(x)"},{"path":"https://rspatial.github.io/terra/reference/collapse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"tighten SpatRaster or SpatRasterDataset objects — tighten","text":"x SpatRaster SpatRasterDataset","code":""},{"path":"https://rspatial.github.io/terra/reference/collapse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"tighten SpatRaster or SpatRasterDataset objects — tighten","text":"SpatRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/collapse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"tighten SpatRaster or SpatRasterDataset objects — tighten","text":"","code":"r <- rast(nrow=5, ncol=9, vals=1:45) x <- c(r, r*2, r*3) x #> class       : SpatRaster  #> dimensions  : 5, 9, 3  (nrow, ncol, nlyr) #> resolution  : 40, 36  (x, y) #> extent      : -180, 180, -90, 90  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (CRS84) (OGC:CRS84)  #> source(s)   : memory #> names       : lyr.1, lyr.1, lyr.1  #> min values  :     1,     2,     3  #> max values  :    45,    90,   135  tighten(x) #> class       : SpatRaster  #> dimensions  : 5, 9, 3  (nrow, ncol, nlyr) #> resolution  : 40, 36  (x, y) #> extent      : -180, 180, -90, 90  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (CRS84) (OGC:CRS84)  #> source(s)   : memory #> names       : lyr.1, lyr.1, lyr.1  #> min values  :     1,     2,     3  #> max values  :    45,    90,   135"},{"path":"https://rspatial.github.io/terra/reference/colors.html","id":null,"dir":"Reference","previous_headings":"","what":"Color table — colors","title":"Color table — colors","text":"Get set color table(s) associated SpatRaster. Color tables used associating colors values, use mapping (plot).","code":""},{"path":"https://rspatial.github.io/terra/reference/colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Color table — colors","text":"","code":"# S4 method for class 'SpatRaster' coltab(x)  # S4 method for class 'SpatRaster' coltab(x, ..., layer = 1) <- value  # S4 method for class 'SpatRaster' has.colors(x)"},{"path":"https://rspatial.github.io/terra/reference/colors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Color table — colors","text":"x SpatRaster layer positive integer, layer number name value two-column data.frame (first column cell value, second column color);   vector colors (first one color value 0 ); four (value,red,green,blue) five (including alpha) column data.frame also 0 n; NULL remove color table. can also supply list data.frames set color table layers ... additional arguments (none implemented)","code":""},{"path":"https://rspatial.github.io/terra/reference/colors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Color table — colors","text":"data.frame","code":""},{"path":"https://rspatial.github.io/terra/reference/colors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Color table — colors","text":"","code":"r <- rast(ncols=3, nrows=2, vals=1:6) coltb <- data.frame(value=1:6, col=rainbow(6, end=.9)) coltb #>   value     col #> 1     1 #FF0000 #> 2     2 #EBFF00 #> 3     3 #00FF29 #> 4     4 #00C2FF #> 5     5 #5200FF #> 6     6 #FF0099  plot(r)   has.colors(r) #> [1] FALSE coltab(r) <- coltb plot(r)  has.colors(r) #> [1] TRUE  tb <- coltab(r) class(tb) #> [1] \"list\" dim(tb[[1]]) #> [1] 6 5"},{"path":"https://rspatial.github.io/terra/reference/combineGeoms.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine geometries — combineGeoms","title":"Combine geometries — combineGeoms","text":"Combine geometries one SpatVector another. Geometries can combined based overlap, shared boundaries distance (order operation). typical use-case method editing geometries number small polygons one SpatVector part geometries another SpatVector; perhaps small holes inbetween borders two SpatVectors. append SpatVectors use `rbind` see methods like intersect union \"normal\" polygons combinations.","code":""},{"path":"https://rspatial.github.io/terra/reference/combineGeoms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine geometries — combineGeoms","text":"","code":"# S4 method for class 'SpatVector,SpatVector' combineGeoms(x, y, overlap=TRUE, boundary=TRUE, distance=TRUE,   append=TRUE, minover=0.1, maxdist=Inf, dissolve=TRUE, erase=TRUE)"},{"path":"https://rspatial.github.io/terra/reference/combineGeoms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine geometries — combineGeoms","text":"x SpatVector polygons y SpatVector polygons geometries combined x overlap logical. TRUE, geometry combined geometry overlap , overlap minover boundary logical. TRUE, geometry combined geometry shared border distance logical. TRUE, geometry combined geometry nearest append logical. remaining geometries appended output? relevant distance=TRUE minover numeric. fraction geometry y overlaps geometry x. threshold, geometries considered overlapping maxdist numeric. Geometries away distance (meters) combined dissolve logical. internal boundaries dissolved? erase logical. TRUE new overlapping areas created","code":""},{"path":"https://rspatial.github.io/terra/reference/combineGeoms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine geometries — combineGeoms","text":"SpatVector","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/combineGeoms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine geometries — combineGeoms","text":"","code":"x1 <- vect(\"POLYGON ((0 0, 8 0, 8 9, 0 9, 0 0))\") x2 <- vect(\"POLYGON ((10 4, 12 4, 12 7, 11 7, 11 6, 10 6, 10 4))\")  y1 <- vect(\"POLYGON ((5 6, 15 6, 15 15, 5 15, 5 6))\") y2 <- vect(\"POLYGON ((8 2, 9 2, 9 3, 8 3, 8 2))\") y3 <- vect(\"POLYGON ((2 6, 3 6, 3 8, 2 8, 2 6))\") y4 <- vect(\"POLYGON ((2 12, 3 12, 3 13, 2 13, 2 12))\")  x <- rbind(x1, x2) values(x) <- data.frame(xid=1:2) crs(x) <- \"+proj=utm +zone=1\"  y <- rbind(y1, y2, y3, y4) values(y) <- data.frame(yid=letters[1:4]) crs(y) <- \"+proj=utm +zone=1\"  plot(rbind(x, y), border=c(rep(\"red\",2), rep(\"blue\", 4)), lwd=2) text(x, \"xid\") text(y, \"yid\")   v <- combineGeoms(x, y) plot(v, col=c(\"red\", \"blue\"))   v <- combineGeoms(x, y, boundary=FALSE, maxdist=1, minover=.05) plot(v, col=rainbow(4))"},{"path":"https://rspatial.github.io/terra/reference/compare-generics.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare and logical methods — Compare-methods","title":"Compare and logical methods — Compare-methods","text":"Standard comparison logical operators computations SpatRasters. Computations local (applied cell cell basis). multiple SpatRasters used, must geometry (extent resolution). operators implemented: Logical: !, &, |, isTRUE, isFALSE Compare:  ==, !=, >, <,  <=, >=, .na, .nan, .finite, .infinite See .na inverse .na, noNA detect cells missing value across layers. compare logic methods implement operators method can return NA istead FALSE allows setting output filename. terra package distinguish NA (available) NaN (number). cases state represented NaN. use SpatRaster vector multiple numbers, element vector considered layer (constant value). use SpatRaster matrix, number columns matrix must match number layers SpatRaster. rows used match cells. , two rows, match cells 1 2, recycled 3 4, etc. following method implemented (SpatExtent, SpatExtent): ==","code":""},{"path":"https://rspatial.github.io/terra/reference/compare-generics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare and logical methods — Compare-methods","text":"","code":"# S4 method for class 'SpatRaster' compare(x, y, oper, falseNA=FALSE, filename=\"\", overwrite=FALSE, ...)  # S4 method for class 'SpatRaster' logic(x, oper, falseNA=FALSE, filename=\"\", overwrite=FALSE, ...)"},{"path":"https://rspatial.github.io/terra/reference/compare-generics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare and logical methods — Compare-methods","text":"x SpatRaster y SpatRaster numeric oper character. Operator name. compare can one \"==\", \"!=\", \">\", \"<\", \">=\", \"<=\" logic can one \"!\", \".na\", \"allNA\", \"noNA\", \".infinite\", \".finite\", \"iSTRUE\", \"isFALSE\" falseNA logical. result TRUE, NA instead TRUE, FALSE? filename character. Output filename overwrite logical. TRUE, filename overwritten ... additional arguments writing files writeRaster","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/compare-generics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare and logical methods — Compare-methods","text":"SpatRaster SpatExtent","code":""},{"path":"https://rspatial.github.io/terra/reference/compare-generics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare and logical methods — Compare-methods","text":"","code":"r1 <- rast(ncols=10, nrows=10) values(r1) <- runif(ncell(r1)) r1[10:20] <- NA r2 <- rast(r1) values(r2) <- 1:ncell(r2) / ncell(r2)  x <- is.na(r1) !x #> class       : SpatRaster  #> dimensions  : 10, 10, 1  (nrow, ncol, nlyr) #> resolution  : 36, 18  (x, y) #> extent      : -180, 180, -90, 90  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (CRS84) (OGC:CRS84)  #> source(s)   : memory #> name        : lyr.1  #> min value   : FALSE  #> max value   :  TRUE  r1 == r2  #> class       : SpatRaster  #> dimensions  : 10, 10, 1  (nrow, ncol, nlyr) #> resolution  : 36, 18  (x, y) #> extent      : -180, 180, -90, 90  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (CRS84) (OGC:CRS84)  #> source(s)   : memory #> name        : lyr.1  #> min value   : FALSE  #> max value   : FALSE  compare(r1, r2, \"==\") #> class       : SpatRaster  #> dimensions  : 10, 10, 1  (nrow, ncol, nlyr) #> resolution  : 36, 18  (x, y) #> extent      : -180, 180, -90, 90  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (CRS84) (OGC:CRS84)  #> source(s)   : memory #> name        : lyr.1  #> min value   : FALSE  #> max value   : FALSE  compare(r1, r2, \"==\", TRUE) #> class       : SpatRaster  #> dimensions  : 10, 10, 1  (nrow, ncol, nlyr) #> resolution  : 36, 18  (x, y) #> extent      : -180, 180, -90, 90  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (CRS84) (OGC:CRS84)  #> source(s)   : memory #> name        : lyr.1  #> min value   :  TRUE  #> max value   :  TRUE"},{"path":"https://rspatial.github.io/terra/reference/compareGeom.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare geometries — compareGeom","title":"Compare geometries — compareGeom","text":"Evaluate whether two SpatRasters extent, number rows columns, projection, resolution, origin (subset comparisons). evaluate whether two SpatVectors geometries, whether SpatVector duplicated geometries.","code":""},{"path":"https://rspatial.github.io/terra/reference/compareGeom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare geometries — compareGeom","text":"","code":"# S4 method for class 'SpatRaster,SpatRaster' compareGeom(x, y, ..., lyrs=FALSE, crs=TRUE, warncrs=FALSE, ext=TRUE,   rowcol=TRUE, res=FALSE, stopOnError=TRUE, messages=FALSE)  # S4 method for class 'SpatVector,SpatVector' compareGeom(x, y, tolerance=0)  # S4 method for class 'SpatVector,missing' compareGeom(x, y, tolerance=0)"},{"path":"https://rspatial.github.io/terra/reference/compareGeom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare geometries — compareGeom","text":"x SpatRaster SpatVector y x. x SpatRaster, y can also list SpatRasters. x SpatVector, y can missing ... Additional SpatRasters lyrs logical. TRUE, number layers compared crs logical. TRUE, coordinate reference systems compared warncrs logical. TRUE, warning given crs different (instead error) ext logical. TRUE, bounding boxes compared rowcol logical. TRUE, number rows columns objects compared res logical. TRUE, resolutions compared (redundant checking extent rowcol) stopOnError logical. TRUE, code execution stops raster match messages logical. TRUE, warning/error messages printed even stopOnError=FALSE tolerance numeric","code":""},{"path":"https://rspatial.github.io/terra/reference/compareGeom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare geometries — compareGeom","text":"logical (SpatRaster) matrix logical (SpatVector)","code":""},{"path":"https://rspatial.github.io/terra/reference/compareGeom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare geometries — compareGeom","text":"","code":"r1 <- rast() r2 <- rast() r3 <- rast() compareGeom(r1, r2, r3) #> [1] TRUE nrow(r3) <- 10   if (FALSE) { # \\dontrun{ compareGeom(r1, r3) } # }"},{"path":"https://rspatial.github.io/terra/reference/concats.html","id":null,"dir":"Reference","previous_headings":"","what":"Concatenate categorical rasters — concats","title":"Concatenate categorical rasters — concats","text":"Combine two categorical rasters concatenating levels.","code":""},{"path":"https://rspatial.github.io/terra/reference/concats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concatenate categorical rasters — concats","text":"","code":"# S4 method for class 'SpatRaster' concats(x, y, filename=\"\", ...)"},{"path":"https://rspatial.github.io/terra/reference/concats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Concatenate categorical rasters — concats","text":"x SpatRaster (single, categorical, layer) y SpatRaster (single, categorical, layer) filename character. Output filename ... additional arguments writing files writeRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/concats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Concatenate categorical rasters — concats","text":"SpatRaster","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/concats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Concatenate categorical rasters — concats","text":"","code":"set.seed(0) r <- rast(nrows=10, ncols=10) values(r) <- sample(3, ncell(r), replace=TRUE) levels(r) <- data.frame(id=1:3, cover=c(\"forest\", \"water\", \"urban\"))  rr <- rast(r) values(rr) <- sample(1:3, ncell(rr), replace=TRUE) levels(rr) <- data.frame(id=c(1:3), color=c(\"red\", \"green\", \"blue\"))  x <- concats(r, rr) x #> class       : SpatRaster  #> dimensions  : 10, 10, 1  (nrow, ncol, nlyr) #> resolution  : 36, 18  (x, y) #> extent      : -180, 180, -90, 90  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (CRS84) (OGC:CRS84)  #> source(s)   : memory #> categories  : cover_color  #> name        : cover_color  #> min value   :  forest_red  #> max value   :  urban_blue  levels(x)[[1]] #>   ID  cover_color #> 1  0   forest_red #> 2  1 forest_green #> 3  2  forest_blue #> 4  3    water_red #> 5  4  water_green #> 6  5   water_blue #> 7  6    urban_red #> 8  7  urban_green #> 9  8   urban_blue"},{"path":"https://rspatial.github.io/terra/reference/contour.html","id":null,"dir":"Reference","previous_headings":"","what":"Contour plot — contour","title":"Contour plot — contour","text":"Contour lines (isolines) SpatRaster. Use add=TRUE add lines current plot.  See graphics::contour details. filled=TRUE, new filled contour plot made. See graphics::filled.contour details. .contour returns contour lines SpatVector.","code":""},{"path":"https://rspatial.github.io/terra/reference/contour.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Contour plot — contour","text":"","code":"# S4 method for class 'SpatRaster' contour(x, maxcells=100000, filled=FALSE, ...)  # S4 method for class 'SpatRaster' as.contour(x, maxcells=100000, ...)"},{"path":"https://rspatial.github.io/terra/reference/contour.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Contour plot — contour","text":"x SpatRaster. first layer used maxcells maximum number pixels used create contours filled logical. TRUE, filled.contour plot made ... argument can passed contour  filled.contour (graphics package)","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/contour.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Contour plot — contour","text":"","code":"r <- rast(system.file(\"ex/elev.tif\", package=\"terra\")) plot(r) contour(r, add=TRUE)   v <- as.contour(r) plot(r) lines(v)   contour(r, filled=TRUE, nlevels=5)   ## if you want a SpatVector with contour lines template <- disagg(rast(r), 10) rr <- resample(r, template) rr <- floor(rr/100) * 100 v <- as.polygons(rr) plot(v, 1, col=terrain.colors(7))   ## to combine filled contours with contour lines (or other spatial data)  br <- seq(100, 600, 100) plot(r, breaks=br) lines(as.contour(r, levels=br))   ## or  x <- classify(r,  br) |> as.polygons() plot(x, \"elevation\")"},{"path":"https://rspatial.github.io/terra/reference/costDist.html","id":null,"dir":"Reference","previous_headings":"","what":"Cost-distance — costDist","title":"Cost-distance — costDist","text":"Use friction (cost) surface compute cost-distance cell border one target cells. Distances computed summing local distances cells, connected neighbors 8 directions, assuming path go centers one neighboring raster cells. Distances multiplied friction, thus get cost-distance, friction surface must express cost per unit distance (speed) travel.","code":""},{"path":"https://rspatial.github.io/terra/reference/costDist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cost-distance — costDist","text":"","code":"# S4 method for class 'SpatRaster' costDist(x, target=0, scale=1, maxiter=50, filename=\"\", ...)"},{"path":"https://rspatial.github.io/terra/reference/costDist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cost-distance — costDist","text":"x SpatRaster target numeric. value target cells (compute cost-distance ) scale numeric. Scale factor. cost distance divided number maxiter numeric. maximum number iterations. Increase number get warning costDistance converge filename character. output filename (optional) ... additional arguments writeRaster","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/costDist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cost-distance — costDist","text":"SpatRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/costDist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cost-distance — costDist","text":"","code":"r <- rast(ncols=5, nrows=5, crs=\"+proj=utm +zone=1 +datum=WGS84\",      xmin=0, xmax=5, ymin=0, ymax=5, vals=1) r[13] <- 0 d <- costDist(r) plot(d) text(d, digits=1)   r <- rast(ncols=10, nrows=10,  xmin=0, xmax=10, ymin=0, ymax=10,         vals=10, crs=\"+proj=utm +zone=1 +datum=WGS84\") r[5, 1] <- -10 r[2:3, 1] <- r[1, 2:4] <- r[2, 5] <- 0 r[3, 6] <- r[2, 7] <- r[1, 8:9] <- 0 r[6, 6:10] <- NA r[6:9, 6] <- NA  d <- costDist(r, -10) plot(d) text(d, digits=1, cex=.8)"},{"path":"https://rspatial.github.io/terra/reference/cover.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace values with values from another object — cover","title":"Replace values with values from another object — cover","text":"Replace missing (NA) values SpatRaster x values SpatRaster y. replace missing values first layer first value encountered layers. polygons: areas x overlap y replaced y , identity=TRUE intersected y.","code":""},{"path":"https://rspatial.github.io/terra/reference/cover.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace values with values from another object — cover","text":"","code":"# S4 method for class 'SpatRaster,SpatRaster' cover(x, y, values=NA, filename=\"\", ...)  # S4 method for class 'SpatRaster,missing' cover(x, y, values=NA, filename=\"\", ...)  # S4 method for class 'SpatVector,SpatVector' cover(x, y, identity=FALSE, expand=TRUE)"},{"path":"https://rspatial.github.io/terra/reference/cover.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace values with values from another object — cover","text":"x SpatRaster SpatVector y x missing x SpatRaster values numeric. cell values x replaced values y filename character. Output filename ... additional arguments writing files writeRaster identity logical. TRUE overlapping areas intersected rather replaced expand logical. parts y outside x included?","code":""},{"path":"https://rspatial.github.io/terra/reference/cover.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace values with values from another object — cover","text":"SpatRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/cover.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Replace values with values from another object — cover","text":"","code":"r1 <- r2 <- rast(ncols=36, nrows=18) values(r1) <- 1:ncell(r1) values(r2) <- runif(ncell(r2)) r2 <- classify(r2, cbind(-Inf, 0.5, NA)) r3 <- cover(r2, r1)   p <- vect(system.file(\"ex/lux.shp\", package=\"terra\")) e <- as.polygons(ext(6, 6.4, 49.75, 50)) values(e) <- data.frame(y=10)  cv <- cover(p, e) plot(cv, col=rainbow(12)) ci <- cover(p, e, identity=TRUE) lines(e, lwd=3)   plot(ci, col=rainbow(12)) lines(e, lwd=3)"},{"path":"https://rspatial.github.io/terra/reference/crds.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the coordinates of SpatVector geometries or SpatRaster cells — crds","title":"Get the coordinates of SpatVector geometries or SpatRaster cells — crds","text":"Get coordinates SpatVector SpatRaster cells. matrix data.frame x (longitude) y (latitude) coordinates returned.","code":""},{"path":"https://rspatial.github.io/terra/reference/crds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the coordinates of SpatVector geometries or SpatRaster cells — crds","text":"","code":"# S4 method for class 'SpatVector' crds(x, df=FALSE, list=FALSE)  # S4 method for class 'SpatRaster' crds(x, df=FALSE, na.rm=TRUE, na.all=FALSE)"},{"path":"https://rspatial.github.io/terra/reference/crds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the coordinates of SpatVector geometries or SpatRaster cells — crds","text":"x SpatRaster SpatVector df logical. TRUE data.frame returned instead matrix list logical. TRUE list returned instead matrix na.rm logical. TRUE cells NA excluded. Ignored SpatRaster template associated cell values na.logical. TRUE cells ignored na.rm=TRUE value NA layers instead layer","code":""},{"path":"https://rspatial.github.io/terra/reference/crds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the coordinates of SpatVector geometries or SpatRaster cells — crds","text":"matrix data.frame","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/crds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the coordinates of SpatVector geometries or SpatRaster cells — crds","text":"","code":"x1 <- rbind(c(-175,-20), c(-140,55), c(10, 0), c(-140,-60)) x2 <- rbind(c(-125,0), c(0,60), c(40,5), c(15,-45)) x3 <- rbind(c(-10,0), c(140,60), c(160,0), c(140,-55)) x4 <- rbind(c(80,0), c(105,13), c(120,2), c(105,-13)) z <- rbind(cbind(object=1, part=1, x1), cbind(object=2, part=1, x2),             cbind(object=3, part=1, x3), cbind(object=3, part=2, x4)) colnames(z)[3:4] <- c('x', 'y') z <- cbind(z, hole=0) z[(z[, \"object\"]==3 & z[,\"part\"]==2), \"hole\"] <- 1  p <- vect(z, \"polygons\") crds(p) #>          x   y #>  [1,] -175 -20 #>  [2,] -140  55 #>  [3,]   10   0 #>  [4,] -140 -60 #>  [5,] -175 -20 #>  [6,] -125   0 #>  [7,]    0  60 #>  [8,]   40   5 #>  [9,]   15 -45 #> [10,] -125   0 #> [11,]  -10   0 #> [12,]  140  60 #> [13,]  160   0 #> [14,]  140 -55 #> [15,]  -10   0 #> [16,]   80   0 #> [17,]  105  13 #> [18,]  120   2 #> [19,]  105 -13 #> [20,]   80   0  f <- system.file(\"ex/lux.shp\", package=\"terra\") v <- vect(f) g <- crds(v) head(g) #>             x        y #> [1,] 6.026519 50.17767 #> [2,] 6.031361 50.16563 #> [3,] 6.035646 50.16410 #> [4,] 6.042747 50.16157 #> [5,] 6.043894 50.16116 #> [6,] 6.048243 50.16008"},{"path":"https://rspatial.github.io/terra/reference/crop.html","id":null,"dir":"Reference","previous_headings":"","what":"Cut out a geographic subset — crop","title":"Cut out a geographic subset — crop","text":"Cut part SpatRaster SpatVector. can crop SpatRaster SpatExtent, another object extent can obtained. Note SpatRaster returned may exactly extent SpatExtent supplied can select entire cells (rows columns), add new areas. See methods like resample disagg force SpatRasters align extend add rows /columns. can crop rectangular areas SpatRaster, see argument mask=TRUE setting cell values within SpatRaster NA; use mask method crop additional masking options. can crop SpatVector another SpatVector. polygons, minimum convex hull used. Unlike intersect geometries attributes y transferred output. can also crop SpatVector rectangle (SpatRaster, SpatExtent).","code":""},{"path":"https://rspatial.github.io/terra/reference/crop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cut out a geographic subset — crop","text":"","code":"# S4 method for class 'SpatRaster' crop(x, y, snap=\"near\", mask=FALSE, touches=TRUE, extend=FALSE, filename=\"\", ...)  # S4 method for class 'SpatRasterDataset' crop(x, y, snap=\"near\", extend=FALSE)  # S4 method for class 'SpatRasterCollection' crop(x, y, snap=\"near\", extend=FALSE)  # S4 method for class 'SpatVector' crop(x, y, ext=FALSE)  # S4 method for class 'SpatGraticule' crop(x, y)"},{"path":"https://rspatial.github.io/terra/reference/crop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cut out a geographic subset — crop","text":"x SpatRaster SpatVector y SpatRaster, SpatVector, SpatExtent, object SpatExtent (ext returns SpatExtent) snap character. One \"near\", \"\", \"\". Used align y geometry x mask logical. y used mask? used y SpatVector, SpatRaster sf touches logical. TRUE mask=TRUE, cells touched lines polygons masked, just line render path, whose center point within polygon extend logical. rows /columns added y beyond extent x? Also see extend filename character. Output filename ... additional arguments writing files writeRaster ext logical. Use extent y instead y. also changes behavior y extent two ways: (1) points extent boundary removed (2) lon/lat extents go beyond -180 180 degrees longitude wrapped around earth include areas end dateline","code":""},{"path":"https://rspatial.github.io/terra/reference/crop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cut out a geographic subset — crop","text":"SpatRaster","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/crop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cut out a geographic subset — crop","text":"","code":"r <- rast(xmin=0, xmax=10, ymin=0, ymax=10, nrows=25, ncols=25) values(r) <- 1:ncell(r) e <- ext(-5, 5, -5, 5) rc <- crop(r, e)  # crop and mask f <- system.file(\"ex/elev.tif\", package=\"terra\") r <- rast(f) f <- system.file(\"ex/lux.shp\", package=\"terra\") v <- vect(f) cm <- crop(r, v[9:12,], mask=TRUE) plot(cm) lines(v)   # crop vector f <- system.file(\"ex/lux.shp\", package=\"terra\") v <- vect(f) e <- ext(6.15, 6.3, 49.7, 49.8) x <- crop(v, e) plot(x, \"NAME_1\")"},{"path":"https://rspatial.github.io/terra/reference/crosstab.html","id":null,"dir":"Reference","previous_headings":"","what":"Cross-tabulate — crosstab","title":"Cross-tabulate — crosstab","text":"Cross-tabulate layers SpatRaster create contingency table.","code":""},{"path":"https://rspatial.github.io/terra/reference/crosstab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cross-tabulate — crosstab","text":"","code":"# S4 method for class 'SpatRaster,missing' crosstab(x, digits=0, long=FALSE, useNA=FALSE)"},{"path":"https://rspatial.github.io/terra/reference/crosstab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cross-tabulate — crosstab","text":"x SpatRaster digits integer. number digits rounding values cross-tabulation long logical. TRUE results returned 'long' format data.frame instead table useNA logical, indicting table includes counts NA values","code":""},{"path":"https://rspatial.github.io/terra/reference/crosstab.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cross-tabulate — crosstab","text":"table data.frame","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/crosstab.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cross-tabulate — crosstab","text":"","code":"r <- s <- rast(nc=5, nr=5) set.seed(1) values(r) <- runif(ncell(r)) * 2 values(s) <- runif(ncell(r)) * 3 x <- c(r, s)  crosstab(x) #>      lyr.1.1 #> lyr.1 0 1 2 3 #>     0 1 1 4 0 #>     1 2 5 5 0 #>     2 0 2 4 1  rs <- r/s r[1:5] <- NA s[20:25] <- NA x <- c(r, s, rs) crosstab(x, useNA=TRUE, long=TRUE) #>    lyr.1 lyr.1.1 lyr.1.2 n #> 1      0       2       0 3 #> 2      0      NA       0 1 #> 3      0      NA       6 1 #> 4      1       0       4 1 #> 5      1       1       1 1 #> 6      1       1       2 1 #> 7      1       2       0 3 #> 8      1       2       1 1 #> 9      1      NA       0 1 #> 10     1      NA       1 1 #> 11     2       1       1 2 #> 12     2       2       1 2 #> 13     2      NA       1 2 #> 14    NA       0      19 1 #> 15    NA       1       0 2 #> 16    NA       1       1 1 #> 17    NA       3       1 1"},{"path":"https://rspatial.github.io/terra/reference/crs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get or set a coordinate reference system — crs","title":"Get or set a coordinate reference system — crs","text":"Get set coordinate reference system (CRS), also referred \"projection\", SpatRaster SpatVector. Setting new CRS change data , just changes label. set CRS dataset (come one) **, *like *. See project *transform* object one CRS another.","code":""},{"path":"https://rspatial.github.io/terra/reference/crs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get or set a coordinate reference system — crs","text":"","code":"# S4 method for class 'SpatRaster' crs(x, proj=FALSE, describe=FALSE, parse=FALSE)  # S4 method for class 'SpatVector' crs(x, proj=FALSE, describe=FALSE, parse=FALSE)  # S4 method for class 'character' crs(x, proj=FALSE, describe=FALSE, parse=FALSE)  # S4 method for class 'SpatRaster' crs(x, warn = FALSE) <- value  # S4 method for class 'SpatVector' crs(x, warn = FALSE) <- value"},{"path":"https://rspatial.github.io/terra/reference/crs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get or set a coordinate reference system — crs","text":"x SpatRaster SpatVector proj logical. TRUE crs returned PROJ-string notation describe logical. TRUE name, EPSG code, name extent area use returned known warn logical. TRUE, message printed object already non-empty crs value character string describing coordinate reference system. can WKT format, <authority:number> code \"EPSG:4326\", PROJ-string format \"+proj=utm +zone=12\" (see Note) parse logical. TRUE, wkt parts parsed vector (line becomes element)","code":""},{"path":"https://rspatial.github.io/terra/reference/crs.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Get or set a coordinate reference system — crs","text":"Projections handled PROJ/GDAL libraries. PROJ developers suggest define CRS WKT2 <authority>:<code> notation. practical define one's custom CRS WKT2, <authority>:<code> system covers handful (commonly used) CRSs. work around problem still possible use deprecated PROJ-string notation (+proj=...) one major caveat: datum WGS84 (equivalent NAD83) – want transform data coordinate reference system different datum. Thus long use WGS84, ellipsoid instead datum, can safely use PROJ-strings represent CRS; including define custom CRS. can also set crs \"local\" get informal coordinate system arbitrary Euclidean (Cartesian) plane units meter.","code":""},{"path":"https://rspatial.github.io/terra/reference/crs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get or set a coordinate reference system — crs","text":"character modified SpatRaster/Vector","code":""},{"path":"https://rspatial.github.io/terra/reference/crs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get or set a coordinate reference system — crs","text":"","code":"r <- rast() crs(r) #> [1] \"GEOGCRS[\\\"WGS 84 (CRS84)\\\",\\n    DATUM[\\\"World Geodetic System 1984\\\",\\n        ELLIPSOID[\\\"WGS 84\\\",6378137,298.257223563,\\n            LENGTHUNIT[\\\"metre\\\",1]]],\\n    PRIMEM[\\\"Greenwich\\\",0,\\n        ANGLEUNIT[\\\"degree\\\",0.0174532925199433]],\\n    CS[ellipsoidal,2],\\n        AXIS[\\\"geodetic longitude (Lon)\\\",east,\\n            ORDER[1],\\n            ANGLEUNIT[\\\"degree\\\",0.0174532925199433]],\\n        AXIS[\\\"geodetic latitude (Lat)\\\",north,\\n            ORDER[2],\\n            ANGLEUNIT[\\\"degree\\\",0.0174532925199433]],\\n    USAGE[\\n        SCOPE[\\\"unknown\\\"],\\n        AREA[\\\"World\\\"],\\n        BBOX[-90,-180,90,180]],\\n    ID[\\\"OGC\\\",\\\"CRS84\\\"]]\" crs(r, describe=TRUE, proj=TRUE) #>             name authority  code  area             extent #> 1 WGS 84 (CRS84)       OGC CRS84 World -180, 180, -90, 90 #>                                  proj #> 1 +proj=longlat +datum=WGS84 +no_defs  crs(r) <- \"+proj=lcc +lat_1=48 +lat_2=33 +lon_0=-100 +ellps=WGS84\" crs(r) #> [1] \"PROJCRS[\\\"unknown\\\",\\n    BASEGEOGCRS[\\\"unknown\\\",\\n        DATUM[\\\"Unknown based on WGS 84 ellipsoid\\\",\\n            ELLIPSOID[\\\"WGS 84\\\",6378137,298.257223563,\\n                LENGTHUNIT[\\\"metre\\\",1],\\n                ID[\\\"EPSG\\\",7030]]],\\n        PRIMEM[\\\"Greenwich\\\",0,\\n            ANGLEUNIT[\\\"degree\\\",0.0174532925199433],\\n            ID[\\\"EPSG\\\",8901]]],\\n    CONVERSION[\\\"unknown\\\",\\n        METHOD[\\\"Lambert Conic Conformal (2SP)\\\",\\n            ID[\\\"EPSG\\\",9802]],\\n        PARAMETER[\\\"Latitude of false origin\\\",0,\\n            ANGLEUNIT[\\\"degree\\\",0.0174532925199433],\\n            ID[\\\"EPSG\\\",8821]],\\n        PARAMETER[\\\"Longitude of false origin\\\",-100,\\n            ANGLEUNIT[\\\"degree\\\",0.0174532925199433],\\n            ID[\\\"EPSG\\\",8822]],\\n        PARAMETER[\\\"Latitude of 1st standard parallel\\\",48,\\n            ANGLEUNIT[\\\"degree\\\",0.0174532925199433],\\n            ID[\\\"EPSG\\\",8823]],\\n        PARAMETER[\\\"Latitude of 2nd standard parallel\\\",33,\\n            ANGLEUNIT[\\\"degree\\\",0.0174532925199433],\\n            ID[\\\"EPSG\\\",8824]],\\n        PARAMETER[\\\"Easting at false origin\\\",0,\\n            LENGTHUNIT[\\\"metre\\\",1],\\n            ID[\\\"EPSG\\\",8826]],\\n        PARAMETER[\\\"Northing at false origin\\\",0,\\n            LENGTHUNIT[\\\"metre\\\",1],\\n            ID[\\\"EPSG\\\",8827]]],\\n    CS[Cartesian,2],\\n        AXIS[\\\"(E)\\\",east,\\n            ORDER[1],\\n            LENGTHUNIT[\\\"metre\\\",1,\\n                ID[\\\"EPSG\\\",9001]]],\\n        AXIS[\\\"(N)\\\",north,\\n            ORDER[2],\\n            LENGTHUNIT[\\\"metre\\\",1,\\n                ID[\\\"EPSG\\\",9001]]]]\"  # You can use epsg codes crs(r)  <- \"epsg:25831\" crs(r, describe=TRUE)$area #> [1] \"Europe between 0°E and 6°E: Andorra; Denmark - offshore; Germany - offshore; Jan Mayen - offshore; Norway including Svalbard - onshore and offshore; Spain - mainland and Balearic islands - onshore and offshore\"  crs(\"epsg:25831\", describe=TRUE) #>                    name authority  code #> 1 ETRS89 / UTM zone 31N      EPSG 25831 #>                                                                                                                                                                                                                area #> 1 Europe between 0°E and 6°E: Andorra; Denmark - offshore; Germany - offshore; Jan Mayen - offshore; Norway including Svalbard - onshore and offshore; Spain - mainland and Balearic islands - onshore and offshore #>                     extent #> 1 0.00, 6.01, 37.00, 82.45"},{"path":"https://rspatial.github.io/terra/reference/datatype.html","id":null,"dir":"Reference","previous_headings":"","what":"Data type of a SpatRaster or SpatVector — datatype","title":"Data type of a SpatRaster or SpatVector — datatype","text":"Get data types fields (attributes, variables) SpatVector file(s) associated SpatRaster. (layer ) SpatRaster datatype values, values memory.","code":""},{"path":"https://rspatial.github.io/terra/reference/datatype.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data type of a SpatRaster or SpatVector — datatype","text":"","code":"# S4 method for class 'SpatRaster' datatype(x, bylyr=TRUE)  # S4 method for class 'SpatVector' datatype(x)"},{"path":"https://rspatial.github.io/terra/reference/datatype.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data type of a SpatRaster or SpatVector — datatype","text":"x SpatRaster SpatVector bylyr logical. TRUE value returned layer. Otherwise, value returned data source (file)","code":""},{"path":"https://rspatial.github.io/terra/reference/datatype.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Data type of a SpatRaster or SpatVector — datatype","text":"Setting data type useful want write values disk writeRaster. cases can use functions round floor, .bool raster datatypes described 5 characters. first three indicate whether values integer decimal values. fourth character indicates number bytes used save values disk, last character indicates whether numbers signed (, can negative positive values) (zero positive values allowed) following raster datatypes available: integer types, except single byte types, lowest (signed) highest (unsigned) value used store NA. Note large integer numbers may imprecise internally represented decimal numbers. INT4U available best avoided R support 32-bit unsigned integers.","code":""},{"path":"https://rspatial.github.io/terra/reference/datatype.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Data type of a SpatRaster or SpatVector — datatype","text":"character","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/datatype.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data type of a SpatRaster or SpatVector — datatype","text":"","code":"f <- system.file(\"ex/lux.shp\", package=\"terra\") v <- vect(f) datatype(v) #> [1] \"double\" \"string\" \"double\" \"string\" \"double\" \"double\"  f <- system.file(\"ex/elev.tif\", package=\"terra\") r <- rast(f) datatype(r) #> [1] \"INT2S\"  # no data type datatype(rast())  #> [1] \"\""},{"path":"https://rspatial.github.io/terra/reference/deepcopy.html","id":null,"dir":"Reference","previous_headings":"","what":"Deep copy — deepcopy","title":"Deep copy — deepcopy","text":"Make deep copy SpatRaster SpatVector. occasionally useful using -place replacement function make copy, set.ext.","code":""},{"path":"https://rspatial.github.io/terra/reference/deepcopy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deep copy — deepcopy","text":"","code":"# S4 method for class 'SpatRaster' deepcopy(x)  # S4 method for class 'SpatVector' deepcopy(x)"},{"path":"https://rspatial.github.io/terra/reference/deepcopy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deep copy — deepcopy","text":"x SpatRaster SpatVector","code":""},{"path":"https://rspatial.github.io/terra/reference/deepcopy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deep copy — deepcopy","text":"x","code":""},{"path":"https://rspatial.github.io/terra/reference/deepcopy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Deep copy — deepcopy","text":"","code":"r <- rast(ncols=10, nrows=10, nl=3) x <- r y <- deepcopy(r) ext(r) #> SpatExtent : -180, 180, -90, 90 (xmin, xmax, ymin, ymax) set.ext(x, c(0,10,0,10)) ext(x) #> SpatExtent : 0, 10, 0, 10 (xmin, xmax, ymin, ymax) ext(r) #> SpatExtent : 0, 10, 0, 10 (xmin, xmax, ymin, ymax) ext(y) #> SpatExtent : -180, 180, -90, 90 (xmin, xmax, ymin, ymax)"},{"path":"https://rspatial.github.io/terra/reference/densify.html","id":null,"dir":"Reference","previous_headings":"","what":"Add additional nodes to lines or polygons — densify","title":"Add additional nodes to lines or polygons — densify","text":"Add additional nodes lines polygons. can useful prior using project path change much.","code":""},{"path":"https://rspatial.github.io/terra/reference/densify.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add additional nodes to lines or polygons — densify","text":"","code":"# S4 method for class 'SpatVector' densify(x, interval, equalize=TRUE, flat=FALSE)"},{"path":"https://rspatial.github.io/terra/reference/densify.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add additional nodes to lines or polygons — densify","text":"x SpatVector interval positive number, specifying desired minimum distance nodes. unit meter lonlat data, linear unit crs planar data equalize logical. TRUE, new nodes spread equal intervals old nodes flat logical. TRUE, earth's curvature ignored lonlat data, distance unit degrees, meter","code":""},{"path":"https://rspatial.github.io/terra/reference/densify.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add additional nodes to lines or polygons — densify","text":"SpatVector","code":""},{"path":"https://rspatial.github.io/terra/reference/densify.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add additional nodes to lines or polygons — densify","text":"","code":"v <- vect(rbind(c(-120,-20), c(-80,5), c(-40,-60), c(-120,-20)),    type=\"polygons\", crs=\"+proj=longlat\") vd <- densify(v, 200000)  p <- project(v, \"+proj=robin\") pd <- project(vd, \"+proj=robin\")  # good  plot(pd, col=\"gray\", border=\"red\", lwd=10) points(pd, col=\"gray\")  # bad lines(p, col=\"blue\", lwd=3) points(p, col=\"blue\", cex=2) plot(p, col=\"blue\", alpha=.1, add=TRUE) legend(\"topright\", c(\"good\", \"bad\"), col=c(\"red\", \"blue\"), lty=1, lwd=3)   ## the other way around does not work ## unless the original data was truly planar (e.g. derived from a map) x <- densify(p, 250000) y <- project(x, \"+proj=longlat\") # bad plot(y) # good lines(vd, col=\"red\")"},{"path":"https://rspatial.github.io/terra/reference/density.html","id":null,"dir":"Reference","previous_headings":"","what":"Density plot — density","title":"Density plot — density","text":"Create density plots cell values SpatRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Density plot — density","text":"","code":"# S4 method for class 'SpatRaster' density(x, maxcells=100000, plot=TRUE, main, ...)"},{"path":"https://rspatial.github.io/terra/reference/density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Density plot — density","text":"x SpatRaster maxcells maximum number (randomly sampled) cells used creating plot plot TRUE produce plot, else return density object main character. Caption plot(s) ... additional arguments passed plot","code":""},{"path":"https://rspatial.github.io/terra/reference/density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Density plot — density","text":"density plot (density object, returned invisibly plot=TRUE)","code":""},{"path":"https://rspatial.github.io/terra/reference/density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Density plot — density","text":"","code":"logo <- rast(system.file(\"ex/logo.tif\", package=\"terra\")) density(logo)"},{"path":"https://rspatial.github.io/terra/reference/deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"deprecated methods — deprecated","title":"deprecated methods — deprecated","text":"method longer available. Use gridDist instead","code":""},{"path":"https://rspatial.github.io/terra/reference/deprecated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"deprecated methods — deprecated","text":"","code":"# S4 method for class 'SpatRaster' gridDistance(x, ...)"},{"path":"https://rspatial.github.io/terra/reference/deprecated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"deprecated methods — deprecated","text":"x object ... additional arguments","code":""},{"path":"https://rspatial.github.io/terra/reference/depth.html","id":null,"dir":"Reference","previous_headings":"","what":"depth of SpatRaster layers — depth","title":"depth of SpatRaster layers — depth","text":"Get set depth layers SpatRaster. Experimental.","code":""},{"path":"https://rspatial.github.io/terra/reference/depth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"depth of SpatRaster layers — depth","text":"","code":"# S4 method for class 'SpatRaster' depth(x)  # S4 method for class 'SpatRaster' depth(x) <- value"},{"path":"https://rspatial.github.io/terra/reference/depth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"depth of SpatRaster layers — depth","text":"x SpatRaster value numeric vector","code":""},{"path":"https://rspatial.github.io/terra/reference/depth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"depth of SpatRaster layers — depth","text":"numeric","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/depth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"depth of SpatRaster layers — depth","text":"","code":"s <- rast(system.file(\"ex/logo.tif\", package=\"terra\"))     depth(s) <- 1:3 depth(s) #> [1] 1 2 3"},{"path":"https://rspatial.github.io/terra/reference/describe.html","id":null,"dir":"Reference","previous_headings":"","what":"describe — describe","title":"describe — describe","text":"Describe properties spatial data file generated \"GDALinfo\" tool.","code":""},{"path":"https://rspatial.github.io/terra/reference/describe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"describe — describe","text":"","code":"# S4 method for class 'character' describe(x, sds=FALSE, meta=FALSE, parse=FALSE, options=\"\", print=FALSE, open_opt=\"\")  # S4 method for class 'SpatRaster' describe(x, source, ...)"},{"path":"https://rspatial.github.io/terra/reference/describe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"describe — describe","text":"x character. name file spatial data. fully specified subdataset within file \"NETCDF:\\\"AVHRR.nc\\\":NDVI\" sds logical. TRUE description metadata subdatasets returned (available) meta logical. Get file level metadata instead parse logical. TRUE, metadata subdatasets parsed components (meta=TRUE) options character. vector valid options (meta=FALSE) including \"json\", \"mm\", \"stats\", \"hist\", \"nogcp\", \"nomd\", \"norat\", \"noct\", \"nofl\", \"checksum\", \"proj4\", \"listmdd\", \"mdd <value>\" <value> specifies domain '', \"wkt_format <value>\" value one 'WKT1', 'WKT2', 'WKT2_2015', 'WKT2_2018', \"sd <subdataset>\" <subdataset> name identifier sub-dataset. See https://gdal.org/en/latest/programs/gdalinfo.html. Ignored sds=TRUE print logical. TRUE, print results open_opt character. Driver specific open options source positive integer 1 nsrc(x) ... additional arguments passed describe<character> method","code":""},{"path":"https://rspatial.github.io/terra/reference/describe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"describe — describe","text":"character (invisibly, print=FALSE)","code":""},{"path":"https://rspatial.github.io/terra/reference/describe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"describe — describe","text":"","code":"f <- system.file(\"ex/elev.tif\", package=\"terra\") describe(f) #>  [1] \"Driver: GTiff/GeoTIFF\"                                                     #>  [2] \"Files: /Users/runner/work/_temp/Library/terra/ex/elev.tif\"                 #>  [3] \"Size is 95, 90\"                                                            #>  [4] \"Coordinate System is:\"                                                     #>  [5] \"GEOGCRS[\\\"WGS 84\\\",\"                                                       #>  [6] \"    ENSEMBLE[\\\"World Geodetic System 1984 ensemble\\\",\"                     #>  [7] \"        MEMBER[\\\"World Geodetic System 1984 (Transit)\\\"],\"                 #>  [8] \"        MEMBER[\\\"World Geodetic System 1984 (G730)\\\"],\"                    #>  [9] \"        MEMBER[\\\"World Geodetic System 1984 (G873)\\\"],\"                    #> [10] \"        MEMBER[\\\"World Geodetic System 1984 (G1150)\\\"],\"                   #> [11] \"        MEMBER[\\\"World Geodetic System 1984 (G1674)\\\"],\"                   #> [12] \"        MEMBER[\\\"World Geodetic System 1984 (G1762)\\\"],\"                   #> [13] \"        MEMBER[\\\"World Geodetic System 1984 (G2139)\\\"],\"                   #> [14] \"        MEMBER[\\\"World Geodetic System 1984 (G2296)\\\"],\"                   #> [15] \"        ELLIPSOID[\\\"WGS 84\\\",6378137,298.257223563,\"                       #> [16] \"            LENGTHUNIT[\\\"metre\\\",1]],\"                                     #> [17] \"        ENSEMBLEACCURACY[2.0]],\"                                           #> [18] \"    PRIMEM[\\\"Greenwich\\\",0,\"                                               #> [19] \"        ANGLEUNIT[\\\"degree\\\",0.0174532925199433]],\"                        #> [20] \"    CS[ellipsoidal,2],\"                                                    #> [21] \"        AXIS[\\\"geodetic latitude (Lat)\\\",north,\"                           #> [22] \"            ORDER[1],\"                                                     #> [23] \"            ANGLEUNIT[\\\"degree\\\",0.0174532925199433]],\"                    #> [24] \"        AXIS[\\\"geodetic longitude (Lon)\\\",east,\"                           #> [25] \"            ORDER[2],\"                                                     #> [26] \"            ANGLEUNIT[\\\"degree\\\",0.0174532925199433]],\"                    #> [27] \"    USAGE[\"                                                                #> [28] \"        SCOPE[\\\"Horizontal component of 3D system.\\\"],\"                    #> [29] \"        AREA[\\\"World.\\\"],\"                                                 #> [30] \"        BBOX[-90,-180,90,180]],\"                                           #> [31] \"    ID[\\\"EPSG\\\",4326]]\"                                                    #> [32] \"Data axis to CRS axis mapping: 2,1\"                                        #> [33] \"Origin = (5.741666666666666,50.191666666666663)\"                           #> [34] \"Pixel Size = (0.008333333333333,-0.008333333333333)\"                       #> [35] \"Metadata:\"                                                                 #> [36] \"  AREA_OR_POINT=Area\"                                                      #> [37] \"Image Structure Metadata:\"                                                 #> [38] \"  COMPRESSION=LZW\"                                                         #> [39] \"  INTERLEAVE=BAND\"                                                         #> [40] \"Corner Coordinates:\"                                                       #> [41] \"Upper Left  (   5.7416667,  50.1916667) (  5d44'30.00\\\"E, 50d11'30.00\\\"N)\" #> [42] \"Lower Left  (   5.7416667,  49.4416667) (  5d44'30.00\\\"E, 49d26'30.00\\\"N)\" #> [43] \"Upper Right (   6.5333333,  50.1916667) (  6d32' 0.00\\\"E, 50d11'30.00\\\"N)\" #> [44] \"Lower Right (   6.5333333,  49.4416667) (  6d32' 0.00\\\"E, 49d26'30.00\\\"N)\" #> [45] \"Center      (   6.1375000,  49.8166667) (  6d 8'15.00\\\"E, 49d49' 0.00\\\"N)\" #> [46] \"Band 1 Block=95x43 Type=Int16, ColorInterp=Gray\"                           #> [47] \"  Description = elevation\"                                                 #> [48] \"  Min=141.000 Max=547.000 \"                                                #> [49] \"  Minimum=141.000, Maximum=547.000, Mean=-9999.000, StdDev=-9999.000\"      #> [50] \"  NoData Value=-32768\"                                                     #> [51] \"  Metadata:\"                                                               #> [52] \"    STATISTICS_MAXIMUM=547\"                                                #> [53] \"    STATISTICS_MEAN=-9999\"                                                 #> [54] \"    STATISTICS_MINIMUM=141\"                                                #> [55] \"    STATISTICS_STDDEV=-9999\"                                               describe(f, meta=TRUE) #> [1] \"AREA_OR_POINT=Area\" #g <- describe(f, options=c(\"json\", \"nomd\", \"proj4\")) #head(g)"},{"path":"https://rspatial.github.io/terra/reference/diff.html","id":null,"dir":"Reference","previous_headings":"","what":"Lagged differences — diff","title":"Lagged differences — diff","text":"Compute difference consecutive layers SpatRaster.","code":""},{"path":"https://rspatial.github.io/terra/reference/diff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lagged differences — diff","text":"","code":"# S4 method for class 'SpatRaster' diff(x, lag=1, filename=\"\", ...)"},{"path":"https://rspatial.github.io/terra/reference/diff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lagged differences — diff","text":"x SpatRaster lag positive integer indicating lag use filename character. Output filename ... additional arguments writing files writeRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/diff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lagged differences — diff","text":"SpatRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/diff.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lagged differences — diff","text":"","code":"s <- rast(system.file(\"ex/logo.tif\", package=\"terra\"))    d <- diff(s)"},{"path":"https://rspatial.github.io/terra/reference/dimensions.html","id":null,"dir":"Reference","previous_headings":"","what":"Dimensions of a SpatRaster or SpatVector and related objects — dimensions","title":"Dimensions of a SpatRaster or SpatVector and related objects — dimensions","text":"Get number rows (nrow), columns (ncol), cells (ncell), layers (nlyr), sources (nsrc), size size (nlyr(x)*ncell(x)), spatial resolution SpatRaster. length returns number sub-datasets SpatRasterDataset SpatVectorCollection. SpatVector length(x) nrow(x). can also set number rows columns layers. setting dimensions, cell values dropped.","code":""},{"path":"https://rspatial.github.io/terra/reference/dimensions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dimensions of a SpatRaster or SpatVector and related objects — dimensions","text":"","code":"# S4 method for class 'SpatRaster' ncol(x)  # S4 method for class 'SpatRaster' nrow(x)  # S4 method for class 'SpatRaster' nlyr(x)  # S4 method for class 'SpatRaster' ncell(x)  # S4 method for class 'SpatRaster' nsrc(x)  # S4 method for class 'SpatRaster,numeric' ncol(x) <- value  # S4 method for class 'SpatRaster,numeric' nrow(x) <- value  # S4 method for class 'SpatRaster,numeric' nlyr(x) <- value  # S4 method for class 'SpatRaster' res(x)  # S4 method for class 'SpatRaster,numeric' res(x) <- value  # S4 method for class 'SpatRaster' xres(x)  # S4 method for class 'SpatRaster' yres(x)  # S4 method for class 'SpatVector' ncol(x)  # S4 method for class 'SpatVector' nrow(x)  # S4 method for class 'SpatVector' length(x)"},{"path":"https://rspatial.github.io/terra/reference/dimensions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dimensions of a SpatRaster or SpatVector and related objects — dimensions","text":"x SpatRaster SpatVector related objects value ncol nrow: positive integer. res: one two positive numbers","code":""},{"path":"https://rspatial.github.io/terra/reference/dimensions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dimensions of a SpatRaster or SpatVector and related objects — dimensions","text":"integer","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/dimensions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dimensions of a SpatRaster or SpatVector and related objects — dimensions","text":"","code":"r <- rast() ncol(r) #> [1] 360 nrow(r) #> [1] 180 nlyr(r) #> [1] 1 dim(r) #> [1] 180 360   1 nsrc(r) #> [1] 1 ncell(r) #> [1] 64800  rr  <- c(r,r) nlyr(rr) #> [1] 2 nsrc(rr) #> [1] 2 ncell(rr) #> [1] 64800  nrow(r) <- 18 ncol(r) <- 36 # equivalent to dim(r) <- c(18, 36)   dim(r) #> [1] 18 36  1 dim(r) <- c(10, 10, 5) dim(r) #> [1] 10 10  5  xres(r) #> [1] 36 yres(r) #> [1] 18 res(r) #> [1] 36 18  res(r) <- 1/120 # different xres and yres res(r) <- c(1/120, 1/60)"},{"path":"https://rspatial.github.io/terra/reference/direction.html","id":null,"dir":"Reference","previous_headings":"","what":"Direction — direction","title":"Direction — direction","text":"direction (azimuth) nearest cell NA. direction expressed radians, unless use argument degrees=TRUE.","code":""},{"path":"https://rspatial.github.io/terra/reference/direction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Direction — direction","text":"","code":"# S4 method for class 'SpatRaster' direction(x, from=FALSE, degrees=FALSE, method=\"cosine\", filename=\"\", ...)"},{"path":"https://rspatial.github.io/terra/reference/direction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Direction — direction","text":"x SpatRaster Logical. Default FALSE. TRUE, direction (instead )  nearest cell NA returned degrees Logical. FALSE (default) unit direction radians. method character. \"geo\", \"cosine\". \"geo\" precise slower geodesic method Karney (2003) used. \"cosine\" method faster less precise filename Character. Output filename (optional) ... Additional arguments writeRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/direction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Direction — direction","text":"SpatRaster","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/direction.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Direction — direction","text":"","code":"r <- rast(ncol=36,nrow=18, crs=\"+proj=merc\") values(r) <- NA r[306] <- 1 b <- direction(r, degrees=TRUE)  plot(b)   crs(r) <- \"+proj=longlat\" b <- direction(r)  plot(b)"},{"path":"https://rspatial.github.io/terra/reference/disaggregate.html","id":null,"dir":"Reference","previous_headings":"","what":"Disaggregate raster cells or vector geometries — disagg","title":"Disaggregate raster cells or vector geometries — disagg","text":"SpatRaster: Create SpatRaster higher resolution (smaller cells). values new SpatRaster larger original cells. SpatVector: Separate multi-objects (points, lines, polygons) single objects; segments (lines polygons).","code":""},{"path":"https://rspatial.github.io/terra/reference/disaggregate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Disaggregate raster cells or vector geometries — disagg","text":"","code":"# S4 method for class 'SpatRaster' disagg(x, fact, method=\"near\", filename=\"\", ...)  # S4 method for class 'SpatVector' disagg(x, segments=FALSE)"},{"path":"https://rspatial.github.io/terra/reference/disaggregate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Disaggregate raster cells or vector geometries — disagg","text":"x SpatRaster SpatVector fact positive integer. Aggregation factor expressed number cells direction (horizontally vertically). two integers (horizontal vertical aggregation factor) three integers (also aggregating layers) method character. Either \"near\" nearest \"bilinear\" bilinear interpolation segments logical. (poly-)lines polygons disaggregated line-segments? filename character. Output filename ... additional arguments writing files writeRaster","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/disaggregate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Disaggregate raster cells or vector geometries — disagg","text":"SpatRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/disaggregate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Disaggregate raster cells or vector geometries — disagg","text":"","code":"r <- rast(ncols=10, nrows=10) rd <- disagg(r, fact=c(10, 2)) ncol(rd) #> [1] 20 nrow(rd) #> [1] 100 values(r) <- 1:ncell(r) rd <- disagg(r, fact=c(4, 2))"},{"path":"https://rspatial.github.io/terra/reference/distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Geographic distance — distance","title":"Geographic distance — distance","text":"x SpatRaster: y missing method computes distance, cells NA SpatRaster x nearest cell NA (values, see arguments \"target\" \"exclude\"). y numeric value, cells value ignored. , distance cells computed (grid=FALSE). y SpatVector, distance SpatVector computed cells, optionally rasterization. distance always expressed meter coordinate reference system longitude/latitude, map units otherwise. Map units typically meter, inspect crs(x) doubt. Results precise, sometimes much precise, using longitude/latitude rather planar coordinate reference system, distort distance. x SpatVector: y missing, distance matrix objects x computed. distance matrix object class \"dist\" returned. y SpatVector geographic distance objects computed (matrix returned). sets number points, pairwise=TRUE, distance pair objects computed, vector returned. x matrix: x consist two columns, first \"x\" (longitude) second \"y\" coordinates (latitude). y also matrix, distance points x points y computed, unless pairwise=TRUE y missing, distance points x points x computed, unless sequential=TRUE","code":""},{"path":"https://rspatial.github.io/terra/reference/distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Geographic distance — distance","text":"","code":"# S4 method for class 'SpatRaster,missing' distance(x, y, target=NA, exclude=NULL, unit=\"m\", method=\"haversine\",        maxdist=NA, values=FALSE, filename=\"\", ...)  # S4 method for class 'SpatRaster,SpatVector' distance(x, y, unit=\"m\", rasterize=FALSE, method=\"cosine\", filename=\"\", ...)  # S4 method for class 'SpatVector,ANY' distance(x, y, sequential=FALSE, pairs=FALSE, symmetrical=TRUE, unit=\"m\", method=\"geo\")  # S4 method for class 'SpatVector,SpatVector' distance(x, y, pairwise=FALSE, unit=\"m\", method=\"cosine\")  # S4 method for class 'matrix,matrix' distance(x, y, lonlat, pairwise=FALSE, unit=\"m\", method=\"geo\")  # S4 method for class 'matrix,missing' distance(x, y, lonlat, sequential=FALSE, pairs=FALSE, symmetrical=TRUE,       unit=\"m\", method=\"geo\")"},{"path":"https://rspatial.github.io/terra/reference/distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Geographic distance — distance","text":"x SpatRaster, SpatVector, two-column matrix coordinates (x,y) (lon,lat) y missing, numeric, SpatVector, two-column matrix target numeric. value cells distances cells NA computed exclude numeric. value cells considered computing distances unit character. Can either \"m\" \"km\" method character. One \"geo\", \"cosine\" \"haversine\" (latter used distances lines polygons). \"geo\" precise slower method Karney (2003) used. two methods faster less precise maxdist numeric. Distance values set NA values logical. TRUE, value nearest non-target cell returned instead distance cell rasterize logical. TRUE distance computed cells covered geometries rasterization. can much faster cases filename character. Output filename ... additional arguments writing files writeRaster sequential logical. TRUE, distance sequential geometries returned pairwise logical. TRUE x y size (number rows), pairwise distances returned instead distances elements lonlat logical. TRUE coordinates interpreted angular (longitude/latitude). FALSE interpreted planar pairs logical. TRUE \"\", \"\", \"distance\" matrix returned symmetrical logical. TRUE pairs=TRUE, distance pair included . distance geometry 1 3 included, () distance 3 1 ","code":""},{"path":"https://rspatial.github.io/terra/reference/distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Geographic distance — distance","text":"SpatRaster, numeric, matrix, distance matrix (object class \"dist\")","code":""},{"path":"https://rspatial.github.io/terra/reference/distance.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Geographic distance — distance","text":"distance matrix can coerced regular matrix .matrix","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/distance.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Geographic distance — distance","text":"Karney, C.F.F., 2013. Algorithms geodesics, J. Geodesy 87: 43-55. doi:10.1007/s00190-012-0578-z.","code":""},{"path":"https://rspatial.github.io/terra/reference/distance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Geographic distance — distance","text":"","code":"#lonlat r <- rast(ncols=36, nrows=18, crs=\"+proj=longlat +datum=WGS84\") r[500] <- 1 d <- distance(r, unit=\"km\")  plot(d / 1000)   #planar rr <- rast(ncols=36, nrows=18, crs=\"+proj=utm +zone=1 +datum=WGS84\") rr[500] <- 1 d <- distance(rr)   rr[3:10, 3:10] <- 99 e <- distance(rr, exclude=99)   p1 <- vect(rbind(c(0,0), c(90,30), c(-90,-30)), crs=\"+proj=longlat +datum=WGS84\") dp <- distance(r, p1)   d <- distance(p1) d #>          1        2 #> 2 10014577          #> 3 10014577 20003931 as.matrix(d) #>          1        2        3 #> 1        0 10014577 10014577 #> 2 10014577        0 20003931 #> 3 10014577 20003931        0  p2 <- vect(rbind(c(30,-30), c(25,40), c(-9,-3)), crs=\"+proj=longlat +datum=WGS84\") dd <- distance(p1, p2) dd #>          [,1]     [,2]     [,3] #> [1,]  4609698  5124121  1055634 #> [2,]  9219396  5900335 11053086 #> [3,] 10818112 14137173  8984422 pd <- distance(p1, p2, pairwise=TRUE) pd #> [1] 4609698 5900335 8984422 pd == diag(dd) #> [1] TRUE TRUE TRUE   # polygons, lines crs <- \"+proj=utm +zone=1\" p1 <- vect(\"POLYGON ((0 0, 8 0, 8 9, 0 9, 0 0))\", crs=crs) p2 <- vect(\"POLYGON ((5 6, 15 6, 15 15, 5 15, 5 6))\", crs=crs) p3 <- vect(\"POLYGON ((2 12, 3 12, 3 13, 2 13, 2 12))\", crs=crs) p <- rbind(p1, p2, p3) L1 <- vect(\"LINESTRING(1 11, 4 6, 10 6)\", crs=crs) L2 <- vect(\"LINESTRING(8 14, 12 10)\", crs=crs) L3 <- vect(\"LINESTRING(1 8, 12 14)\", crs=crs) lns <- rbind(L1, L2, L3) pts <- vect(cbind(c(7,10,10), c(3,5,6)), crs=crs)  distance(p1,p3) #>      [,1] #> [1,]    3 distance(p) #>   1 2 #> 2 0   #> 3 3 2 distance(p,pts) #>          [,1]     [,2]     [,3] #> [1,] 0.000000 2.000000 2.000000 #> [2,] 3.000000 1.000000 0.000000 #> [3,] 9.848858 9.899495 9.219544 distance(p,lns) #>          [,1]     [,2]     [,3] #> [1,] 0.000000 3.535534 0.000000 #> [2,] 0.000000 0.000000 0.000000 #> [3,] 1.414214 5.099020 2.553878 distance(pts,lns) #>      [,1]     [,2]     [,3] #> [1,]    3 8.602325 7.262591 #> [2,]    1 5.385165 6.943356 #> [3,]    0 4.472136 6.065460"},{"path":"https://rspatial.github.io/terra/reference/divide.html","id":null,"dir":"Reference","previous_headings":"","what":"Subdivide a raster or polygons — divide","title":"Subdivide a raster or polygons — divide","text":"Divide SpatRaster n parts approximately sum weights (cell values). Divides SpatVector polygons n compact approximately equal area parts. results deterministic use set.seed able reproduce results. get warning non-convergence, can increase number iterations used additional argument iter.max","code":""},{"path":"https://rspatial.github.io/terra/reference/divide.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subdivide a raster or polygons — divide","text":"","code":"# S4 method for class 'SpatRaster' divide(x, n=2, start=\"ns\", as.raster=FALSE, na.rm=TRUE)  # S4 method for class 'SpatVector' divide(x, n=5, w=NULL, alpha=1, ...)"},{"path":"https://rspatial.github.io/terra/reference/divide.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subdivide a raster or polygons — divide","text":"x SpatRaster SpatVector polygons n numeric. Can single positive integer indicate number parts (SpatVector) number splits (SpatRaster). x SpatRaster, can also vector values -2, -1, 1, 2. 1 means one split 2 means two splits, negative sign indicates East-West (vertical) split opposed North-South split. x SpatVector can list least one elements: horizontal vertical specify proportions area splits cover. can either single fraction 1/3, sequence fractions ascending order c(1/4, 1/2, 1) start character. indicate initial direction splitting raster. \"ns\" North-South (horizontal) \"ew\" East-West (vertical) .raster logical. FALSE SpatVector returned. FALSE, SpatRaster returned. NA list SpatRaster SpatVector returned na.rm logical. TRUE cells x NA included output w SpatRaster , example, environmental data alpha numeric. One two numbers act weights x y coordinates ... additional arguments iter.max passed kmeans","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/divide.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subdivide a raster or polygons — divide","text":"SpatVector SpatRaster, list ","code":""},{"path":"https://rspatial.github.io/terra/reference/divide.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subdivide a raster or polygons — divide","text":"","code":"f <- system.file(\"ex/elev.tif\", package=\"terra\") r <- rast(f) x <- divide(r, 3) # plot(r); lines(x)   f <- system.file(\"ex/lux.shp\", package=\"terra\") v <- vect(f) d <- divide(v, 3) dv <- divide(v, list(h=.5))"},{"path":"https://rspatial.github.io/terra/reference/dots.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a dot-density map — dots","title":"Make a dot-density map — dots","text":"Create dots dot-density map add current map. Dot-density maps made display count data. example population counts, dot represents n persons. dots returned SpatVector. active graphics device, dots added points.","code":""},{"path":"https://rspatial.github.io/terra/reference/dots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a dot-density map — dots","text":"","code":"# S4 method for class 'SpatVector' dots(x, field, size,  ...)"},{"path":"https://rspatial.github.io/terra/reference/dots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a dot-density map — dots","text":"x SpatVector field character numeric indicating field name. numeric vector length x size positive number indicating number cases associated dot ... graphical arguments passed points","code":""},{"path":"https://rspatial.github.io/terra/reference/dots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a dot-density map — dots","text":"SpatVector (invisibly)","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/dots.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a dot-density map — dots","text":"","code":"f <- system.file(\"ex/lux.shp\", package=\"terra\") v <- vect(f) v$population <- 1000*(1:12)^2 plot(v, lwd=3, col=\"light gray\", border=\"white\") d <- dots(v, \"population\", 1000, col=\"red\", cex=.75) lines(v)  d #>  class       : SpatVector  #>  geometry    : points  #>  dimensions  : 650, 7  (geometries, attributes) #>  extent      : 5.776793, 6.51646, 49.4568, 50.12905  (xmin, xmax, ymin, ymax) #>  coord. ref. : lon/lat WGS 84 (EPSG:4326)  #>  names       :  ID_1   NAME_1  ID_2   NAME_2  AREA       POP population #>  type        : <num>    <chr> <num>    <chr> <num>     <num>      <num> #>  values      :     1 Diekirch     1 Clervaux   312 1.808e+04       1000 #>                    1 Diekirch     2 Diekirch   218 3.254e+04       4000 #>                    1 Diekirch     2 Diekirch   218 3.254e+04       4000"},{"path":"https://rspatial.github.io/terra/reference/draw.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw a polygon, line, extent, or points — draw","title":"Draw a polygon, line, extent, or points — draw","text":"Draw plot (map) get SpatVector SpatExtent object later use. calling function, start clicking map. done, press ESC. can also preset maximum number clicks. Note many installations work well default RStudio plotting device. work around , can first run dev.new(noRStudioGD = TRUE) create separate window plotting, use plot() followed draw() clicking map. may also help set RStudio \"Tools/Global Options/Appearance/Zoom\" 100","code":""},{"path":"https://rspatial.github.io/terra/reference/draw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw a polygon, line, extent, or points — draw","text":"","code":"# S4 method for class 'character' draw(x=\"extent\", col=\"red\", lwd=2, id=FALSE, n=1000, xpd=TRUE, ...)"},{"path":"https://rspatial.github.io/terra/reference/draw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw a polygon, line, extent, or points — draw","text":"x character. type object draw. One \"extent\", \"polygon\", \"line\", \"points\" col color used lwd width lines drawn id logical. TRUE, numeric ID shown map n maximum number clicks (apply x==\"extent\" case n always 2) xpd logical. TRUE, can draw outside current plotting area ... additional graphics arguments drawing","code":""},{"path":"https://rspatial.github.io/terra/reference/draw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw a polygon, line, extent, or points — draw","text":"SpatVector SpatExtent","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/elongate.html","id":null,"dir":"Reference","previous_headings":"","what":"elongate lines — elongate","title":"elongate lines — elongate","text":"Elongate SpatVector lines","code":""},{"path":"https://rspatial.github.io/terra/reference/elongate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"elongate lines — elongate","text":"","code":"# S4 method for class 'SpatVector' elongate(x, length=1, flat=FALSE)"},{"path":"https://rspatial.github.io/terra/reference/elongate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"elongate lines — elongate","text":"x SpatVector length positive number indicating much lines elongated end. unit meter crs lonlat linear unit crs cases (also meter cases) flat logical. TRUE, earth's curvature ignored lonlat data, distance unit degrees, meter","code":""},{"path":"https://rspatial.github.io/terra/reference/elongate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"elongate lines — elongate","text":"SpatVector","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/elongate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"elongate lines — elongate","text":"","code":"v <- vect(cbind(c(0,1,2), c(0,0,2)), \"lines\", crs=\"lonlat\") e <- elongate(v, 100000) plot(e) points(e)  geom(e) #>      geom part          x        y hole #> [1,]    1    1 -0.8983153 0.000000    0 #> [2,]    1    1  1.0000000 0.000000    0 #> [3,]    1    1  2.4044661 2.807681    0"},{"path":"https://rspatial.github.io/terra/reference/erase.html","id":null,"dir":"Reference","previous_headings":"","what":"Erase parts of a SpatVector object — erase","title":"Erase parts of a SpatVector object — erase","text":"Erase parts SpatVector another SpatVector SpatExtent. can also erase (parts ) polygons polygons SpatVector.","code":""},{"path":"https://rspatial.github.io/terra/reference/erase.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Erase parts of a SpatVector object — erase","text":"","code":"# S4 method for class 'SpatVector,SpatVector' erase(x, y)  # S4 method for class 'SpatVector,missing' erase(x, sequential=TRUE)  # S4 method for class 'SpatVector,SpatExtent' erase(x, y)"},{"path":"https://rspatial.github.io/terra/reference/erase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Erase parts of a SpatVector object — erase","text":"x SpatVector y SpatVector SpatExtent sequential logical. areas erased sequentially? See Details","code":""},{"path":"https://rspatial.github.io/terra/reference/erase.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Erase parts of a SpatVector object — erase","text":"SpatVector SpatExtent","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/erase.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Erase parts of a SpatVector object — erase","text":"polygons erased sequentially, everything covered first polygon removed polygons, everything covered (remaining ) second polygon removed, etc. polygons erased sequentially, overlapping areas erased areas covered single geometry returned.","code":""},{"path":"https://rspatial.github.io/terra/reference/erase.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Erase parts of a SpatVector object — erase","text":"","code":"f <- system.file(\"ex/lux.shp\", package=\"terra\") v <- vect(f)  # polygons with polygons or extent  e <- ext(5.6, 6, 49.55, 49.7) x <- erase(v, e)  p <- vect(\"POLYGON ((5.8 49.8, 6 49.9, 6.15 49.8, 6 49.6, 5.8 49.8))\") y <- erase(v, p)  # lines with polygons lns <- as.lines(rast(v, ncol=10, nrow=10))[12:22] eln <- erase(lns, v) plot(v) lines(lns, col='blue', lwd=4, lty=3) lines(eln, col='red', lwd=2)    ## self-erase h <- convHull(v[-12], \"NAME_1\") he <- erase(h) plot(h, lwd=2, border=\"red\", lty=2) lines(he, col=\"gray\", lwd=3)"},{"path":"https://rspatial.github.io/terra/reference/expanse.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the expanse (area) of individual polygons or for all (summed) raster cells — expanse","title":"Get the expanse (area) of individual polygons or for all (summed) raster cells — expanse","text":"Compute area covered polygons raster cells NA. method computes areas longitude/latitude rasters, size cells constant degrees, square meters. can also important coordinate reference system planar, equal-area. vector data, best way compute area use longitude/latitude CRS. contrary (erroneous, popular) belief use planar coordinate reference system. applicable, transformation lon/lat done automatically, transform=TRUE. Note important polygon geometries valid. valid, computed area may wrong. can check validity .valid fix problems makeValid","code":""},{"path":"https://rspatial.github.io/terra/reference/expanse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the expanse (area) of individual polygons or for all (summed) raster cells — expanse","text":"","code":"# S4 method for class 'SpatRaster' expanse(x, unit=\"m\", transform=TRUE, byValue=FALSE,       zones=NULL, wide=FALSE, usenames=FALSE)  # S4 method for class 'SpatVector' expanse(x, unit=\"m\", transform=TRUE)"},{"path":"https://rspatial.github.io/terra/reference/expanse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the expanse (area) of individual polygons or for all (summed) raster cells — expanse","text":"x SpatRaster SpatVector unit character. Output unit area. One \"m\", \"km\", \"ha\" transform logical. TRUE, planar CRS transformed lon/lat accuracy byValue logical. TRUE, area unique cell value returned zones NULL SpatRaster geometry identifying zones x wide logical. results \"wide\" rather \"long\" format? usenames logical. TRUE layers identified names instead numbers","code":""},{"path":"https://rspatial.github.io/terra/reference/expanse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the expanse (area) of individual polygons or for all (summed) raster cells — expanse","text":"SpatRaster: data.frame least two columns (\"layer\" \"area\") possibly also \"value\" (byValue TRUE), \"zone\" (zones TRUE). x values, total area cells returned. Otherwise, area cells NA returned. SpatVector: numeric (one value (multi-) polygon geometry.","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/expanse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the expanse (area) of individual polygons or for all (summed) raster cells — expanse","text":"","code":"### SpatRaster  r <- rast(nrows=18, ncols=36) v <- 1:ncell(r) v[200:400] <- NA values(r) <- v  # summed area in km2 expanse(r, unit=\"km\") #>   layer      area #> 1     1 273986501  # all cells  expanse(rast(r), unit=\"km\") #>   layer      area #> 1     1 510065622  r <- rast(ncols=90, nrows=45, ymin=-80, ymax=80) m <- project(r, \"+proj=merc\")  expanse(m, unit=\"km\") #>   layer      area #> 1     1 498751903 expanse(m, unit=\"km\", transform=FALSE) #>   layer       area #> 1     1 1241591858  m2 <- c(m, m) values(m2) <- cbind(c(1,2,NA,NA), c(11:14)) #> Warning: [setValues] values were recycled expanse(m2, unit=\"km\", byValue=TRUE, wide=TRUE) #>   layer        1        2       11       12       13       14 #> 1     1 10182145 10182145        0        0        0        0 #> 3     2        0        0 10182145 10182145 10182145 10182145   v <- vect(system.file(\"ex/lux.shp\", package=\"terra\")) r <- rast(system.file(\"ex/elev.tif\", package=\"terra\")) r <- round((r-50)/100) levels(r) <- data.frame(id=1:5, name=c(\"forest\", \"water\", \"urban\", \"crops\", \"grass\")) expanse(r, byValue=TRUE) #>   layer  value       area #> 1     1 forest   50778375 #> 2     1  water  715780779 #> 3     1  urban 1118216460 #> 4     1  crops  617965652 #> 5     1  grass   60868836  g <- rasterize(v, r, \"NAME_1\") expanse(r, byValue=TRUE, zones=g, wide=TRUE) #>   layer         zone   forest     water     urban     crops    grass #> 1     1     Diekirch  1110530 146734320 332045014 584531527 58106847 #> 2     1 Grevenmacher 46327739 247619382 219364571   1670053        0 #> 5     1   Luxembourg        0 315854211 555664543  25106417        0   ### SpatVector v <- vect(system.file(\"ex/lux.shp\", package=\"terra\"))  a <- expanse(v) a #>  [1] 312283206 218674025 259454806  76200409 263174257 188282143 128991500 #>  [8] 210354494 185630770 251322021 237113004 233329960 sum(a) #> [1] 2564810595"},{"path":"https://rspatial.github.io/terra/reference/ext.html","id":null,"dir":"Reference","previous_headings":"","what":"Create, get or set a SpatExtent — ext","title":"Create, get or set a SpatExtent — ext","text":"Get SpatExtent SpatRaster, SpatVector, spatial objects. create SpatExtent vector (length=4; order=xmin, xmax, ymin, ymax) can set extent SpatRaster, set extent SpatVector (see rescale ). See set.ext set extent place.","code":""},{"path":"https://rspatial.github.io/terra/reference/ext.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create, get or set a SpatExtent — ext","text":"","code":"# S4 method for class 'SpatRaster' ext(x, cells=NULL)  # S4 method for class 'SpatVector' ext(x)  # S4 method for class 'numeric' ext(x, ..., xy=FALSE)  # S4 method for class 'SpatRaster,SpatExtent' ext(x) <- value  # S4 method for class 'SpatRaster,numeric' ext(x) <- value"},{"path":"https://rspatial.github.io/terra/reference/ext.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create, get or set a SpatExtent — ext","text":"x SpatRaster, SpatVector, numeric vector length four (xmin, xmax, ymin, ymax), missing (case output global extent lon-lat coordinates) cells positive integer (cell) numbers subset extent area covered cells value SpatExtent, numeric vector length four (xmin, xmax, ymin, ymax) ... x single numeric value, additional numeric values xmax, ymin, ymax xy logical. Set TRUE indicate coordinates (xmin, ymin, xmax, ymax) order, instead terra standard order (xmin, xmax, ymin, ymax)","code":""},{"path":"https://rspatial.github.io/terra/reference/ext.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create, get or set a SpatExtent — ext","text":"SpatExtent object.","code":""},{"path":"https://rspatial.github.io/terra/reference/ext.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create, get or set a SpatExtent — ext","text":"","code":"ext() #> SpatExtent : -180, 180, -90, 90 (xmin, xmax, ymin, ymax)  r <- rast() e <- ext(r) as.vector(e) #> xmin xmax ymin ymax  #> -180  180  -90   90  as.character(e) #> [1] \"ext(-180, 180, -90, 90)\"  ext(r) <- c(0, 2.5, 0, 1.5) r #> class       : SpatRaster  #> dimensions  : 180, 360, 1  (nrow, ncol, nlyr) #> resolution  : 0.006944444, 0.008333333  (x, y) #> extent      : 0, 2.5, 0, 1.5  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (CRS84) (OGC:CRS84)  er <- ext(r)  round(er) #> SpatExtent : 0, 3, 0, 2 (xmin, xmax, ymin, ymax) # go \"in\" floor(er) #> SpatExtent : 0, 3, 0, 2 (xmin, xmax, ymin, ymax) # go \"out\" ceiling(er) #> SpatExtent : 0, 2, 0, 1 (xmin, xmax, ymin, ymax)  ext(r) <- e"},{"path":"https://rspatial.github.io/terra/reference/extend.html","id":null,"dir":"Reference","previous_headings":"","what":"Extend — extend","title":"Extend — extend","text":"Enlarge spatial extent SpatRaster. See crop (also) want remove rows columns. Note can enlarge SpatRasters entire rows columns. Therefore, extent output SpatRaster may exactly requested. Depending argument snap may bit smaller larger. can also enlarge SpatExtent method, algebraic notation (see examples)","code":""},{"path":"https://rspatial.github.io/terra/reference/extend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extend — extend","text":"","code":"# S4 method for class 'SpatRaster' extend(x, y, snap=\"near\", fill=NA, filename=\"\", overwrite=FALSE, ...)   # S4 method for class 'SpatExtent' extend(x, y)"},{"path":"https://rspatial.github.io/terra/reference/extend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extend — extend","text":"x SpatRaster SpatExtent y x SpatRaster, y SpatExtent, object can extracted (SpatRaster SpatVector objects). Alternatively, can provide one, two four non-negative integers indicating number rows columns need added side (single positive integer number rows columns added equal; 2 number (columns, rows), four (left column, right column, bottom row, top row).   x SpatExtent, y likewise numeric vector 1, 2, 4 elements snap character. One \"near\", \"\", \"\". Used align y geometry x fill numeric. value used new raster cells filename character. Output filename overwrite logical. TRUE, filename overwritten ... additional arguments writing files writeRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/extend.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extend — extend","text":"SpatRaster SpatExtent","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/extend.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extend — extend","text":"","code":"r <- rast(xmin=-150, xmax=-120, ymin=30, ymax=60, ncols=36, nrows=18) values(r) <- 1:ncell(r) e <- ext(-180, -100, 40, 70) re <- extend(r, e)  # extend with a number of rows and columns (at each side) re2 <- extend(r, c(2,10))  # SpatExtent e <- ext(r) e #> SpatExtent : -150, -120, 30, 60 (xmin, xmax, ymin, ymax) extend(e, 10) #> SpatExtent : -160, -110, 20, 70 (xmin, xmax, ymin, ymax) extend(e, c(10, -10, 0, 20)) #> SpatExtent : -160, -110, 30, 80 (xmin, xmax, ymin, ymax)   # add 10 columns / rows on all sides e + 10 #> SpatExtent : -160, -110, 20, 70 (xmin, xmax, ymin, ymax) # double extent e * 2 #> SpatExtent : -165, -105, 15, 75 (xmin, xmax, ymin, ymax) # increase extent by 25% e * 1.25 #> SpatExtent : -153.75, -116.25, 26.25, 63.75 (xmin, xmax, ymin, ymax)"},{"path":"https://rspatial.github.io/terra/reference/extract.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract values from a SpatRaster — extract","title":"Extract values from a SpatRaster — extract","text":"Extract values SpatRaster set locations. locations can SpatVector (points, lines, polygons), data.frame matrix (x, y) (longitude, latitude – order!) coordinates, vector cell numbers. argument y SpatVector first column ID (record number) SpatVector used (unless set ID=FALSE). Alternatively, can use zonal using rasterize SpatVector (may efficient cases).","code":""},{"path":"https://rspatial.github.io/terra/reference/extract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract values from a SpatRaster — extract","text":"","code":"# S4 method for class 'SpatRaster,SpatVector' extract(x, y, fun=NULL, method=\"simple\", cells=FALSE, xy=FALSE,     ID=TRUE, weights=FALSE, exact=FALSE, touches=is.lines(y), small=TRUE,   layer=NULL, bind=FALSE, raw=FALSE, search_radius=0, ...)  # S4 method for class 'SpatRaster,SpatExtent' extract(x, y, cells=FALSE, xy=FALSE)  # S4 method for class 'SpatRaster,matrix' extract(x, y, cells=FALSE, method=\"simple\")  # S4 method for class 'SpatRaster,numeric' extract(x, y, xy=FALSE, raw=FALSE)  # S4 method for class 'SpatVector,SpatVector' extract(x, y)"},{"path":"https://rspatial.github.io/terra/reference/extract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract values from a SpatRaster — extract","text":"x SpatRaster SpatVector polygons y SpatVector (points, lines, polygons). Alternatively, points, 2-column matrix data.frame (x, y) (lon, lat). vector cell numbers fun function summarize extracted data line polygon geometry. can use fun=table tabulate raster values line polygon geometry. weights=TRUE exact=TRUE mean, sum, min, max table accepted). Ignored y point geometry method character. method extracting values points (\"simple\" \"bilinear\"). \"simple\" values cell point falls returned. \"bilinear\" returned values interpolated values four nearest raster cells cells logical. TRUE cell numbers also returned, unless fun NULL. Also see cells xy logical. TRUE coordinates cells also returned, unless fun NULL. See xyFromCell ID logical. ID column added? , first column returned IDs (record numbers) y weights logical. TRUE y polygons, approximate fraction cell covered returned well, example compute weighted mean exact logical. TRUE y polygons, exact fraction cell covered returned well, example compute weighted mean touches logical. TRUE, values cells touched lines polygons extracted, just line render path, whose center point within polygon. relevant points; always considered TRUE weights=TRUE exact=TRUE small logical. TRUE, values cells touched polygons extracted none cells center points within polygon; even touches=FALSE layer character numeric select layer extract geometry. layer character can name y vector layer names. numeric, must integer values 1 nlyr(x) bind logical. TRUE, SpatVector returned consisting input SpatVector y cbind-ed extracted values raw logical. TRUE, matrix returned \"raw\" numeric cell values. FALSE, data.frame returned cell values transformed factor, logical, integer values, appropriate search_radius positive number. search-radius used y point geometry. value larger zero, maximum distance used find cell value nearest cell point falls cell missing (NA) value. value nearest cell, distance original cell, new cell number returned. radius expressed m data lon/lat coordinates distance unit crs cases (typically also m). lon/lat data, mean latitude points used compute distances, may imprecise data large latitudinal range ... additional arguments fun y SpatVector. example na.rm=TRUE. arguments passed SpatRaster,SpatVector method y matrix (method cells arguments)","code":""},{"path":"https://rspatial.github.io/terra/reference/extract.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract values from a SpatRaster — extract","text":"data.frame, matrix SpatVector","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/extract.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract values from a SpatRaster — extract","text":"","code":"r <- rast(ncols=5, nrows=5, xmin=0, xmax=5, ymin=0, ymax=5) values(r) <- 1:25 xy <- rbind(c(0.5,0.5), c(2.5,2.5)) p <- vect(xy, crs=\"+proj=longlat +datum=WGS84\")  extract(r, xy) #>   lyr.1 #> 1    21 #> 2    13 extract(r, p) #>   ID lyr.1 #> 1  1    21 #> 2  2    13  r[1,] #>   lyr.1 #> 1     1 #> 2     2 #> 3     3 #> 4     4 #> 5     5 r[5] #>   lyr.1 #> 1     5 r[,5] #>   lyr.1 #> 1     5 #> 2    10 #> 3    15 #> 4    20 #> 5    25  r[c(0:2, 99:101)] #>   lyr.1 #> 1     1 #> 2     2 #> 3    NA #> 4    NA #> 5    NA  f <- system.file(\"ex/meuse.tif\", package=\"terra\") r <- rast(f)  xy <- cbind(179000, 330000) xy <- rbind(xy-100, xy, xy+1000) extract(r, xy) #>   meuse #> 1   378 #> 2   251 #> 3   208  p <- vect(xy) g <- geom(p) g #>      geom part      x      y hole #> [1,]    1    1 178900 329900    0 #> [2,]    2    1 179000 330000    0 #> [3,]    3    1 180000 331000    0  extract(r, p) #>   ID meuse #> 1  1   378 #> 2  2   251 #> 3  3   208  x <- r + 10 extract(x, p) #>   ID meuse #> 1  1   388 #> 2  2   261 #> 3  3   218  i <- cellFromXY(r, xy) x[i] #>   meuse #> 1   388 #> 2   261 #> 3   218 r[i] #>   meuse #> 1   378 #> 2   251 #> 3   208  y <- c(x,x*2,x*3) y[i] #>   meuse meuse meuse #> 1   388   776  1164 #> 2   261   522   783 #> 3   218   436   654  ## extract with a polygon f <- system.file(\"ex/lux.shp\", package=\"terra\") v <- vect(f) v <- v[1:2,]  rf <- system.file(\"ex/elev.tif\", package=\"terra\") x <- rast(rf) extract(x, v, mean, na.rm=TRUE) #>   ID elevation #> 1  1  467.1052 #> 2  2  333.8629  z <- rast(v, resolution=.1, names=\"test\") values(z) <- 1:ncell(z) e <- extract(z, v, ID=TRUE) e #>   ID test #> 1  1    2 #> 2  1    3 #> 3  1    6 #> 4  1    7 #> 5  1    8 #> 6  2   13 #> 7  2   17 #> 8  2   18 #> 9  2   19 tapply(e[,2], e[,1], mean, na.rm=TRUE) #>     1     2  #>  5.20 16.75   x <- c(z, z*2, z/3) names(x) <- letters[1:3]  e <- extract(x, v, ID=TRUE) de <- data.frame(e) aggregate(de[,2:4], de[,1,drop=FALSE], mean) #>   ID     a    b        c #> 1  1  5.20 10.4 1.733333 #> 2  2 16.75 33.5 5.583333"},{"path":"https://rspatial.github.io/terra/reference/extractAlong.html","id":null,"dir":"Reference","previous_headings":"","what":"extract values along lines — extractAlong","title":"extract values along lines — extractAlong","text":"Extract raster values along line. , returned values ordered along line. case extract","code":""},{"path":"https://rspatial.github.io/terra/reference/extractAlong.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"extract values along lines — extractAlong","text":"","code":"extractAlong(x, y, ID=TRUE, cells=FALSE, xy=FALSE, online=FALSE, bilinear=TRUE)"},{"path":"https://rspatial.github.io/terra/reference/extractAlong.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"extract values along lines — extractAlong","text":"x SpatRaster y SpatVector lines geometry ID logical. ID column added? , first column returned IDs (record numbers) input SpatVector y cells logical. TRUE cell numbers also returned xy logical. TRUE coordinates cells traversed y also returned. See xyFromCell online logical. TRUE returned coordinates snapped y bilinear logical. TRUE returned raster values computed bilinear interpolation nearest four cells. relevant online=TRUE","code":""},{"path":"https://rspatial.github.io/terra/reference/extractAlong.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"extract values along lines — extractAlong","text":"data.frame","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/extractAlong.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"extract values along lines — extractAlong","text":"","code":"r <- rast(ncols=36, nrows=18, vals=1:(18*36)) cds1 <- rbind(c(-50,0), c(0,60), c(40,5), c(15,-45), c(-10,-25)) cds2 <- rbind(c(80,20), c(140,60), c(160,0), c(140,-55)) lines <- vect(list(cds1, cds2), \"lines\")  extractAlong(r, lines) #>    ID lyr.1 #> 1   1   337 #> 2   1   302 #> 3   1   266 #> 4   1   267 #> 5   1   231 #> 6   1   232 #> 7   1   196 #> 8   1   197 #> 9   1   161 #> 10  1   162 #> 11  1   126 #> 12  1    91 #> 13  1   127 #> 14  1   163 #> 15  1   164 #> 16  1   200 #> 17  1   201 #> 18  1   237 #> 19  1   273 #> 20  1   274 #> 21  1   310 #> 22  1   310 #> 23  1   346 #> 24  1   382 #> 25  1   381 #> 26  1   417 #> 27  1   453 #> 28  1   452 #> 29  1   488 #> 30  1   488 #> 31  1   487 #> 32  1   451 #> 33  1   450 #> 34  1   414 #> 35  2   279 #> 36  2   243 #> 37  2   244 #> 38  2   208 #> 39  2   209 #> 40  2   210 #> 41  2   174 #> 42  2   175 #> 43  2   139 #> 44  2   140 #> 45  2   105 #> 46  2   141 #> 47  2   177 #> 48  2   213 #> 49  2   214 #> 50  2   250 #> 51  2   286 #> 52  2   322 #> 53  2   323 #> 54  2   358 #> 55  2   394 #> 56  2   430 #> 57  2   429 #> 58  2   465 #> 59  2   501 #> 60  2   537"},{"path":"https://rspatial.github.io/terra/reference/extractRange.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract values for a range of layers from a SpatRaster — extractRange","title":"Extract values for a range of layers from a SpatRaster — extractRange","text":"Extract values SpatRaster set locations range layers. extract values single layers, use extract","code":""},{"path":"https://rspatial.github.io/terra/reference/extractRange.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract values for a range of layers from a SpatRaster — extractRange","text":"","code":"# S4 method for class 'SpatRaster' extractRange(x, y, first, last, lyr_fun=NULL,      geom_fun=NULL, ID=FALSE, na.rm=TRUE, ...)"},{"path":"https://rspatial.github.io/terra/reference/extractRange.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract values for a range of layers from a SpatRaster — extractRange","text":"x SpatRaster y SpatVector (points, lines, polygons). Alternatively, points, 2-column matrix data.frame (x, y) (lon, lat). vector cell numbers first layer name number, indicating first layer range layers considered last layer name number, indicating last layer range considered lyr_fun function summarize extracted data across layers geom_fun function summarize extracted data line polygon geometry. Ignored y point geometry ID logical. ID column added? , first column returned IDs (record numbers) y na.rm logical. missing values ignored? ... additional arguments passed extract","code":""},{"path":"https://rspatial.github.io/terra/reference/extractRange.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract values for a range of layers from a SpatRaster — extractRange","text":"numeric data.frame","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/extractRange.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract values for a range of layers from a SpatRaster — extractRange","text":"","code":"r <- rast(system.file(\"ex/logo.tif\", package=\"terra\"))    xy <- data.frame(c(50,80), c(30, 60)) extract(r, xy) #>   ID red green blue #> 1  1 149   158  215 #> 2  2  68    67   63 extract(r, xy, layer=c(\"red\", \"green\")) #>   ID layer value #> 1  1   red   149 #> 2  2 green    67 extractRange(r, xy, first=1:2, last=3:2, lyr_fun=sum) #> [1] 308  68"},{"path":"https://rspatial.github.io/terra/reference/factors.html","id":null,"dir":"Reference","previous_headings":"","what":"Categorical rasters — factors","title":"Categorical rasters — factors","text":"SpatRaster layer can represent categorical variable (factor). Like factors, SpatRaster categories stored integers associated label. categories can inspected levels cats. represented data.frame must two columns, first one identifying (integer) cell values column(s) providing category labels. multiple columns categories, can set \"active\" category choose one want use. cats returns entire data.frame, whereas levels return two columns: index active category. set categories first layer SpatRaster, can provide levels<- data.frame list data.frame. set categories multiple layers can provide levels<- list one element (either data.frame NULL) layer. Use categories set categories specific layer specific layers. droplevels removes categories used (declared present values raster) levels=NULL. addCats adds additional categories layer already categorical. adds new variables, new levels existing categorical variable. combineLevels combines levels layers x sets layers. fails labeling conflicts layers","code":""},{"path":"https://rspatial.github.io/terra/reference/factors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Categorical rasters — factors","text":"","code":"# S4 method for class 'SpatRaster' levels(x)  # S4 method for class 'SpatRaster' levels(x) <- value  # S4 method for class 'SpatRaster' cats(x, layer)  # S4 method for class 'SpatRaster' categories(x, layer=1, value, active=1, ...)  # S4 method for class 'SpatRaster' droplevels(x, level=NULL, layer=1)  # S4 method for class 'SpatRaster' addCats(x, value, merge=FALSE, layer=1)  combineLevels(x, assign=TRUE)"},{"path":"https://rspatial.github.io/terra/reference/factors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Categorical rasters — factors","text":"x SpatRaster layer layer name number (positive integer); 0 layers value data.frame (ID, category) define categories. NULL remove active positive integer, indicating column value used active category (zero based skip first column cell values; 1 second column value) level categories remove layer specified layer merge logical. TRUE, categories combined merge using first column value ID. FALSE categories combined cbind ... additional arguments (none) assign logical. Assign combined levels layers x? FALSE, levels returned","code":""},{"path":"https://rspatial.github.io/terra/reference/factors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Categorical rasters — factors","text":"SpatRaster, data.frame, list data.frames (levels, cats), logical (.factor)","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/factors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Categorical rasters — factors","text":"","code":"set.seed(0) r <- rast(nrows=10, ncols=10) values(r) <- sample(3, ncell(r), replace=TRUE) is.factor(r) #> [1] FALSE  cls <- data.frame(id=1:3, cover=c(\"forest\", \"water\", \"urban\")) levels(r) <- cls is.factor(r) #> [1] TRUE r #> class       : SpatRaster  #> dimensions  : 10, 10, 1  (nrow, ncol, nlyr) #> resolution  : 36, 18  (x, y) #> extent      : -180, 180, -90, 90  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (CRS84) (OGC:CRS84)  #> source(s)   : memory #> categories  : cover  #> name        :  cover  #> min value   : forest  #> max value   :  urban   plot(r, col=c(\"green\", \"blue\", \"light gray\")) text(r, digits=3, cex=.75, halo=TRUE)   # raster starts at 3 x <- r + 2 is.factor(x) #> [1] FALSE  # Multiple categories d <- data.frame(id=3:5, cover=cls[,2], letters=letters[1:3], value=10:12) levels(x) <- d x #> class       : SpatRaster  #> dimensions  : 10, 10, 1  (nrow, ncol, nlyr) #> resolution  : 36, 18  (x, y) #> extent      : -180, 180, -90, 90  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (CRS84) (OGC:CRS84)  #> source(s)   : memory #> categories  : cover, letters, value  #> name        :  cover  #> min value   : forest  #> max value   :  urban   # get current index activeCat(x) #> [1] 1 # set index  activeCat(x) <- 3 activeCat(x) #> [1] 3 activeCat(x) <- \"letters\" plot(x, col=c(\"green\", \"blue\", \"light gray\")) text(x, digits=3, cex=.75, halo=TRUE)   r <- as.numeric(x) r #> class       : SpatRaster  #> dimensions  : 10, 10, 1  (nrow, ncol, nlyr) #> resolution  : 36, 18  (x, y) #> extent      : -180, 180, -90, 90  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (CRS84) (OGC:CRS84)  #> source(s)   : memory #> name        : cover  #> min value   :     1  #> max value   :     3   p <- as.polygons(x) plot(p, \"letters\", col=c(\"green\", \"blue\", \"light gray\"))"},{"path":"https://rspatial.github.io/terra/reference/fill.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove holes from polygons — fillHoles","title":"Remove holes from polygons — fillHoles","text":"Remove holes SpatVector polygons. inverse=TRUE holes returned (polygons).","code":""},{"path":"https://rspatial.github.io/terra/reference/fill.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove holes from polygons — fillHoles","text":"","code":"# S4 method for class 'SpatVector' fillHoles(x, inverse=FALSE)"},{"path":"https://rspatial.github.io/terra/reference/fill.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove holes from polygons — fillHoles","text":"x SpatVector inverse logical. TRUE holes returned polygons","code":""},{"path":"https://rspatial.github.io/terra/reference/fill.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove holes from polygons — fillHoles","text":"SpatVector","code":""},{"path":"https://rspatial.github.io/terra/reference/fill.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove holes from polygons — fillHoles","text":"","code":"x <- rbind(c(-10,0), c(140,60), c(160,0), c(140,-55)) hole <- rbind(c(80,0), c(105,13), c(120,2), c(105,-13))  z <- rbind(cbind(object=1, part=1, x, hole=0),         cbind(object=1, part=1, hole, hole=1)) colnames(z)[3:4] <- c('x', 'y') p <- vect(z, \"polygons\", atts=data.frame(id=1)) p #>  class       : SpatVector  #>  geometry    : polygons  #>  dimensions  : 1, 1  (geometries, attributes) #>  extent      : -10, 160, -55, 60  (xmin, xmax, ymin, ymax) #>  coord. ref. :   #>  names       :    id #>  type        : <num> #>  values      :     1  f <- fillHoles(p) g <- fillHoles(p, inverse=TRUE)  plot(p, lwd=16, border=\"gray\", col=\"light yellow\") polys(f, border=\"blue\", lwd=3, density=4, col=\"orange\") polys(g, col=\"white\", lwd=3)"},{"path":"https://rspatial.github.io/terra/reference/fillTime.html","id":null,"dir":"Reference","previous_headings":"","what":"Fill time gaps in a SpatRaster — fillTime","title":"Fill time gaps in a SpatRaster — fillTime","text":"Add empty layers existing layers time step layer . See approximate estimate values layer (missing values)","code":""},{"path":"https://rspatial.github.io/terra/reference/fillTime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fill time gaps in a SpatRaster — fillTime","text":"","code":"# S4 method for class 'SpatRaster' fillTime(x, filename=\"\", ...)"},{"path":"https://rspatial.github.io/terra/reference/fillTime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fill time gaps in a SpatRaster — fillTime","text":"x SpatRaster filename character. Output filename ... list named options writing files writeRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/fillTime.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fill time gaps in a SpatRaster — fillTime","text":"SpatRaster","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/fillTime.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fill time gaps in a SpatRaster — fillTime","text":"","code":"r <- rast(system.file(\"ex/logo.tif\", package=\"terra\"))    s <- c(r, r) time(s) <- as.Date(\"2001-01-01\") + c(0:2, 5:7) time(s) #> [1] \"2001-01-01\" \"2001-01-02\" \"2001-01-03\" \"2001-01-06\" \"2001-01-07\" #> [6] \"2001-01-08\" ss <- fillTime(s) time(ss) #> [1] \"2001-01-01\" \"2001-01-02\" \"2001-01-03\" \"2001-01-04\" \"2001-01-05\" #> [6] \"2001-01-06\" \"2001-01-07\" \"2001-01-08\"  a <- approximate(ss)"},{"path":"https://rspatial.github.io/terra/reference/flip.html","id":null,"dir":"Reference","previous_headings":"","what":"Flip or reverse a raster — flip","title":"Flip or reverse a raster — flip","text":"Flip values SpatRaster inverting order rows (vertical=TRUE) columns (vertical=FALSE). rev horizontal ** vertical flip.","code":""},{"path":"https://rspatial.github.io/terra/reference/flip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flip or reverse a raster — flip","text":"","code":"# S4 method for class 'SpatRaster' flip(x, direction=\"vertical\", filename=\"\", ...)  # S4 method for class 'SpatVector' flip(x, direction=\"vertical\")  # S4 method for class 'SpatRaster' rev(x)"},{"path":"https://rspatial.github.io/terra/reference/flip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flip or reverse a raster — flip","text":"x SpatRaster SpatVector direction character. (partially) match \"vertical\" flip rows, \"horizontal\" flip columns filename character. Output filename ... additional arguments writing files writeRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/flip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flip or reverse a raster — flip","text":"SpatRaster","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/flip.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Flip or reverse a raster — flip","text":"","code":"r <- rast(nrow=18, ncol=36) m <- matrix(1:ncell(r), nrow=18) values(r) <- as.vector(t(m)) rx <- flip(r, direction=\"h\")  values(r) <- as.vector(m) ry <- flip(r, direction=\"v\")  v <- rev(r)"},{"path":"https://rspatial.github.io/terra/reference/flowAccumulation.html","id":null,"dir":"Reference","previous_headings":"","what":"Flow accumulation — flowAccumulation","title":"Flow accumulation — flowAccumulation","text":"Computes flow accumulation total contributing area terms numbers cells upstream cell.","code":""},{"path":"https://rspatial.github.io/terra/reference/flowAccumulation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flow accumulation — flowAccumulation","text":"","code":"# S4 method for class 'SpatRaster' flowAccumulation(x, weight=NULL, filename=\"\", ...)"},{"path":"https://rspatial.github.io/terra/reference/flowAccumulation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flow accumulation — flowAccumulation","text":"x SpatRaster flow direction, see terrain. weight SpatRaster weight/score daa. example, cell area precipitation filename character. Output filename ... additional arguments writing files writeRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/flowAccumulation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flow accumulation — flowAccumulation","text":"SpatRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/flowAccumulation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Flow accumulation — flowAccumulation","text":"algorithm adaptation one proposed Zhou al, 2019.","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/flowAccumulation.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Flow accumulation — flowAccumulation","text":"Emanuele Cordano","code":""},{"path":"https://rspatial.github.io/terra/reference/flowAccumulation.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Flow accumulation — flowAccumulation","text":"Zhou, G., Wei, H. & Fu, S. fast simple algorithm calculating flow accumulation matrices raster digital elevation. Front. Earth Sci. 13, 317–326 (2019). doi:10.1007/s11707-018-0725-9. Also see: https://ica-abs.copernicus.org/articles/1/434/2019/","code":""},{"path":"https://rspatial.github.io/terra/reference/flowAccumulation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Flow accumulation — flowAccumulation","text":"","code":"elev1 <- array(NA,c(9,9)) elev2 <- elev1 dx <- 1 dy <- 1  for (r in 1:nrow(elev1)) {   y <- (r-5)*dx   for (c in 1:ncol(elev1)) {          x <- (c-5)*dy     elev1[r,c] <- 5*(x^2+y^2)     elev2[r,c] <- 10+5*(abs(x))-0.001*y    } }    ## Elevation raster elev1 <- rast(elev1) elev2 <- rast(elev2)  t(array(elev1[],rev(dim(elev1)[1:2]))) #>       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] #>  [1,]  160  125  100   85   80   85  100  125  160 #>  [2,]  125   90   65   50   45   50   65   90  125 #>  [3,]  100   65   40   25   20   25   40   65  100 #>  [4,]   85   50   25   10    5   10   25   50   85 #>  [5,]   80   45   20    5    0    5   20   45   80 #>  [6,]   85   50   25   10    5   10   25   50   85 #>  [7,]  100   65   40   25   20   25   40   65  100 #>  [8,]  125   90   65   50   45   50   65   90  125 #>  [9,]  160  125  100   85   80   85  100  125  160 t(array(elev2[],rev(dim(elev2)[1:2]))) #>         [,1]   [,2]   [,3]   [,4]   [,5]   [,6]   [,7]   [,8]   [,9] #>  [1,] 30.004 25.004 20.004 15.004 10.004 15.004 20.004 25.004 30.004 #>  [2,] 30.003 25.003 20.003 15.003 10.003 15.003 20.003 25.003 30.003 #>  [3,] 30.002 25.002 20.002 15.002 10.002 15.002 20.002 25.002 30.002 #>  [4,] 30.001 25.001 20.001 15.001 10.001 15.001 20.001 25.001 30.001 #>  [5,] 30.000 25.000 20.000 15.000 10.000 15.000 20.000 25.000 30.000 #>  [6,] 29.999 24.999 19.999 14.999  9.999 14.999 19.999 24.999 29.999 #>  [7,] 29.998 24.998 19.998 14.998  9.998 14.998 19.998 24.998 29.998 #>  [8,] 29.997 24.997 19.997 14.997  9.997 14.997 19.997 24.997 29.997 #>  [9,] 29.996 24.996 19.996 14.996  9.996 14.996 19.996 24.996 29.996  plot(elev1)  plot(elev2)   ## Flow direction raster flowdir1<- terrain(elev1,v=\"flowdir\") flowdir2<- terrain(elev2,v=\"flowdir\")  t(array(flowdir1[],rev(dim(flowdir1)[1:2]))) #>       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] #>  [1,]    2    2    2    4    4    4    8    8    8 #>  [2,]    2    2    2    4    4    4    8    8    8 #>  [3,]    2    2    2    4    4    4    8    8    8 #>  [4,]    1    1    1    2    4    8   16   16   16 #>  [5,]    1    1    1    1    0   16   16   16   16 #>  [6,]    1    1    1  128   64   32   16   16   16 #>  [7,]  128  128  128   64   64   64   32   32   32 #>  [8,]  128  128  128   64   64   64   32   32   32 #>  [9,]  128  128  128   64   64   64   32   32   32 t(array(flowdir2[],rev(dim(flowdir2)[1:2]))) #>       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] #>  [1,]    1    1    1    1    4   16   16   16   16 #>  [2,]    1    1    1    1    4   16   16   16   16 #>  [3,]    1    1    1    1    4   16   16   16   16 #>  [4,]    1    1    1    1    4   16   16   16   16 #>  [5,]    1    1    1    1    4   16   16   16   16 #>  [6,]    1    1    1    1    4   16   16   16   16 #>  [7,]    1    1    1    1    4   16   16   16   16 #>  [8,]    1    1    1    1    4   16   16   16   16 #>  [9,]    1    1    1    1    0   16   16   16   16  plot(flowdir1)  plot(flowdir2)   ##  flow_acc1 <- flowAccumulation((flowdir1)) flow_acc2 <- flowAccumulation((flowdir2))  weight <- elev1*0+10  flow_acc1w <- flowAccumulation(flowdir1,weight) flow_acc2w <- flowAccumulation(flowdir2,weight)  t(array(flow_acc1w[],rev(dim(flow_acc1w)[1:2]))) #>       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] #>  [1,]   10   10   10   10   10   10   10   10   10 #>  [2,]   10   20   20   30   20   30   20   20   10 #>  [3,]   10   20   30   60   30   60   30   20   10 #>  [4,]   10   30   60  160   40  160   60   30   10 #>  [5,]   10   20   30   40  810   40   30   20   10 #>  [6,]   10   30   60  160   40  160   60   30   10 #>  [7,]   10   20   30   60   30   60   30   20   10 #>  [8,]   10   20   20   30   20   30   20   20   10 #>  [9,]   10   10   10   10   10   10   10   10   10 t(array(flow_acc2w[],rev(dim(flow_acc2w)[1:2]))) #>       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] #>  [1,]   10   20   30   40   90   40   30   20   10 #>  [2,]   10   20   30   40  180   40   30   20   10 #>  [3,]   10   20   30   40  270   40   30   20   10 #>  [4,]   10   20   30   40  360   40   30   20   10 #>  [5,]   10   20   30   40  450   40   30   20   10 #>  [6,]   10   20   30   40  540   40   30   20   10 #>  [7,]   10   20   30   40  630   40   30   20   10 #>  [8,]   10   20   30   40  720   40   30   20   10 #>  [9,]   10   20   30   40  810   40   30   20   10  plot(flow_acc1w)  plot(flow_acc2w)    ## Application wth example elevation data  elev <- rast(system.file('ex/elev.tif',package=\"terra\")) flowdir <- terrain(elev,\"flowdir\")  weight <- cellSize(elev,unit=\"km\") flowacc_weight <- flowAccumulation(flowdir,weight) flowacc  <- flowAccumulation(flowdir)"},{"path":"https://rspatial.github.io/terra/reference/focal.html","id":null,"dir":"Reference","previous_headings":"","what":"Focal values — focal","title":"Focal values — focal","text":"Calculate focal (\"moving window\") values cell.","code":""},{"path":"https://rspatial.github.io/terra/reference/focal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Focal values — focal","text":"","code":"# S4 method for class 'SpatRaster' focal(x, w=3, fun=\"sum\", ..., na.policy=\"all\", fillvalue=NA,      expand=FALSE, silent=TRUE, filename=\"\", overwrite=FALSE, wopt=list())"},{"path":"https://rspatial.github.io/terra/reference/focal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Focal values — focal","text":"x SpatRaster w window. window can defined one (square) two numbers (row, col); odd-sized weights matrix. See Details. fun function takes multiple numbers, returns numeric vector (one multiple numbers). example mean, modal, min max ... additional arguments passed fun na.rm na.policy character. Can used determine cells x focal values computed. Must one \"\" (compute cells), \"\" (cells NA) \"omit\" (skip cells NA). Note value argument affect cells around focal cell included computations (use na.rm=TRUE ignore cells NA ) fillvalue numeric. value cells virtual rows columns outside raster expand logical. TRUE value cells virtual rows columns outside raster set value border. available \"build-\" funs mean, sum, min max silent logical. TRUE error messages printed may occur trying fun determine length returned value. can useful debugging fun work filename character. Output filename overwrite logical. TRUE, filename overwritten wopt additional arguments writing files writeRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/focal.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Focal values — focal","text":"focal window used must odd dimensions. need even sides, can use matrix add column row NA's mask values. Window values typically 1 NA indicate whether value used ignored computations, respectively. NA values w can useful creating non-rectangular (e.g. circular) windows. weights matrix numeric values can also supplied w. case weights matrix, cells NA weights ignored, rest values focal window multiplied corresponding weight prior `fun` applied. Note, na.rm need TRUE w contains NA values cells ignored computations. \"mean\" function special case, supplying weights w instead calculate weighted mean. \"sum\" function returns NA focal cells NA na.rm=TRUE. R normally return zero cases. See difference focal(x, fun=sum, na.rm=TRUE) focal(x, fun=\\() sum(, na.rm=TRUE)) Example weight matrices Laplacian filter: filter=matrix(c(0,1,0,1,-4,1,0,1,0), nrow=3) Sobel filters (edge detection): fx=matrix(c(-1,-2,-1,0,0,0,1,2,1), nrow=3) fy=matrix(c(1,0,-1,2,0,-2,1,0,-1), nrow=3)","code":""},{"path":"https://rspatial.github.io/terra/reference/focal.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Focal values — focal","text":"using global lon/lat rasters, focal window \"wraps around\" date-line.","code":""},{"path":"https://rspatial.github.io/terra/reference/focal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Focal values — focal","text":"SpatRaster","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/focal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Focal values — focal","text":"","code":"r <- rast(ncols=10, nrows=10, ext(0, 10, 0, 10)) values(r) <- 1:ncell(r)  f <- focal(r, w=3, fun=function(x, ...) quantile(x, c(.25, .5, .75), ...), na.rm=TRUE)   f <- focal(r, w=3, fun=\"mean\")   # the following two statements are equivalent: a <- focal(r, w=matrix(1/9, nc=3, nr=3)) b <- focal(r, w=3, fun=mean, na.rm=FALSE)  # but this is different d <- focal(r, w=3, fun=mean, na.rm=TRUE)  ## illustrating the effect of different  ## combinations of na.rm and na.policy v <- vect(system.file(\"ex/lux.shp\", package=\"terra\")) r <- rast(system.file(\"ex/elev.tif\", package=\"terra\")) r[45:50, 45:50] <- NA  # also try \"mean\" or \"min\" f <- \"sum\"  # na.rm=FALSE plot(focal(r, 5, f) , fun=lines(v))   # na.rm=TRUE plot(focal(r, 5, f, na.rm=TRUE), fun=lines(v))   # only change cells that are NA plot(focal(r, 5, f, na.policy=\"only\", na.rm=TRUE), fun=lines(v))   # do not change cells that are NA plot(focal(r, 5, f, na.policy=\"omit\", na.rm=TRUE), fun=lines(v))   # does not do anything # focal(r, 5, f, na.policy=\"only\", na.rm=FALSE)"},{"path":"https://rspatial.github.io/terra/reference/focal3D.html","id":null,"dir":"Reference","previous_headings":"","what":"Three-dimensional focal values — focal3D","title":"Three-dimensional focal values — focal3D","text":"Calculate focal (\"moving window\") values three-dimensional neighborhood (window) focal cells. See focal two-dimensional focal computation.","code":""},{"path":"https://rspatial.github.io/terra/reference/focal3D.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Three-dimensional focal values — focal3D","text":"","code":"# S4 method for class 'SpatRaster' focal3D(x, w=3, fun=mean, ..., na.policy=\"all\", fillvalue=NA, pad=FALSE,    padvalue=fillvalue, expand=FALSE, silent=TRUE,    filename=\"\", overwrite=FALSE, wopt=list())"},{"path":"https://rspatial.github.io/terra/reference/focal3D.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Three-dimensional focal values — focal3D","text":"x SpatRaster w window. rectangular prism (cuboid) defined three numbers three-dimensional array. values used weights, usually zero, one, NA, fractions. window used must odd dimensions. desire use even sides, can use array, pad values rows /columns contain NAs. fun function takes multiple numbers, returns one multiple numbers focal area. example mean, modal, min max ... additional arguments passed fun na.rm na.policy character. Can used determine cells x, central layer, focal values computed. Must one \"\" (compute cells), \"\" (cells NA) \"omit\" (skip cells NA). Note value argument affect cells around focal cell included computations (use na.rm=TRUE ignore cells NA computation focal value) fillvalue numeric. value cells virtual rows columns outside raster pad logical. Add virtual layers first last layer padvalue numeric. value cells virtual layers expand logical. Add virtual layers first last layer first last layers. TRUE, arguments pad padvalue ignored silent logical. TRUE error messages printed may occur trying fun determine length returned value. can useful debugging function passed fun work filename character. Output filename overwrite logical. TRUE, filename overwritten wopt additional arguments writing files writeRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/focal3D.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Three-dimensional focal values — focal3D","text":"SpatRaster","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/focal3D.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Three-dimensional focal values — focal3D","text":"","code":"r <- rast(system.file(\"ex/logo.tif\", package=\"terra\"))    x <- focal3D(r, c(5,5,3), na.rm=TRUE)  a <- array(c(0,1,0,1,1,1,0,1,0, rep(1,9), 0,1,0,1,1,1,0,1,0), c(3,3,3)) a[a==0] <- NA z <- focal3D(r, a, na.rm=TRUE)"},{"path":"https://rspatial.github.io/terra/reference/focalCpp.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute focal values with an iterating C++ function — focalCpp","title":"Compute focal values with an iterating C++ function — focalCpp","text":"Calculate focal values C++ function iterates cells speed computations avoiding R loop (apply). See focal easier use method.","code":""},{"path":"https://rspatial.github.io/terra/reference/focalCpp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute focal values with an iterating C++ function — focalCpp","text":"","code":"# S4 method for class 'SpatRaster' focalCpp(x, w=3, fun, ..., fillvalue=NA,      silent=TRUE, filename=\"\", overwrite=FALSE, wopt=list())"},{"path":"https://rspatial.github.io/terra/reference/focalCpp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute focal values with an iterating C++ function — focalCpp","text":"x SpatRaster w window. window can defined one (square) two numbers (row, col); odd-sized weights matrix. See Details section focal fun cppFunction iterates cells. C++ functions operate single focal window, R functions use focal instead. function must least three arguments. first argument can name, must Rcpp::NumericVector, Rcpp::IntegerVector std::vector<double>. container receives focal values. two arguments ni wi must type size_t. ni represents number cells nw represents size (number elements ) window ... additional arguments fun fillvalue numeric. value cells virtual rows columns outside raster silent logical. TRUE error messages printed may occur trying fun determine length returned value. can useful debugging fun work filename character. Output filename overwrite logical. TRUE, filename overwritten wopt additional arguments writing files writeRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/focalCpp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute focal values with an iterating C++ function — focalCpp","text":"SpatRaster","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/focalCpp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute focal values with an iterating C++ function — focalCpp","text":"","code":"if (FALSE) { # \\dontrun{ library(Rcpp) cppFunction(    'NumericVector sum_and_multiply(NumericVector x, double m, size_t ni, size_t nw) {     NumericVector out(ni);     // loop over cells     size_t start = 0;     for (size_t i=0; i<ni; i++) {       size_t end = start + nw;       // compute something for a window       double v = 0;       // loop over the values of a window       for (size_t j=start; j<end; j++) {         v += x[j];       }       out[i] = v * m;       start = end;     }     return out;   }' )  nr <- nc <- 10 r <- rast(ncols=nc, nrows=nr, ext= c(0, nc, 0, nr)) values(r) <- 1:ncell(r)  raw <- focalCpp(r, w=3, fun=sum_and_multiply, fillvalue=0, m=10)  # same as f1 <- focal(r, w=3, fun=sum, fillvalue=0) *10 all(values(f1) == values(raw))  # and as ffun <- function(x, m) { sum(x) * m } f2 <- focal(r, w=3, fun=ffun, fillvalue=0, m=10)   # You can also use an R function with focalCpp but this # is not recommended   R_sm_iter <- function(x, m, ni, nw) {   out <- NULL   for (i in 1:ni) {     start <- (i-1) * nw + 1     out[i] <- sum(x[start:(start+nw-1)]) * m   }   out }  fr <- focalCpp(r, w=3, fun=R_sm_iter, fillvalue=0, m=10)  } # }"},{"path":"https://rspatial.github.io/terra/reference/focalMat.html","id":null,"dir":"Reference","previous_headings":"","what":"Focal weights matrix — focalMat","title":"Focal weights matrix — focalMat","text":"Make focal (\"moving window\") weight matrix use focal function. sum values adds one.","code":""},{"path":"https://rspatial.github.io/terra/reference/focalMat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Focal weights matrix — focalMat","text":"","code":"focalMat(x, d, type=c('circle', 'Gauss', 'rectangle'), fillNA=FALSE)"},{"path":"https://rspatial.github.io/terra/reference/focalMat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Focal weights matrix — focalMat","text":"x SpatRaster d numeric. type=circle, radius circle (units crs). type=rectangle dimension rectangle (one two numbers). type=Gauss size sigma, optionally another number determine size matrix returned (default 3*sigma) type character indicating type filter returned fillNA logical. TRUE, zeros set NA ignored computations. applies type=\"circle\"","code":""},{"path":"https://rspatial.github.io/terra/reference/focalMat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Focal weights matrix — focalMat","text":"matrix can used focal","code":""},{"path":"https://rspatial.github.io/terra/reference/focalMat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Focal weights matrix — focalMat","text":"","code":"r <- rast(ncols=180, nrows=180, xmin=0) focalMat(r, 2, \"circle\") #>            [,1]       [,2]       [,3]       [,4]       [,5] #> [1,] 0.00000000 0.00000000 0.07692308 0.00000000 0.00000000 #> [2,] 0.00000000 0.07692308 0.07692308 0.07692308 0.00000000 #> [3,] 0.07692308 0.07692308 0.07692308 0.07692308 0.07692308 #> [4,] 0.00000000 0.07692308 0.07692308 0.07692308 0.00000000 #> [5,] 0.00000000 0.00000000 0.07692308 0.00000000 0.00000000  focalMat(r, c(2,3), \"rect\") #>            [,1]       [,2]       [,3]       [,4]       [,5] #> [1,] 0.02857143 0.02857143 0.02857143 0.02857143 0.02857143 #> [2,] 0.02857143 0.02857143 0.02857143 0.02857143 0.02857143 #> [3,] 0.02857143 0.02857143 0.02857143 0.02857143 0.02857143 #> [4,] 0.02857143 0.02857143 0.02857143 0.02857143 0.02857143 #> [5,] 0.02857143 0.02857143 0.02857143 0.02857143 0.02857143 #> [6,] 0.02857143 0.02857143 0.02857143 0.02857143 0.02857143 #> [7,] 0.02857143 0.02857143 0.02857143 0.02857143 0.02857143  # Gaussian filter for square cells gf <- focalMat(r, 1, \"Gauss\")"},{"path":"https://rspatial.github.io/terra/reference/focalPairs.html","id":null,"dir":"Reference","previous_headings":"","what":"Focal function across two layers — focalPairs","title":"Focal function across two layers — focalPairs","text":"Calculate values correlation coefficient focal regions two neighboring layers. function applied first second layer, second third layer, etc.","code":""},{"path":"https://rspatial.github.io/terra/reference/focalPairs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Focal function across two layers — focalPairs","text":"","code":"# S4 method for class 'SpatRaster' focalPairs(x, w=3, fun, ..., fillvalue=NA,      filename=\"\", overwrite=FALSE, wopt=list())"},{"path":"https://rspatial.github.io/terra/reference/focalPairs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Focal function across two layers — focalPairs","text":"x SpatRaster least two layers w numeric matrix define focal window. window defined one (square) two numbers (row, col); odd-sized weights matrix. See Details section focal. Note matrix numbers zero one used, values used weights. work, fun must argument weights fun function least two arguments (one layer). built-function \"pearson\" (weighted unweighted Pearson correlation coefficient. function additional argument na.rm=FALSE ... additional arguments fun fillvalue numeric. value cells virtual rows columns outside raster filename character. Output filename overwrite logical. TRUE, filename overwritten wopt additional arguments writing files writeRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/focalPairs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Focal function across two layers — focalPairs","text":"SpatRaster","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/focalPairs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Focal function across two layers — focalPairs","text":"","code":"r <- rast(system.file(\"ex/logo.tif\", package=\"terra\")) set.seed(0) r[[1]] <- flip(r[[1]], \"horizontal\") r[[2]] <- flip(r[[2]], \"vertical\") + init(rast(r,1), runif) r[[3]] <- init(rast(r,1), runif)  x <- focalPairs(r, w=5, \"pearson\", na.rm=TRUE) plot(x)    # suppress warning \"the standard deviation is zero\" suppressWarnings(x <- focalPairs(r, w=5, \"pearson\", use=\"complete.obs\"))  z <- focalPairs(r, w=9, function(x, y) mean(x) + mean(y))"},{"path":"https://rspatial.github.io/terra/reference/focalReg.html","id":null,"dir":"Reference","previous_headings":"","what":"Focal regression — focalReg","title":"Focal regression — focalReg","text":"Calculate values moving-window comparing value one layers values one many layers. typical case computation coefficients focal linear regression model.","code":""},{"path":"https://rspatial.github.io/terra/reference/focalReg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Focal regression — focalReg","text":"","code":"# S4 method for class 'SpatRaster' focalReg(x, w=3, fun=\"ols\", ..., fillvalue=NA, filename=\"\", overwrite=FALSE, wopt=list())"},{"path":"https://rspatial.github.io/terra/reference/focalReg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Focal regression — focalReg","text":"x SpatRaster least two layers. first \"Y\" (dependent) variable remainder \"X\" (independent) variables w numeric matrix define focal window. window defined one (square) two numbers (row, col); odd-sized weights matrix. See Details section focal. Note matrix numbers zero one used, values used weights. work, fun must argument weights fun function least two arguments (one layer). built-function \"ols\" weighted unweighted Ordinary Least Square regression. function additional argument na.rm=FALSE intercept=TRUE ... additional arguments fun fillvalue numeric. value cells virtual rows columns outside raster filename character. Output filename overwrite logical. TRUE, filename overwritten wopt additional arguments writing files writeRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/focalReg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Focal regression — focalReg","text":"SpatRaster","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/focalReg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Focal regression — focalReg","text":"","code":"r <- rast(ncols=10, nrows=10, ext(0, 10, 0, 10)) values(r) <- 1:ncell(r) x <- c(r, init(r, runif) * r) f <- focalReg(x, 3)"},{"path":"https://rspatial.github.io/terra/reference/focalValues.html","id":null,"dir":"Reference","previous_headings":"","what":"Get focal values — focalValues","title":"Get focal values — focalValues","text":"Get matrix row focal values cell. values cell rectangular window around .","code":""},{"path":"https://rspatial.github.io/terra/reference/focalValues.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get focal values — focalValues","text":"","code":"# S4 method for class 'SpatRaster' focalValues(x, w=3, row=1, nrows=nrow(x), fill=NA)"},{"path":"https://rspatial.github.io/terra/reference/focalValues.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get focal values — focalValues","text":"x SpatRaster SpatVector w window. window can defined one (square) two odd numbers (row, col); odd sized matrix row positive integer. Row number start , 1 nrow(x) nrows positive integer. many rows? fill numeric used values imaginary cells outside raster","code":""},{"path":"https://rspatial.github.io/terra/reference/focalValues.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get focal values — focalValues","text":"matrix","code":""},{"path":"https://rspatial.github.io/terra/reference/focalValues.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get focal values — focalValues","text":"","code":"r <- rast(ncol=4, nrow=4, crs=\"+proj=utm +zone=1 +datum=WGS84\") values(r) <- 1:ncell(r) focalValues(r) #>       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] #>  [1,]   NA   NA   NA   NA    1    2   NA    5    6 #>  [2,]   NA   NA   NA    1    2    3    5    6    7 #>  [3,]   NA   NA   NA    2    3    4    6    7    8 #>  [4,]   NA   NA   NA    3    4   NA    7    8   NA #>  [5,]   NA    1    2   NA    5    6   NA    9   10 #>  [6,]    1    2    3    5    6    7    9   10   11 #>  [7,]    2    3    4    6    7    8   10   11   12 #>  [8,]    3    4   NA    7    8   NA   11   12   NA #>  [9,]   NA    5    6   NA    9   10   NA   13   14 #> [10,]    5    6    7    9   10   11   13   14   15 #> [11,]    6    7    8   10   11   12   14   15   16 #> [12,]    7    8   NA   11   12   NA   15   16   NA #> [13,]   NA    9   10   NA   13   14   NA   NA   NA #> [14,]    9   10   11   13   14   15   NA   NA   NA #> [15,]   10   11   12   14   15   16   NA   NA   NA #> [16,]   11   12   NA   15   16   NA   NA   NA   NA"},{"path":"https://rspatial.github.io/terra/reference/forceCCW.html","id":null,"dir":"Reference","previous_headings":"","what":"force counter-clockwise polygons — forceCCW","title":"force counter-clockwise polygons — forceCCW","text":"Assure nodes outer rings polygons counter-clockwise order.","code":""},{"path":"https://rspatial.github.io/terra/reference/forceCCW.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"force counter-clockwise polygons — forceCCW","text":"","code":"# S4 method for class 'SpatVector' forceCCW(x)"},{"path":"https://rspatial.github.io/terra/reference/forceCCW.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"force counter-clockwise polygons — forceCCW","text":"x SpatVector polygons","code":""},{"path":"https://rspatial.github.io/terra/reference/forceCCW.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"force counter-clockwise polygons — forceCCW","text":"SpatVector","code":""},{"path":"https://rspatial.github.io/terra/reference/forceCCW.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"force counter-clockwise polygons — forceCCW","text":"","code":"p <- vect(\"POLYGON ((2 45, 2 55, 18 55, 18 45, 2 45))\") pcc <- forceCCW(p) geom(pcc, wkt=TRUE) #> [1] \"POLYGON ((2 45, 18 45, 18 55, 2 55, 2 45))\""},{"path":"https://rspatial.github.io/terra/reference/freq.html","id":null,"dir":"Reference","previous_headings":"","what":"Frequency table — freq","title":"Frequency table — freq","text":"Frequency table values SpatRaster. NAs counted unless value=NA. can provide SpatVector additional SpatRaster define zones tabulations.","code":""},{"path":"https://rspatial.github.io/terra/reference/freq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Frequency table — freq","text":"","code":"# S4 method for class 'SpatRaster' freq(x, digits=0, value=NULL, bylayer=TRUE, usenames=FALSE, zones=NULL, wide=FALSE)"},{"path":"https://rspatial.github.io/terra/reference/freq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Frequency table — freq","text":"x SpatRaster digits integer. Used rounding values tabulation. Ignored NA value numeric. optional single value count number cells value. value can NA bylayer logical. TRUE tabulation done layer usenames logical. TRUE layers identified names instead numbers relevant bylayer TRUE zones SpatRaster SpatVector define zones tabulation done wide logical. results \"wide\" instead \"long\"?","code":""},{"path":"https://rspatial.github.io/terra/reference/freq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Frequency table — freq","text":"data.frame 3 columns (layer, value, count) unless bylayer=FALSE case adata.frame two columns returned (value, count).","code":""},{"path":"https://rspatial.github.io/terra/reference/freq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Frequency table — freq","text":"","code":"r <- rast(nrows=10, ncols=10) set.seed(2) values(r) <- sample(5, ncell(r), replace=TRUE)  freq(r) #>   layer value count #> 1     1     1    27 #> 2     1     2    15 #> 3     1     3    17 #> 4     1     4    17 #> 5     1     5    24  x <- c(r, r/3) freq(x, bylayer=FALSE) #>   value count #> 1     0    27 #> 2     1    76 #> 3     2    39 #> 4     3    17 #> 5     4    17 #> 6     5    24 freq(x) #>   layer value count #> 1     1     1    27 #> 2     1     2    15 #> 3     1     3    17 #> 4     1     4    17 #> 5     1     5    24 #> 6     2     0    27 #> 7     2     1    49 #> 8     2     2    24  freq(x, digits=1) #>    layer value count #> 1      1   1.0    27 #> 2      1   2.0    15 #> 3      1   3.0    17 #> 4      1   4.0    17 #> 5      1   5.0    24 #> 6      2   0.3    27 #> 7      2   0.7    15 #> 8      2   1.0    17 #> 9      2   1.3    17 #> 10     2   1.7    24 freq(x, digits=-1) #>   layer value count #> 1     1     0    76 #> 2     1    10    24 #> 3     2     0   100  freq(x, value=5) #>   layer value count #> 1     1     5    24 #> 2     2     5     0"},{"path":"https://rspatial.github.io/terra/reference/gaps.html","id":null,"dir":"Reference","previous_headings":"","what":"Find gaps between polygons — gaps","title":"Find gaps between polygons — gaps","text":"Get gaps polygons SpatVector","code":""},{"path":"https://rspatial.github.io/terra/reference/gaps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find gaps between polygons — gaps","text":"","code":"# S4 method for class 'SpatVector' gaps(x)"},{"path":"https://rspatial.github.io/terra/reference/gaps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find gaps between polygons — gaps","text":"x SpatVector","code":""},{"path":"https://rspatial.github.io/terra/reference/gaps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find gaps between polygons — gaps","text":"SpatVector","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/gaps.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find gaps between polygons — gaps","text":"","code":"f <- system.file(\"ex/lux.shp\", package=\"terra\") v <- vect(f) h <- convHull(v[-12], \"NAME_1\") g <- gaps(h)"},{"path":"https://rspatial.github.io/terra/reference/gdal.html","id":null,"dir":"Reference","previous_headings":"","what":"GDAL version, supported file formats, and cache size — gdal","title":"GDAL version, supported file formats, and cache size — gdal","text":"Set GDAL warning level get data.frame available GDAL drivers (file formats), , warn=NA drivers=FALSE, get version numbers one GDAL, PROJ GEOS libraries. GDAL software library terra builds read write spatial data raster data processing. PROJ used transformation coordinates (\"projection\") GEOS used geometric operations vector data. current GDAL configuration options obtained getGDALconfig changed setGDALconfig.","code":""},{"path":"https://rspatial.github.io/terra/reference/gdal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GDAL version, supported file formats, and cache size — gdal","text":"","code":"gdal(warn=NA, drivers=FALSE, ...) gdalCache(size=NA) setGDALconfig(option, value=\"\") getGDALconfig(option) clearVSIcache() libVersion(lib=\"all\", parse=FALSE)"},{"path":"https://rspatial.github.io/terra/reference/gdal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GDAL version, supported file formats, and cache size — gdal","text":"warn NA drivers=FALSE, version library specified lib returned. Otherwise, value integer 1 4 representing level GDAL warnings errors passed R. 1 = warnings errors; 2 = errors (recoverable errors warning); 3 = irrecoverable errors ; 4 = ignore errors warnings. default setting 2 drivers logical. TRUE data.frame raster vector data formats available. ... additional arguments (backwards compatibility ) size numeric. new cache size MB option character. GDAL configuration option name, \"name=value\" string (case value argument ignored value character. value GDAL configuration option. Use \"\" reset default value lib character. \"gdal\", \"proj\", \"geos\", value get versions numbers three parse logical. version parsed three numerical values (major, minor sub versions)?","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/gdal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GDAL version, supported file formats, and cache size — gdal","text":"character","code":""},{"path":"https://rspatial.github.io/terra/reference/gdal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GDAL version, supported file formats, and cache size — gdal","text":"","code":"gdal() #> [1] \"3.10.1\" gdal(2) head(gdal(drivers=TRUE)) #>      name raster vector        can  vsi                     long.name #> 1 AAIGrid   TRUE  FALSE read/write TRUE           Arc/Info ASCII Grid #> 2    ACE2   TRUE  FALSE       read TRUE                          ACE2 #> 3    ADRG   TRUE  FALSE read/write TRUE ARC Digitized Raster Graphics #> 4     AIG   TRUE  FALSE       read TRUE          Arc/Info Binary Grid #> 5  AVCBin  FALSE   TRUE       read TRUE      Arc/Info Binary Coverage #> 6  AVCE00  FALSE   TRUE       read TRUE Arc/Info E00 (ASCII) Coverage libVersion(\"all\", TRUE) #>      major minor sub #> gdal     3    10   1 #> proj     9     5   1 #> geos     3    13   0"},{"path":"https://rspatial.github.io/terra/reference/geometry.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the geometry (coordinates) of a SpatVector — geom","title":"Get the geometry (coordinates) of a SpatVector — geom","text":"Get geometry SpatVector. wkt=FALSE, five-column matrix data.frame: vector object ID, IDs parts object (e.g. five polygons together one spatial object), x (longitude) y (latitude) coordinates, flag indicating whether part \"hole\" (relevant polygons). wkt=TRUE, \"well-known text\" representation returned character vector. hex=TRUE, \"hexadecimal\" representation returned character vector. wkb=TRUE, \"well-known binary\" representation returned list raw vectors.","code":""},{"path":"https://rspatial.github.io/terra/reference/geometry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the geometry (coordinates) of a SpatVector — geom","text":"","code":"# S4 method for class 'SpatVector' geom(x, wkt=FALSE, hex=FALSE, wkb=FALSE, df=FALSE, list=FALSE, xnm=\"x\", ynm=\"y\")"},{"path":"https://rspatial.github.io/terra/reference/geometry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the geometry (coordinates) of a SpatVector — geom","text":"x SpatVector wkt logical. TRUE WKT geometry returned (unless hex also TRUE) hex logical. TRUE hexadecimal geometry returned wkb logical. TRUE raw WKB geometry returned (unless either hex wkt also TRUE) df logical. TRUE data.frame returned instead matrix (wkt=FALSE, hex=FALSE, list=FALSE) list logical. TRUE nested list returned data.frames coordinates xnm character. list=TRUE \"x\" column name coordinates data.frame ynm character. list=TRUE \"y\" column name coordinates data.frame","code":""},{"path":"https://rspatial.github.io/terra/reference/geometry.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the geometry (coordinates) of a SpatVector — geom","text":"matrix, vector, data.frame, list","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/geometry.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the geometry (coordinates) of a SpatVector — geom","text":"","code":"x1 <- rbind(c(-175,-20), c(-140,55), c(10, 0), c(-140,-60)) x2 <- rbind(c(-125,0), c(0,60), c(40,5), c(15,-45)) x3 <- rbind(c(-10,0), c(140,60), c(160,0), c(140,-55)) x4 <- rbind(c(80,0), c(105,13), c(120,2), c(105,-13)) z <- rbind(cbind(object=1, part=1, x1), cbind(object=2, part=1, x2),             cbind(object=3, part=1, x3), cbind(object=3, part=2,  x4)) colnames(z)[3:4] <- c('x', 'y') z <- cbind(z, hole=0) z[(z[, \"object\"]==3 & z[,\"part\"]==2), \"hole\"] <- 1  p <- vect(z, \"polygons\") geom(p) #>       geom part    x   y hole #>  [1,]    1    1 -175 -20    0 #>  [2,]    1    1 -140  55    0 #>  [3,]    1    1   10   0    0 #>  [4,]    1    1 -140 -60    0 #>  [5,]    1    1 -175 -20    0 #>  [6,]    2    1 -125   0    0 #>  [7,]    2    1    0  60    0 #>  [8,]    2    1   40   5    0 #>  [9,]    2    1   15 -45    0 #> [10,]    2    1 -125   0    0 #> [11,]    3    1  -10   0    0 #> [12,]    3    1  140  60    0 #> [13,]    3    1  160   0    0 #> [14,]    3    1  140 -55    0 #> [15,]    3    1  -10   0    0 #> [16,]    3    1   80   0    1 #> [17,]    3    1  105  13    1 #> [18,]    3    1  120   2    1 #> [19,]    3    1  105 -13    1 #> [20,]    3    1   80   0    1  f <- system.file(\"ex/lux.shp\", package=\"terra\") v <- vect(f) g <- geom(v) head(g) #>      geom part        x        y hole #> [1,]    1    1 6.026519 50.17767    0 #> [2,]    1    1 6.031361 50.16563    0 #> [3,]    1    1 6.035646 50.16410    0 #> [4,]    1    1 6.042747 50.16157    0 #> [5,]    1    1 6.043894 50.16116    0 #> [6,]    1    1 6.048243 50.16008    0  w <- geom(v, wkt=TRUE) substr(w, 1, 60) #>  [1] \"POLYGON ((6.026519 50.17767, 6.031361 50.165627, 6.035646 50\" #>  [2] \"POLYGON ((6.178368 49.876823, 6.185479 49.870525, 6.189417 4\" #>  [3] \"POLYGON ((5.881378 49.870148, 5.881672 49.868866, 5.886637 4\" #>  [4] \"POLYGON ((6.131309 49.972565, 6.134291 49.972382, 6.139316 4\" #>  [5] \"POLYGON ((5.977929 50.026016, 5.982312 50.022949, 5.981743 5\" #>  [6] \"POLYGON ((6.385532 49.837029, 6.3886 49.833683, 6.390184 49.\" #>  [7] \"POLYGON ((6.316665 49.623375, 6.31835 49.623157, 6.320131 49\" #>  [8] \"POLYGON ((6.425158 49.731644, 6.42657 49.73082, 6.427332 49.\" #>  [9] \"POLYGON ((5.998312 49.699924, 5.998632 49.698559, 5.998956 4\" #> [10] \"POLYGON ((6.039474 49.448261, 6.036906 49.448696, 6.036822 4\" #> [11] \"POLYGON ((6.155963 49.685047, 6.159284 49.685036, 6.161457 4\" #> [12] \"POLYGON ((6.067982 49.828465, 6.071922 49.825478, 6.073236 4\""},{"path":"https://rspatial.github.io/terra/reference/geomtype.html","id":null,"dir":"Reference","previous_headings":"","what":"Geometry type of a SpatVector — geomtype","title":"Geometry type of a SpatVector — geomtype","text":"Get geometry type (points, lines, polygons) SpatVector. See datatype data types fields (attributes, variables) SpatVector.","code":""},{"path":"https://rspatial.github.io/terra/reference/geomtype.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Geometry type of a SpatVector — geomtype","text":"","code":"# S4 method for class 'SpatVector' geomtype(x)  # S4 method for class 'SpatVector' is.points(x)  # S4 method for class 'SpatVector' is.lines(x)  # S4 method for class 'SpatVector' is.polygons(x)"},{"path":"https://rspatial.github.io/terra/reference/geomtype.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Geometry type of a SpatVector — geomtype","text":"x SpatVector","code":""},{"path":"https://rspatial.github.io/terra/reference/geomtype.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Geometry type of a SpatVector — geomtype","text":"character","code":""},{"path":"https://rspatial.github.io/terra/reference/geomtype.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Geometry type of a SpatVector — geomtype","text":"","code":"f <- system.file(\"ex/lux.shp\", package=\"terra\") v <- vect(f)  geomtype(v) #> [1] \"polygons\" is.polygons(v) #> [1] TRUE is.lines(v) #> [1] FALSE is.points(v) #> [1] FALSE  names(v) #> [1] \"ID_1\"   \"NAME_1\" \"ID_2\"   \"NAME_2\" \"AREA\"   \"POP\"    datatype(v) #> [1] \"double\" \"string\" \"double\" \"string\" \"double\" \"double\""},{"path":"https://rspatial.github.io/terra/reference/global.html","id":null,"dir":"Reference","previous_headings":"","what":"global statistics — global","title":"global statistics — global","text":"Compute global statistics, summarized values entire SpatRaster. x large global can fail, except fun one built-functions \"mean\", \"min\", \"max\", \"sum\", \"prod\", \"range\" (min max), \"rms\" (root mean square), \"sd\" (sample standard deviation), \"std\" (population standard deviation), \"isNA\" (number cells NA), \"notNA\" (number cells NA), \"anyNA\", \"anynotNA\". Note \"anyNA\" \"anynotNA\" combined functions. reason can fail large raster custom function values need loaded memory. circumvent problem can run global sample cells. can compute weighted mean sum providing SpatRaster weights.","code":""},{"path":"https://rspatial.github.io/terra/reference/global.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"global statistics — global","text":"","code":"# S4 method for class 'SpatRaster' global(x, fun=\"mean\", weights=NULL, maxcell=Inf, ...)"},{"path":"https://rspatial.github.io/terra/reference/global.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"global statistics — global","text":"x SpatRaster fun function applied summarize values zone. Either one built-character values: \"max\", \"min\", \"mean\", \"sum\", \"range\", \"rms\" (root mean square), \"sd\", \"std\" (population sd, using n rather n-1), \"isNA\", \"notNA\"; proper R function (may fail large SpatRasters unless specify maxcell) ... additional arguments passed fun weights NULL SpatRaster maxcell positive integer used take regular sample x. Ignored built-functions.","code":""},{"path":"https://rspatial.github.io/terra/reference/global.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"global statistics — global","text":"data.frame row layer","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/global.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"global statistics — global","text":"","code":"r <- rast(ncols=10, nrows=10) values(r) <- 1:ncell(r) global(r, \"sum\") #>        sum #> lyr.1 5050 global(r, \"mean\", na.rm=TRUE) #>       mean #> lyr.1 50.5 x <- c(r, r/10) global(x, c(\"sum\", \"mean\", \"sd\"), na.rm=TRUE) #>          sum  mean        sd #> lyr.1   5050 50.50 29.011492 #> lyr.1.1  505  5.05  2.901149  global(x, function(i) min(i) / max(i)) #>         global #> lyr.1     0.01 #> lyr.1.1   0.01"},{"path":"https://rspatial.github.io/terra/reference/graticule.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a graticule — graticule","title":"Create a graticule — graticule","text":"Create graticule. , grid lon/lat lines can used projected map. object returned, SpatGraticule, can plotted plot lines. also crop method.","code":""},{"path":"https://rspatial.github.io/terra/reference/graticule.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a graticule — graticule","text":"","code":"graticule(lon=30, lat=30, crs=\"\")"},{"path":"https://rspatial.github.io/terra/reference/graticule.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a graticule — graticule","text":"lon numeric. Either single number (interval longitudes), vector longitudes lat numeric. Either single number (interval latitudes), vector latitudes crs character. coordinate reference system use","code":""},{"path":"https://rspatial.github.io/terra/reference/graticule.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a graticule — graticule","text":"SpatGraticule","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/graticule.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a graticule — graticule","text":"","code":"g <- graticule(60, 30, crs=\"+proj=robin\") g #> class       : SpatGraticule  #> lon         : -180 -120 -60 0 60 120 180  #> lat         : -90 -60 -30 0 30 60 90  #> coord. ref. : +proj=robin +lon_0=0 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs  #> extent      : -17005833, 17005833, -8625155, 8625155  (xmin, xmax, ymin, ymax)  graticule(90, c(-90, -60, -23.5, 0, 23.5, 60, 90), crs=\"+proj=robin\") #> class       : SpatGraticule  #> lon         : -180 -90 0 90 180  #> lat         : -90 -60 -23.5 0 23.5 60 90  #> coord. ref. : +proj=robin +lon_0=0 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs  #> extent      : -17005833, 17005833, -8625155, 8625155  (xmin, xmax, ymin, ymax)"},{"path":"https://rspatial.github.io/terra/reference/grid.html","id":null,"dir":"Reference","previous_headings":"","what":"add a grid to a map made with terra — add_grid","title":"add a grid to a map made with terra — add_grid","text":"Adaptation grid allows adding grid map. function place legend locations within mapped area delineated axes. Also see graticule","code":""},{"path":"https://rspatial.github.io/terra/reference/grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"add a grid to a map made with terra — add_grid","text":"","code":"add_grid(nx=NULL, ny=nx, col=\"lightgray\", lty=\"dotted\", lwd=1)"},{"path":"https://rspatial.github.io/terra/reference/grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"add a grid to a map made with terra — add_grid","text":"nx, ny number cells grid x y direction. NULL, per default, grid aligns tick marks corresponding default axis (.e., tickmarks computed axTicks). NA, grid lines drawn corresponding direction col character (integer) numeric; color grid lines lty character (integer) numeric; line type grid lines lwd non-negative numeric giving line width grid lines","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"add a grid to a map made with terra — add_grid","text":"","code":"v <- vect(system.file(\"ex/lux.shp\", package=\"terra\")) plot(v) add_grid()"},{"path":"https://rspatial.github.io/terra/reference/gridDist.html","id":null,"dir":"Reference","previous_headings":"","what":"Distance on a grid — gridDist","title":"Distance on a grid — gridDist","text":"function calculates distance cells SpatRaster path go centers eight neighboring raster cells. default distance (scale=1, meters coordinate reference system (CRS) SpatRaster longitude/latitude (+proj=longlat) linear units CRS (typically meters) cases. Distances computed summing local distances cells, connected neighbors 8 directions. shortest distance cells target value computed cells NA. Cells NA traversed ignored, unless target NA, case distance nearest cell NA computed cells NA.","code":""},{"path":"https://rspatial.github.io/terra/reference/gridDist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distance on a grid — gridDist","text":"","code":"# S4 method for class 'SpatRaster' gridDist(x, target=0, scale=1, maxiter=50, filename=\"\", ...)"},{"path":"https://rspatial.github.io/terra/reference/gridDist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Distance on a grid — gridDist","text":"x SpatRaster target numeric. value target cells (compute distance ) scale numeric. Scale factor. longitude/latitude data 1 = \"m\" 1000 = \"km\". planar data also case distance unit crs \"m\" maxiter numeric. maximum number iterations. Increase number get warning costDistance converge. relevant target NA filename character. output filename (optional) ... additional arguments writeRaster","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/gridDist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Distance on a grid — gridDist","text":"SpatRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/gridDist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Distance on a grid — gridDist","text":"","code":"# global lon/lat raster r <- rast(ncol=10,nrow=10, vals=1) r[48] <- 0 r[66:68] <- NA d <- gridDist(r)  plot(d)    # planar crs(r) <- \"+proj=utm +zone=15 +ellps=GRS80 +datum=NAD83 +units=m +no_defs\" d <- gridDist(r)  plot(d)   # distance to cells that are not NA  rr <- classify(r, cbind(1, NA)) dd <- gridDist(rr, NA)"},{"path":"https://rspatial.github.io/terra/reference/halo.html","id":null,"dir":"Reference","previous_headings":"","what":"Add halo-ed text to a plot — halo","title":"Add halo-ed text to a plot — halo","text":"Add text plot \"halo\". , buffer around enhance visibility.","code":""},{"path":"https://rspatial.github.io/terra/reference/halo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add halo-ed text to a plot — halo","text":"","code":"halo(x, y=NULL, labels, col=\"black\", hc=\"white\", hw=0.1, ...)"},{"path":"https://rspatial.github.io/terra/reference/halo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add halo-ed text to a plot — halo","text":"x,y numeric. coordinates text labels written labels character. text written col character. main color used hc character. halo color hw numeric. halo width ... additional arguments pass text","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/halo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add halo-ed text to a plot — halo","text":"","code":"r <- rast(nrows=4, ncols=4) values(r) <- 1:ncell(r) plot(r, col=\"blue\", legend=FALSE)  text(-100, 20, \"hello\", cex=2) halo(50, 20, \"hello\", cex=2)  halo(0, -20, \"world\", font=3, hc=\"light blue\", cex=2, hw=.2) halo(0, 90, \"world\", font=2, cex=2, hw=.2, xpd=TRUE, pos=2) halo(0, 90, \"world\", col=\"white\", font=2, hc=\"blue\", cex=2, hw=.2, xpd=TRUE, pos=4)"},{"path":"https://rspatial.github.io/terra/reference/headtail.html","id":null,"dir":"Reference","previous_headings":"","what":"head and tail of a SpatRaster or SpatVector — headtail","title":"head and tail of a SpatRaster or SpatVector — headtail","text":"Show head (first values) tail (last values) SpatRaster attributes SpatVector.","code":""},{"path":"https://rspatial.github.io/terra/reference/headtail.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"head and tail of a SpatRaster or SpatVector — headtail","text":"","code":"head(x, ...)  tail(x, ...)"},{"path":"https://rspatial.github.io/terra/reference/headtail.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"head and tail of a SpatRaster or SpatVector — headtail","text":"x SpatRaster SpatVector ... additional arguments passed methods","code":""},{"path":"https://rspatial.github.io/terra/reference/headtail.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"head and tail of a SpatRaster or SpatVector — headtail","text":"matrix (SpatRaster) data.frame (SpatVector)","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/headtail.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"head and tail of a SpatRaster or SpatVector — headtail","text":"","code":"r <- rast(nrows=25, ncols=25) values(r) <- 1:ncell(r) head(r) #>   lyr.1 #> 1     1 #> 2     2 #> 3     3 #> 4     4 #> 5     5 #> 6     6 tail(r) #>   lyr.1 #> 1   620 #> 2   621 #> 3   622 #> 4   623 #> 5   624 #> 6   625"},{"path":"https://rspatial.github.io/terra/reference/hist.html","id":null,"dir":"Reference","previous_headings":"","what":"Histogram — hist","title":"Histogram — hist","text":"Create histogram values SpatRaster. large datasets sample maxcell used.","code":""},{"path":"https://rspatial.github.io/terra/reference/hist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Histogram — hist","text":"","code":"# S4 method for class 'SpatRaster' hist(x, layer, maxcell=1000000, plot=TRUE, maxnl=16, main, ...)"},{"path":"https://rspatial.github.io/terra/reference/hist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Histogram — hist","text":"x SpatRaster layer positive integer character indicate layer numbers (names). missing, layers maxnl used maxcell integer. regularly sample large objects plot logical. Plot histogram return histogram values maxnl positive integer. maximum number layers use. Ignored layer missing main character. Main title(s) plot. Default value names ... additional arguments. See hist","code":""},{"path":"https://rspatial.github.io/terra/reference/hist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Histogram — hist","text":"function principally used plotting histogram, also returns object class \"histogram\" (invisibly plot=TRUE).","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/hist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Histogram — hist","text":"","code":"r1 <- r2 <- rast(nrows=50, ncols=50) values(r1) <- runif(ncell(r1)) values(r2) <- runif(ncell(r1)) rs <- r1 + r2 rp <- r1 * r2  opar <- par(no.readonly =TRUE) par(mfrow=c(2,2)) plot(rs, main='sum') plot(rp, main='product') hist(rs) a <- hist(rp)  a #> $breaks #>  [1] 0.0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1.0 #>  #> $counts #>  [1] 816 483 352 250 188 159 117  76  42  17 #>  #> $density #>  [1] 3.264 1.932 1.408 1.000 0.752 0.636 0.468 0.304 0.168 0.068 #>  #> $mids #>  [1] 0.05 0.15 0.25 0.35 0.45 0.55 0.65 0.75 0.85 0.95 #>  #> $xname #> [1] \"lyr.1\" #>  #> $equidist #> [1] TRUE #>  #> attr(,\"class\") #> [1] \"histogram\" x <- c(rs, rp, sqrt(rs)) hist(x) par(opar)"},{"path":"https://rspatial.github.io/terra/reference/identical.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare two SpatRasters for equality — identical","title":"Compare two SpatRasters for equality — identical","text":"Compare two SpatRasters equality. First attributes objects compared. , raster cells compared well. can time consuming, may prefer use sample instead .equal","code":""},{"path":"https://rspatial.github.io/terra/reference/identical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare two SpatRasters for equality — identical","text":"","code":"# S4 method for class 'SpatRaster,SpatRaster' identical(x, y)"},{"path":"https://rspatial.github.io/terra/reference/identical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare two SpatRasters for equality — identical","text":"x SpatRaster y SpatRaster","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/identical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare two SpatRasters for equality — identical","text":"single logical value","code":""},{"path":"https://rspatial.github.io/terra/reference/identical.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare two SpatRasters for equality — identical","text":"","code":"x <- sqrt(1:100) mat <- matrix(x, 10, 10) r1 <- rast(nrows=10, ncols=10, xmin=0, vals = x) r2 <- rast(nrows=10, ncols=10, xmin=0, vals = t(mat))  identical(r1, r2) #> [1] TRUE identical(r1, r1*1) #> [1] TRUE identical(rast(r1), rast(r2)) #> [1] TRUE"},{"path":"https://rspatial.github.io/terra/reference/ifelse.html","id":null,"dir":"Reference","previous_headings":"","what":"ifelse for SpatRasters — ifel","title":"ifelse for SpatRasters — ifel","text":"Implementation ifelse SpatRasters. method allows concise expression can otherwise achieved combination classify, mask, cover. ifel R equivalent Con method ArcGIS (arcpy).","code":""},{"path":"https://rspatial.github.io/terra/reference/ifelse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ifelse for SpatRasters — ifel","text":"","code":"# S4 method for class 'SpatRaster' ifel(test, yes, no, filename=\"\", ...)"},{"path":"https://rspatial.github.io/terra/reference/ifelse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ifelse for SpatRasters — ifel","text":"test SpatRaster logical (TRUE/FALSE) values yes SpatRaster numeric SpatRaster numeric filename character. Output filename ... additional arguments writing files writeRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/ifelse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ifelse for SpatRasters — ifel","text":"SpatRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/ifelse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ifelse for SpatRasters — ifel","text":"","code":"r <- rast(nrows=5, ncols=5, xmin=0, xmax=1, ymin=0, ymax=1) values(r) <- c(-10:0, NA, NA, NA, 0:10)  x <- ifel(r > 1, 1, r) # same as  a <- classify(r, cbind(1, Inf, 1)) # or b <- app(r, fun=function(i) {i[i > 1] <- 1; i}) # or  d <- clamp(r, -Inf, 1) # or (not recommended for large datasets) e <- r e[e>1] <- 1  ## other examples f <- ifel(is.na(r), 100, r)  z <- ifel(r > -2 & r < 2, 100, 0)  # nested expressions y <- ifel(r > 1, 1, ifel(r < -1, -1, r))  k <- ifel(r > 0, r+10, ifel(r < 0, r-10, 3))"},{"path":"https://rspatial.github.io/terra/reference/image.html","id":null,"dir":"Reference","previous_headings":"","what":"SpatRaster image method — image","title":"SpatRaster image method — image","text":"Plot (make map ) values SpatRaster via image. See plot need fancy options legend.","code":""},{"path":"https://rspatial.github.io/terra/reference/image.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SpatRaster image method — image","text":"","code":"# S4 method for class 'SpatRaster' image(x, y=1, maxcell=500000, ...)"},{"path":"https://rspatial.github.io/terra/reference/image.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SpatRaster image method — image","text":"x SpatRaster y positive integer indicating layer plotted, character indicating name layer maxcell positive integer. Maximum number cells use plot ... additional arguments graphics::image","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/image.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SpatRaster image method — image","text":"","code":"f <- system.file(\"ex/elev.tif\", package=\"terra\")  r <- rast(f) image(r)  image(r, col=rainbow(24))"},{"path":"https://rspatial.github.io/terra/reference/impose.html","id":null,"dir":"Reference","previous_headings":"","what":"Impose the geometry of a SpatRaster to those in a SpatRasterCollection. — impose","title":"Impose the geometry of a SpatRaster to those in a SpatRasterCollection. — impose","text":"Warp members SpatRasterCollection match geometry SpatRaster.","code":""},{"path":"https://rspatial.github.io/terra/reference/impose.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Impose the geometry of a SpatRaster to those in a SpatRasterCollection. — impose","text":"","code":"# S4 method for class 'SpatRasterCollection' impose(x, y, filename=\"\", ...)"},{"path":"https://rspatial.github.io/terra/reference/impose.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Impose the geometry of a SpatRaster to those in a SpatRasterCollection. — impose","text":"x SpatRasterCollection y SpatRaster filename character. Output filename ... list named options writing files writeRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/impose.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Impose the geometry of a SpatRaster to those in a SpatRasterCollection. — impose","text":"SpatRaster","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/init.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize a SpatRaster with values — initialize","title":"Initialize a SpatRaster with values — initialize","text":"Create SpatRaster values reflecting cell property: \"x\", \"y\", \"col\", \"row\", \"cell\" \"chess\". Alternatively, function can used. case, cell values initialized without reference pre-existing values. E.g., initialize random number (fun=runif). direct ways achieving small objects (see examples) vector values can created memory, init function also work SpatRasters many cells.","code":""},{"path":"https://rspatial.github.io/terra/reference/init.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize a SpatRaster with values — initialize","text":"","code":"# S4 method for class 'SpatRaster' init(x, fun, ..., filename=\"\", wopt=list())"},{"path":"https://rspatial.github.io/terra/reference/init.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize a SpatRaster with values — initialize","text":"x SpatRaster fun function applied. must either single number, multiple numbers, function, one set known character values. function must take number cells single argument return vector values length equal number cells, fun=runif. Allowed character values \"x\", \"y\", \"row\", \"col\", \"cell\", \"chess\" get x y coordinate, row, col cell number chessboard pattern (alternating 0 1 values) ... additional arguments passed fun filename character. Output filename wopt additional arguments writing files writeRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/init.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize a SpatRaster with values — initialize","text":"SpatRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/init.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initialize a SpatRaster with values — initialize","text":"","code":"r <- rast(ncols=10, nrows=5, xmin=0, xmax=10, ymin=0, ymax=5) x <- init(r, fun=\"cell\") y <- init(r, fun=runif)  # initialize with a single value  z <- init(r, fun=8)"},{"path":"https://rspatial.github.io/terra/reference/inplace.html","id":null,"dir":"Reference","previous_headings":"","what":"Change values in-place — inplace","title":"Change values in-place — inplace","text":"\"-place\" replacement methods assign new value object without making copy. efficient, copy object made standard assignment (e.g. y <- x), copy also changed. set.names -place replacement version names<-. set.ext -place replacement version ext<- set.values -place replacement version [<-. set.cats -place replacement version categories set.crs -place replacement version crs<- set.window -place replacement version window<-","code":""},{"path":"https://rspatial.github.io/terra/reference/inplace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change values in-place — inplace","text":"","code":"# S4 method for class 'SpatRaster' set.names(x, value, index=1:nlyr(x), validate=FALSE) # S4 method for class 'SpatRasterDataset' set.names(x, value, index=1:length(x), validate=FALSE) # S4 method for class 'SpatVector' set.names(x, value, index=1:ncol(x), validate=FALSE)  # S4 method for class 'SpatRaster' set.ext(x, value) # S4 method for class 'SpatVector' set.ext(x, value)  # S4 method for class 'SpatRaster' set.crs(x, value) # S4 method for class 'SpatVector' set.crs(x, value)  # S4 method for class 'SpatRaster' set.values(x, cells, values, layer=0) # S4 method for class 'SpatRasterDataset' set.values(x)  # S4 method for class 'SpatRaster' set.cats(x, layer=1, value, active=1)  # S4 method for class 'SpatRaster' set.RGB(x, value, type=\"rgb\")"},{"path":"https://rspatial.github.io/terra/reference/inplace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change values in-place — inplace","text":"x SpatRaster value character set.names. set.cats: data.frame columns (value, category) vector category names. set.RGB 3 4 numbers indicating RGB() layers index positive integer indicating layer(s) assign name validate logical. Make names valid /unique? cells cell numbers missing values replacement values missing load values memory layer positive integer(s) indicating layer(s) want assign categories want set values. number < 1 indicates \"layers\" active positive integer indicating active category (column number value, counting first column type character. color space. One \"rgb\" \"hsv\", \"hsi\" \"hsl\"","code":""},{"path":"https://rspatial.github.io/terra/reference/inplace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Change values in-place — inplace","text":"logical (invisibly)","code":""},{"path":"https://rspatial.github.io/terra/reference/inplace.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Change values in-place — inplace","text":"","code":"s <- rast(ncols=5, nrows=5, nlyrs=3) x <- s names(s) #> [1] \"lyr.1\" \"lyr.2\" \"lyr.3\" names(s) <- c(\"a\", \"b\", \"c\") names(s) #> [1] \"a\" \"b\" \"c\" names(x) #> [1] \"lyr.1\" \"lyr.2\" \"lyr.3\"  x <- s set.names(s, c(\"e\", \"f\", \"g\")) names(s) #> [1] \"e\" \"f\" \"g\" names(x) #> [1] \"e\" \"f\" \"g\"  set.ext(x, c(0,180,0,90))  f <- system.file(\"ex/elev.tif\", package=\"terra\") r <- rast(f)  #values from file to memory set.values(r) #> class       : SpatRaster  #> dimensions  : 90, 95, 1  (nrow, ncol, nlyr) #> resolution  : 0.008333333, 0.008333333  (x, y) #> extent      : 5.741667, 6.533333, 49.44167, 50.19167  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (EPSG:4326)  #> source(s)   : memory #> varname     : elev  #> name        : elevation  #> min value   :       141  #> max value   :       547   # change values set.values(r, 1:1000, 900)"},{"path":"https://rspatial.github.io/terra/reference/inset.html","id":null,"dir":"Reference","previous_headings":"","what":"Make an inset map — inset","title":"Make an inset map — inset","text":"Make inset map scale extent SpatVector","code":""},{"path":"https://rspatial.github.io/terra/reference/inset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make an inset map — inset","text":"","code":"# S4 method for class 'SpatVector' inset(x, e, loc=\"\", scale=0.2, background=\"white\",    perimeter=TRUE, box=NULL, pper, pbox, offset=0.1, add=TRUE, ...)  # S4 method for class 'SpatRaster' inset(x, e, loc=\"\", scale=0.2, background=\"white\",    perimeter=TRUE, box=NULL, pper, pbox, offset=0.1, add=TRUE, ...)  # S4 method for class 'SpatVector' inext(x, e, y=NULL, gap=0)"},{"path":"https://rspatial.github.io/terra/reference/inset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make an inset map — inset","text":"x SpatVector, SpatRaster e SpatExtent set size location inset. missing loc character. One \"bottomright\", \"bottom\", \"bottomleft\", \"left\", \"topleft\", \"top\", \"topright\", \"right\", \"center\" scale numeric. relative size inset, used x missing background color background inset. Use NA background color perimeter logical. TRUE perimeter (border) drawn around inset box SpatExtent missing, draw box inset, e.g. show map located larger area pper list graphical parameters (arguments) col lwd perimeter line pbox list graphical parameters (arguments) col lwd box (line) offset numeric. Value 0.1 1 indicate relative distance mapped bounding box add logical. Add inset map? ... additional arguments passed plot drawing x y SpatVector. NULL, y scaled based parameters x. useful, example, x represent boundaries, y points within boundaries gap numeric add space SpatVector SpatExtent","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/inset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make an inset map — inset","text":"scaled shifted SpatVector SpatRaster (returned invisibly)","code":""},{"path":"https://rspatial.github.io/terra/reference/inset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make an inset map — inset","text":"","code":"f <- system.file(\"ex/lux.shp\", package=\"terra\") v <- vect(f) x <- v[v$NAME_2 == \"Diekirch\", ]  plot(x, density=10, col=\"blue\") inset(v)   # more elaborate plot(x, density=10, col=\"blue\") inset(v, col = \"brown\", border=\"lightgrey\", perimeter=TRUE,      pper=list(col=\"orange\", lwd=3, lty=2),      box=ext(x), pbox=list(col=\"blue\", lwd=2))  cols <- rep(\"light grey\", 12) cols[2] <- \"red\" e <- ext(c(6.2, 6.3, 49.9, 50)) b <- ext(x)+0.02 inset(v, e=e, col=cols, box=b)   # with a SpatRaster ff <- system.file(\"ex/elev.tif\", package=\"terra\") r <- rast(ff) r <- crop(r, ext(x) + .01) plot(r, type=\"int\", mar=c(2,2,2,2), plg=list(x=\"topright\")) lines(v, lwd=1.5) lines(x, lwd=2.5) inset(v, col=cols, loc=\"topleft\", scale=0.15)   # a more complex one plot(r, plg=list(title=\"meter\\n\", shrink=.2, cex=.8)) lines(v, lwd=4, col=\"white\") lines(v, lwd=1.5) lines(x, lwd=2.5) text(x, \"NAME_2\", cex=1.5, halo=TRUE) sbar(6, c(6.04, 49.785), type=\"bar\", below=\"km\", label=c(0,3,6), cex=.8) s <- inset(v, col=cols, box=b, scale=.2, loc=\"topright\", background=\"light yellow\",   pbox=list(lwd=2, lty=5, col=\"blue\"))  # note the returned inset SpatVector s #>  class       : SpatVector  #>  geometry    : polygons  #>  dimensions  : 12, 6  (geometries, attributes) #>  extent      : 6.255333, 6.321333, 49.9348, 49.99657  (xmin, xmax, ymin, ymax) #>  source      : lux.shp #>  coord. ref. : lon/lat WGS 84 (EPSG:4326)  #>  names       :  ID_1   NAME_1  ID_2   NAME_2  AREA       POP #>  type        : <num>    <chr> <num>    <chr> <num>     <num> #>  values      :     1 Diekirch     1 Clervaux   312 1.808e+04 #>                    1 Diekirch     2 Diekirch   218 3.254e+04 #>                    1 Diekirch     3  Redange   259 1.866e+04 lines(s, col=\"orange\")"},{"path":"https://rspatial.github.io/terra/reference/interpIDW.html","id":null,"dir":"Reference","previous_headings":"","what":"Interpolate points using a moving window — interpIDW","title":"Interpolate points using a moving window — interpIDW","text":"Interpolate points within moving window using inverse distance weighting. maximum number points used can restricted, optionally selecting nearest points.","code":""},{"path":"https://rspatial.github.io/terra/reference/interpIDW.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interpolate points using a moving window — interpIDW","text":"","code":"# S4 method for class 'SpatRaster,SpatVector' interpIDW(x, y, field, radius, power=2, smooth=0,        maxPoints=Inf, minPoints=1, near=TRUE, fill=NA, filename=\"\", ...)  # S4 method for class 'SpatRaster,matrix' interpIDW(x, y, radius, power=2, smooth=0,         maxPoints=Inf, minPoints=1, near=TRUE, fill=NA, filename=\"\", ...)"},{"path":"https://rspatial.github.io/terra/reference/interpIDW.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interpolate points using a moving window — interpIDW","text":"x SpatRaster y SpatVector matrix three columns (x,y,z) field character. field name SpatVector y radius numeric. radius circle (single number). near=FALSE, also possible use two three numbers. Two numbers interpreted radii ellipse (x y-axis). third number indicated desired, counter clockwise, rotation ellipse (degrees) power numeric. Weighting power smooth numeric. Smoothing parameter minPoints numeric. minimum number points use. fewer points found search ellipse considered empty fill value returned maxPoints numeric. maximum number points consider search area. Additional points ignored. fewer points found, fill value returned near logical. nearest points within neighborhood used maxPoints reached? fill numeric. value use fill empty cells filename character. Output filename ... additional arguments writing files writeRaster","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/interpIDW.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interpolate points using a moving window — interpIDW","text":"SpatRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/interpIDW.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interpolate points using a moving window — interpIDW","text":"","code":"r <- rast(ncol=100, nrow=100, crs=\"local\", xmin=0, xmax=50, ymin=0, ymax=50) set.seed(100) x <- runif(25, 5, 45) y <- runif(25, 5, 45) z <- sample(25) xyz <- cbind(x,y,z)  x <- interpIDW(r, xyz, radius=5, power=1, smooth=1, maxPoints=5)"},{"path":"https://rspatial.github.io/terra/reference/interpNear.html","id":null,"dir":"Reference","previous_headings":"","what":"Nearest neighbor interpolation — interpNear","title":"Nearest neighbor interpolation — interpNear","text":"Nearest neighbor interpolation points, using moving window","code":""},{"path":"https://rspatial.github.io/terra/reference/interpNear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Nearest neighbor interpolation — interpNear","text":"","code":"# S4 method for class 'SpatRaster,SpatVector' interpNear(x, y, field, radius, interpolate=FALSE, fill=NA, filename=\"\", ...)  # S4 method for class 'SpatRaster,matrix' interpNear(x, y, radius, interpolate=FALSE, fill=NA, filename=\"\", ...)"},{"path":"https://rspatial.github.io/terra/reference/interpNear.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Nearest neighbor interpolation — interpNear","text":"x SpatRaster y SpatVector matrix three columns (x,y,z) field character. field name SpatVector y radius numeric. radius circle (single number). interpolate=FALSE also possible use two three numbers. Two numbers interpreted radii ellipse (x y-axis). third number indicated desired, counter clockwise, rotation ellipse (degrees) interpolate logical. nearest neighbor values linearly interpolated points? fill numeric. value use fill empty cells filename character. Output filename ... additional arguments writing files writeRaster","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/interpNear.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Nearest neighbor interpolation — interpNear","text":"SpatRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/interpNear.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Nearest neighbor interpolation — interpNear","text":"","code":"r <- rast(ncol=100, nrow=100, crs=\"local\", xmin=0, xmax=50, ymin=0, ymax=50) set.seed(100) x <- runif(25, 5, 45) y <- runif(25, 5, 45) z <- sample(25) xyz <- cbind(x,y,z)  x <- interpNear(r, xyz, radius=5)  p <- vect(data.frame(xyz), geom=c(\"x\", \"y\"))  v <- voronoi(p)  plot(x, col=rainbow(25)) lines(v)   # plot(v, col=rainbow(25)); points(p)"},{"path":"https://rspatial.github.io/terra/reference/interpolate.html","id":null,"dir":"Reference","previous_headings":"","what":"Spatial interpolation — interpolation","title":"Spatial interpolation — interpolation","text":"Make SpatRaster interpolated values using fitted model object classes \"gstat\" (gstat package) \"Krige\" (fields package), model location (e.g., \"x\" \"y\", \"longitude\" \"latitude\") predictors (independent variables). x y predictors, efficient provide empty (associated data memory file) SpatRaster want predictions. spatial predictor variables, provide SpatRaster first argument function. x y locations implicit predictors model use predict instead.","code":""},{"path":"https://rspatial.github.io/terra/reference/interpolate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spatial interpolation — interpolation","text":"","code":"# S4 method for class 'SpatRaster' interpolate(object, model, fun=predict, ..., xyNames=c(\"x\", \"y\"),         factors=NULL, const=NULL, index = NULL, cores=1, cpkgs=NULL,       na.rm=FALSE, filename=\"\", overwrite=FALSE, wopt=list())"},{"path":"https://rspatial.github.io/terra/reference/interpolate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spatial interpolation — interpolation","text":"object SpatRaster model model object fun function. Default value \"predict\", can replaced e.g. \"predict.se\" (depending class model), custom function (see examples) ... additional arguments passed fun xyNames character. variable names model uses spatial coordinates. E.g., c(\"longitude\", \"latitude\") factors list levels factor variables. list elements named names correspond names object can matched. argument may omitted models levels can extracted model object const data.frame. Can used add constant SpatRaster model predictions. particularly useful constant character-like factor value index positive integer NULL. Allows selecting variable returned model returns multiple variables cores positive integer. cores > 1, 'parallel' package cluster many cores created used cpkgs character. package(s) need loaded nodes able run model.predict function (see examples predict) na.rm logical. TRUE, cells NA values predictors removed computation. option prevents errors models handle NA values. cases affect output. exception predicting model returns predicted values even (!) variables NA filename character. Output filename overwrite logical. TRUE, filename overwritten wopt list named options writing files writeRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/interpolate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Spatial interpolation — interpolation","text":"SpatRaster","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/interpolate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Spatial interpolation — interpolation","text":"","code":"r <- rast(system.file(\"ex/elev.tif\", package=\"terra\")) ra <- aggregate(r, 10) xy <- data.frame(xyFromCell(ra, 1:ncell(ra))) v <- values(ra) i <- !is.na(v) xy <- xy[i,] v <- v[i]  if (FALSE) { # \\dontrun{ library(fields)  tps <- Tps(xy, v) p <- rast(r)  # use model to predict values at all locations p <- interpolate(p, tps) p <- mask(p, r) plot(p)  ### change \"fun\" from predict to fields::predictSE to get the TPS standard error ## need to use \"rast(p)\" to remove the values se <- interpolate(rast(p), tps, fun=predictSE) se <- mask(se, r) plot(se)  ### another predictor variable, \"e\" e <- (init(r, \"x\") * init(r, \"y\")) / 100000000 names(e) <- \"e\"  z <- as.matrix(extract(e, xy)[,-1])  ## add as another independent variable xyz <- cbind(xy, z) tps2 <- Tps(xyz, v) p2 <- interpolate(e, tps2, xyOnly=FALSE)  ## as a linear covariate tps3 <- Tps(xy, v, Z=z)  ## Z is a separate argument in Krig.predict, so we need a new function ## Internally (in interpolate) a matrix is formed of x, y, and elev (Z)  pfun <- function(model, x, ...) {    predict(model, x[,1:2], Z=x[,3], ...) } p3 <- interpolate(e, tps3, fun=pfun)   #### gstat examples library(gstat) library(sp) data(meuse)  ### inverse distance weighted (IDW) r <- rast(system.file(\"ex/meuse.tif\", package=\"terra\")) mg <- gstat(id = \"zinc\", formula = zinc~1, locations = ~x+y, data=meuse,              nmax=7, set=list(idp = .5)) z <- interpolate(r, mg, debug.level=0, index=1) z <- mask(z, r)  ## with a model built with an `sf` object you need to provide custom function  library(sf) sfmeuse <- st_as_sf(meuse, coords = c(\"x\", \"y\"), crs=crs(r)) mgsf <- gstat(id = \"zinc\", formula = zinc~1, data=sfmeuse,  nmax=7, set=list(idp = .5))  interpolate_gstat <- function(model, x, crs, ...) {   v <- st_as_sf(x, coords=c(\"x\", \"y\"), crs=crs)   p <- predict(model, v, ...)   as.data.frame(p)[,1:2] }  zsf <- interpolate(r, mgsf, debug.level=0, fun=interpolate_gstat, crs=crs(r), index=1) zsf <- mask(zsf, r)  ### kriging  ### ordinary kriging v <- variogram(log(zinc)~1, ~x+y, data=meuse) mv <- fit.variogram(v, vgm(1, \"Sph\", 300, 1)) gOK <- gstat(NULL, \"log.zinc\", log(zinc)~1, meuse, locations=~x+y, model=mv) OK <- interpolate(r, gOK, debug.level=0)  ## universal kriging vu <- variogram(log(zinc)~elev, ~x+y, data=meuse) mu <- fit.variogram(vu, vgm(1, \"Sph\", 300, 1)) gUK <- gstat(NULL, \"log.zinc\", log(zinc)~elev, meuse, locations=~x+y, model=mu) names(r) <- \"elev\" UK <- interpolate(r, gUK, debug.level=0)  ## co-kriging gCoK <- gstat(NULL, 'log.zinc', log(zinc)~1, meuse, locations=~x+y) gCoK <- gstat(gCoK, 'elev', elev~1, meuse, locations=~x+y) gCoK <- gstat(gCoK, 'cadmium', cadmium~1, meuse, locations=~x+y) gCoK <- gstat(gCoK, 'copper', copper~1, meuse, locations=~x+y) coV <- variogram(gCoK) plot(coV, type='b', main='Co-variogram') coV.fit <- fit.lmc(coV, gCoK, vgm(model='Sph', range=1000)) coV.fit plot(coV, coV.fit, main='Fitted Co-variogram') coK <- interpolate(r, coV.fit, debug.level=0) plot(coK) } # }"},{"path":"https://rspatial.github.io/terra/reference/intersect.html","id":null,"dir":"Reference","previous_headings":"","what":"Intersection — intersect","title":"Intersection — intersect","text":"can intersect SpatVectors SpatExtent. Intersecting points points uses extent y get intersection. Intersecting points lines supported numerical inaccuracies . can use buffer, create polygons lines use intersect. can also intersect two SpatExtents. intersecting two SpatRasters need aligned (origin spatial resolution). values returned SpatRaster TRUE input rasters values, FALSE one values, NA cells. intersecting SpatExtent SpatRaster, SpatExtent first aligned raster cell boundaries. See crop intersection SpatRaster SpatExtent (extent SpatRaster SpatVector) want SpatRaster (SpatExtent) output. See .related(x, y, \"intersects\") find geometries SpatVector intersect. can spatially subset SpatVector another one x[y].","code":""},{"path":"https://rspatial.github.io/terra/reference/intersect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Intersection — intersect","text":"","code":"# S4 method for class 'SpatVector,SpatVector' intersect(x, y)  # S4 method for class 'SpatVector,SpatExtent' intersect(x, y)  # S4 method for class 'SpatExtent,SpatVector' intersect(x, y)  # S4 method for class 'SpatExtent,SpatExtent' intersect(x, y)  # S4 method for class 'SpatRaster,SpatRaster' intersect(x, y)  # S4 method for class 'SpatRaster,SpatExtent' intersect(x, y)  # S4 method for class 'SpatExtent,SpatRaster' intersect(x, y)"},{"path":"https://rspatial.github.io/terra/reference/intersect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Intersection — intersect","text":"x SpatVector, SpatExtent, SpatRaster y SpatVector, SpatExtent, SpatRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/intersect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Intersection — intersect","text":"x","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/intersect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Intersection — intersect","text":"","code":"e1 <- ext(-10, 10, -20, 20) e2 <- ext(0, 20, -40, 5) intersect(e1, e2) #> SpatExtent : 0, 10, -20, 5 (xmin, xmax, ymin, ymax)  f <- system.file(\"ex/lux.shp\", package=\"terra\") v <- vect(f) e <- ext(5.6, 6, 49.55, 49.7) x <- intersect(v, e)  p <- vect(c(\"POLYGON ((5.8 49.8, 6 49.9, 6.15 49.8, 6 49.6, 5.8 49.8))\",  \"POLYGON ((6.3 49.9, 6.2 49.7, 6.3 49.6, 6.5 49.8, 6.3 49.9))\"), crs=crs(v)) values(p) <- data.frame(pid=1:2, area=expanse(p))  y <- intersect(v, p)  r <- s <- rast(ncol=5, nrow=5, xmin=1, xmax=5, ymin=1, ymax=5) r[5:20] <- 5:20 s[11:20] <- 11:20 rs <- intersect(r, s)  u <- shift(r, .8) us <- intersect(u, s)"},{"path":"https://rspatial.github.io/terra/reference/is.bool.html","id":null,"dir":"Reference","previous_headings":"","what":"Raster value types — is.bool","title":"Raster value types — is.bool","text":"values SpatRaster layer default numeric, can also set logical (Boolean), integer, categorical (factor). SpatRaster, .logical isTRUE equivalent .bool. isFALSE equivalent !.bool, .integer .int. .bool .int force values correct range (e.g. whole integers) -memory cell values still stored numeric. behave like assigned types, though, written files data type (file type supports ). See levels cats create categorical layers setting labels.","code":""},{"path":"https://rspatial.github.io/terra/reference/is.bool.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Raster value types — is.bool","text":"","code":"# S4 method for class 'SpatRaster' is.bool(x)  # S4 method for class 'SpatRaster' as.bool(x, filename, ...)  # S4 method for class 'SpatRaster' is.int(x)  # S4 method for class 'SpatRaster' as.int(x, filename, ...)  # S4 method for class 'SpatRaster' is.factor(x)  # S4 method for class 'SpatRaster' as.factor(x)"},{"path":"https://rspatial.github.io/terra/reference/is.bool.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Raster value types — is.bool","text":"x SpatRaster filename character. Output filename ... list named options writing files writeRaster","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/is.bool.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Raster value types — is.bool","text":".* methods return new SpatRaster, whereas .* methods return logical value layer x.","code":""},{"path":"https://rspatial.github.io/terra/reference/is.bool.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Raster value types — is.bool","text":"","code":"r <- rast(nrows=10, ncols=10, vals=1:100) is.bool(r) #> [1] FALSE z <- as.bool(r) is.bool(z) #> [1] TRUE  x <- r > 25 is.bool(x) #> [1] TRUE  rr <- r/2 is.int(rr) #> [1] FALSE is.int(round(rr)) #> [1] TRUE"},{"path":"https://rspatial.github.io/terra/reference/is.empty.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a SpatExtent or SpatVector is empty — is.empty","title":"Check if a SpatExtent or SpatVector is empty — is.empty","text":"empty SpatExtent area empty SpatVector geometries.","code":""},{"path":"https://rspatial.github.io/terra/reference/is.empty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a SpatExtent or SpatVector is empty — is.empty","text":"","code":"# S4 method for class 'SpatExtent' is.empty(x)  # S4 method for class 'SpatVector' is.empty(x)"},{"path":"https://rspatial.github.io/terra/reference/is.empty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a SpatExtent or SpatVector is empty — is.empty","text":"x SpatVector SpatExtent","code":""},{"path":"https://rspatial.github.io/terra/reference/is.empty.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if a SpatExtent or SpatVector is empty — is.empty","text":"logical","code":""},{"path":"https://rspatial.github.io/terra/reference/is.empty.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if a SpatExtent or SpatVector is empty — is.empty","text":"","code":"e <- ext(0,0,0,0) is.valid(e) #> [1] TRUE is.empty(e) #> [1] TRUE  v <- vect() is.valid(v) #> logical(0) is.empty(v) #> [1] TRUE"},{"path":"https://rspatial.github.io/terra/reference/is.flipped.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for rotation — is.flipped","title":"Check for rotation — is.flipped","text":"Check SpatRaster \"flipped\" vertically, may need adjusted flip can used.","code":""},{"path":"https://rspatial.github.io/terra/reference/is.flipped.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for rotation — is.flipped","text":"","code":"# S4 method for class 'SpatRaster' is.flipped(x)"},{"path":"https://rspatial.github.io/terra/reference/is.flipped.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for rotation — is.flipped","text":"x SpatRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/is.flipped.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for rotation — is.flipped","text":"logical. One value raster data *source*","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/is.flipped.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check for rotation — is.flipped","text":"","code":"r <- rast(nrows=10, ncols=10) is.flipped(r) #> [1] FALSE"},{"path":"https://rspatial.github.io/terra/reference/is.lonlat.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for longitude/latitude crs — is.lonlat","title":"Check for longitude/latitude crs — is.lonlat","text":"Test whether SpatRaster SpatVector longitude/latitude coordinate reference system (CRS), perhaps one. , CRS unknown (\"\") x coordinates within -181 181 y coordinates within -90.1 90.1. SpatRaster can also test longitude/latitude CRS \"global\" (covers longitudes). warning given CRS missing specified longitude/latitude coordinates match .","code":""},{"path":"https://rspatial.github.io/terra/reference/is.lonlat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for longitude/latitude crs — is.lonlat","text":"","code":"# S4 method for class 'SpatRaster' is.lonlat(x, perhaps=FALSE, warn=TRUE, global=FALSE)  # S4 method for class 'SpatVector' is.lonlat(x, perhaps=FALSE, warn=TRUE)  # S4 method for class 'character' is.lonlat(x, perhaps=FALSE, warn=TRUE)"},{"path":"https://rspatial.github.io/terra/reference/is.lonlat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for longitude/latitude crs — is.lonlat","text":"x SpatRaster SpatVector perhaps logical. TRUE CRS unknown, method returns TRUE coordinates plausible longitude/latitude warn logical. TRUE, warning given CRS unknown assumed lon/lat  perhaps=TRUE global logical. TRUE, method tests raster covers longitudes (-180 180 degrees) extreme columns fact adjacent","code":""},{"path":"https://rspatial.github.io/terra/reference/is.lonlat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for longitude/latitude crs — is.lonlat","text":"logical NA","code":""},{"path":"https://rspatial.github.io/terra/reference/is.lonlat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check for longitude/latitude crs — is.lonlat","text":"","code":"r <- rast() is.lonlat(r) #> [1] TRUE is.lonlat(r, global=TRUE) #> [1] TRUE  crs(r) <- \"\" is.lonlat(r) #> Warning: [is.lonlat] unknown crs #> [1] NA is.lonlat(r, perhaps=TRUE, warn=FALSE) #> [1] TRUE  crs(r) <- \"+proj=lcc +lat_1=48 +lat_2=33 +lon_0=-100 +ellps=WGS84\" is.lonlat(r) #> [1] FALSE"},{"path":"https://rspatial.github.io/terra/reference/is.rotated.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for rotation — is.rotated","title":"Check for rotation — is.rotated","text":"Check SpatRaster \"rotated\" needs rectified can used See rectify","code":""},{"path":"https://rspatial.github.io/terra/reference/is.rotated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for rotation — is.rotated","text":"","code":"# S4 method for class 'SpatRaster' is.rotated(x)"},{"path":"https://rspatial.github.io/terra/reference/is.rotated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for rotation — is.rotated","text":"x SpatRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/is.rotated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for rotation — is.rotated","text":"logical. One value raster data *source*","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/is.rotated.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check for rotation — is.rotated","text":"","code":"r <- rast(nrows=10, ncols=10, vals=1:100) is.rotated(r) #> [1] FALSE"},{"path":"https://rspatial.github.io/terra/reference/is.valid.html","id":null,"dir":"Reference","previous_headings":"","what":"Check or fix polygon or extent validity — is.valid","title":"Check or fix polygon or extent validity — is.valid","text":"Check validity polygons attempt fix . check validity SpatExtent.","code":""},{"path":"https://rspatial.github.io/terra/reference/is.valid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check or fix polygon or extent validity — is.valid","text":"","code":"# S4 method for class 'SpatVector' is.valid(x, messages=FALSE, as.points=FALSE)  # S4 method for class 'SpatVector' makeValid(x)  # S4 method for class 'SpatExtent' is.valid(x)"},{"path":"https://rspatial.github.io/terra/reference/is.valid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check or fix polygon or extent validity — is.valid","text":"x SpatVector SpatExtent messages logical. TRUE error messages returned .points logical. TRUE, attempted return locations polygons invalid SpatVector points","code":""},{"path":"https://rspatial.github.io/terra/reference/is.valid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check or fix polygon or extent validity — is.valid","text":"logical","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/is.valid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check or fix polygon or extent validity — is.valid","text":"","code":"w <- vect(\"POLYGON ((0 -5, 10 0, 10 -10, 0 -5))\") is.valid(w) #> [1] TRUE  w <- vect(\"POLYGON ((0 -5, 10 0, 10 -10, 4 -2, 0 -5))\") is.valid(w) #> [1] FALSE is.valid(w, TRUE) #>   valid                                                reason #> 1 FALSE Self-intersection[4.54545454545455 -2.72727272727273]  plot(w) points(cbind(4.54, -2.72), cex=2, col=\"red\")    e <- ext(0, 1, 0, 1) is.valid(e) #> [1] TRUE  ee <- ext(0, 0, 0, 0) is.valid(ee) #> [1] TRUE"},{"path":"https://rspatial.github.io/terra/reference/k_means.html","id":null,"dir":"Reference","previous_headings":"","what":"k_means — k_means","title":"k_means — k_means","text":"Compute k-means clusters SpatRaster. large SpatRasters (ncell(x) > maxcell) done two steps. First sample cells used compute cluster centers. cell assigned cluster computing distance centers.","code":""},{"path":"https://rspatial.github.io/terra/reference/k_means.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"k_means — k_means","text":"","code":"# S4 method for class 'SpatRaster' k_means(x, centers=3, ..., maxcell=1000000, filename=\"\", overwrite=FALSE, wopt=list())"},{"path":"https://rspatial.github.io/terra/reference/k_means.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"k_means — k_means","text":"x SpatRaster centers either number clusters, set initial (distinct) cluster centres. number, random set (distinct) cells x chosen initial centres ... additional arguments passed kmeans maxcell positive integer. size regular sample used smaller ncell(x) filename character. Output filename (ignored .raster=FALSE) overwrite logical. TRUE, filename overwritten wopt list additional arguments writing files writeRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/k_means.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"k_means — k_means","text":"SpatRaster","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/k_means.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"k_means — k_means","text":"","code":"f <- system.file(\"ex/logo.tif\", package = \"terra\") r <- rast(f) km <- k_means(r, centers=5) km #> class       : SpatRaster  #> dimensions  : 77, 101, 1  (nrow, ncol, nlyr) #> resolution  : 1, 1  (x, y) #> extent      : 0, 101, 0, 77  (xmin, xmax, ymin, ymax) #> coord. ref. : Cartesian (Meter)  #> source(s)   : memory #> name        : lyr1  #> min value   :    1  #> max value   :    5"},{"path":"https://rspatial.github.io/terra/reference/lapp.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply a function to layers of a SpatRaster, or sub-datasets of a SpatRasterDataset — lapp","title":"Apply a function to layers of a SpatRaster, or sub-datasets of a SpatRasterDataset — lapp","text":"Apply function SpatRaster, using layers arguments. number arguments function fun must match number layers SpatRaster (number sub-datasets SpatRasterDataset). example, want multiply two layers, use function: fun=function(x,y){return(x*y)} percentage: fun=function(x,y){return(100 * x / y)}. combine three layers use fun=function(x,y,z){return((x + y) * z)} use function, test make sure vectorized. , work vectors longer one, single numbers. input SpatRaster(s) multiple layers, work matrix (multiple cells) input data (matrices case SpatRasterDataSet). function must return number elements input vectors, multiples . Also make sure function NA-proof: returns number values input values NA. function must return vector matrix, data.frame. test , run .call(fun, data) (see examples). Use app summarize functions sum, take number arguments; tapp groups layers.","code":""},{"path":"https://rspatial.github.io/terra/reference/lapp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply a function to layers of a SpatRaster, or sub-datasets of a SpatRasterDataset — lapp","text":"","code":"# S4 method for class 'SpatRaster' lapp(x, fun, ..., usenames=FALSE, cores=1, filename=\"\", overwrite=FALSE, wopt=list())  # S4 method for class 'SpatRasterDataset' lapp(x, fun, ..., usenames=FALSE, recycle=FALSE,      cores=1, filename=\"\", overwrite=FALSE, wopt=list())"},{"path":"https://rspatial.github.io/terra/reference/lapp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply a function to layers of a SpatRaster, or sub-datasets of a SpatRasterDataset — lapp","text":"x SpatRaster SpatRasterDataset fun function takes vector can applied cell x ... additional arguments passed fun usenames logical. Use layer names (dataset names x SpatRasterDataset) match function arguments? FALSE, argument matching position cores positive integer. cores > 1, 'parallel' package cluster many cores created used. can also supply cluster object. benefit using option often small, even positive. Using fast function fun can much effective way speed things recycle logical. Recycle layers match subdataset largest number layers filename character. Output filename overwrite logical. TRUE, filename overwritten wopt list named options writing files writeRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/lapp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply a function to layers of a SpatRaster, or sub-datasets of a SpatRasterDataset — lapp","text":"SpatRaster","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/lapp.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Apply a function to layers of a SpatRaster, or sub-datasets of a SpatRasterDataset — lapp","text":"Use sapp lapply apply function takes SpatRaster argument layer SpatRaster (rarely necessary).","code":""},{"path":"https://rspatial.github.io/terra/reference/lapp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply a function to layers of a SpatRaster, or sub-datasets of a SpatRasterDataset — lapp","text":"","code":"s <- rast(system.file(\"ex/logo.tif\", package=\"terra\")) + 1   ss <- s[[2:1]]  fvi <- function(x, y){ (x - y ) / (x + y) }  # test the function data <- list(c(1:5,NA), 6:1) do.call(fvi, data) #> [1] -0.7142857 -0.4285714 -0.1428571  0.1428571  0.4285714         NA  x <- lapp(ss, fun=fvi )  # which is the same as supplying the layers to \"fun\" # in some cases this will be much faster  y <- fvi(s[[2]], s[[1]])  f2 <- function(x, y, z){ (z - y + 1) / (x + y + 1) }  p1 <- lapp(s, fun=f2 )  p2 <- lapp(s[[1:2]], f2, z=200)  # the usenames argument  fvi2 <- function(red, green){ (red - green ) / (red + green) }  names(s) #> [1] \"red\"   \"green\" \"blue\"  x1 <- lapp(s[[1:2]], fvi2, usenames=TRUE) x2 <- lapp(s[[2:1]], fvi2, usenames=TRUE) # x1 and x2 are the same, despite the change in the order of the layers # x4 is also the same, but x3 is not x3 <- lapp(s[[2:1]], fvi2, usenames=FALSE)  # these fail because there are too many layers in s # x4 <- lapp(s, fvi2, usenames=TRUE) # x5 <- lapp(s, fvi2, usenames=FALSE)  pairs(c(x1, x2, x3))   ## SpatRasterDataset x <- sds(s, s[[1]]+50) fun <- function(x, y) { x/y }  # test \"fun\" data <- list(matrix(1:9, ncol=3), matrix(9:1, ncol=3)) do.call(fun, data) #>           [,1]      [,2]     [,3] #> [1,] 0.1111111 0.6666667 2.333333 #> [2,] 0.2500000 1.0000000 4.000000 #> [3,] 0.4285714 1.5000000 9.000000  lapp(x, fun, recycle=TRUE) #> class       : SpatRaster  #> dimensions  : 77, 101, 3  (nrow, ncol, nlyr) #> resolution  : 1, 1  (x, y) #> extent      : 0, 101, 0, 77  (xmin, xmax, ymin, ymax) #> coord. ref. : Cartesian (Meter)  #> source(s)   : memory #> names       :      lyr.1,      lyr.2,      lyr.3  #> min values  : 0.01960784, 0.01851852, 0.01694915  #> max values  : 0.83660131, 0.88571429, 1.12359551   # the same, more concisely z <- s / (s[[1]]+50)"},{"path":"https://rspatial.github.io/terra/reference/layerCor.html","id":null,"dir":"Reference","previous_headings":"","what":"Correlation and (weighted) covariance — layerCor","title":"Correlation and (weighted) covariance — layerCor","text":"Compute correlation, (weighted) covariance, similar summary statistics compare values pairs layers SpatRaster.","code":""},{"path":"https://rspatial.github.io/terra/reference/layerCor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correlation and (weighted) covariance — layerCor","text":"","code":"# S4 method for class 'SpatRaster' layerCor(x, fun, w, asSample=TRUE, use=\"everything\", maxcell=Inf, ...)"},{"path":"https://rspatial.github.io/terra/reference/layerCor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Correlation and (weighted) covariance — layerCor","text":"x SpatRaster fun character. statistic compute: either \"cov\" (covariance), \"weighted.cov\" (weighted covariance), \"cor\" (pearson correlation coefficient) function takes two vectors argument compute single number w SpatRaster weights  compute weighted covariance. single layer geometry x asSample logical. TRUE, statistic sample (denominator n-1) computed, rather population (denominator n). standard functions use character. decide handle missing values. must (abbreviation ) one \"everything\", \"complete.obs\", \"pairwise.complete.obs\", \"masked.complete\". \"pairwise.complete.obs\", value pair layers computed cells NA pair. Therefore, may (number ) cells used varies pairs. benefit approach available data used. Use \"complete.obs\", want use values cells NA layers. using \"masked.complete\" indicate layers NA values cells maxcell positive integer. maximum number cells used. smaller ncell(x), regular sample x used ... additional arguments fun (proper function)","code":""},{"path":"https://rspatial.github.io/terra/reference/layerCor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Correlation and (weighted) covariance — layerCor","text":"fun one three standard statistics, get list three items: correlation (weighted) covariance matrix, (weighted) means, number data cells comparison. means also matrix may depend combination layers different cells missing values excluded computation. rows mean matrix represent layer whose (weighted) mean calculated columns represent layer paired . cells non-missing observations layers used calculation (weighted) mean. diagonals mean n matrices set missing. fun function, get single matrix.","code":""},{"path":"https://rspatial.github.io/terra/reference/layerCor.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Correlation and (weighted) covariance — layerCor","text":"weighted covariance: Canty, M.J. .. Nielsen, 2008. Automatic radiometric normalization multitemporal satellite imagery iteratively re-weighted MAD transformation. Remote Sensing Environment 112:1025-1036. Nielsen, .., 2007. regularized iteratively reweighted MAD method change detection multi- hyperspectral data. IEEE Transactions Image Processing 16(2):463-478.","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/layerCor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Correlation and (weighted) covariance — layerCor","text":"","code":"b <- rast(system.file(\"ex/logo.tif\", package=\"terra\"))    layerCor(b, \"pearson\") #> $correlation #>             red     green      blue #> red   1.0000000 0.9980961 0.9501633 #> green 0.9980961 1.0000000 0.9658011 #> blue  0.9501633 0.9658011 1.0000000 #>  #> $mean #>            red    green     blue #> red        NaN 182.2855 182.2855 #> green 185.3509      NaN 185.3509 #> blue  192.8046 192.8046      NaN #>  #> $n #>        red green blue #> red    NaN  7777 7777 #> green 7777   NaN 7777 #> blue  7777  7777  NaN #>   layerCor(b, \"cov\") #> $covariance #>            red    green     blue #> red   5564.371 5443.405 4993.165 #> green 5443.405 5345.403 4974.478 #> blue  4993.165 4974.478 4962.942 #>  #> $mean #>            red    green     blue #> red   182.2855 182.2855 182.2855 #> green 185.3509 185.3509 185.3509 #> blue  192.8046 192.8046 192.8046 #>  #> $n #>      [,1] [,2] [,3] #> [1,] 7777 7777 7777 #> [2,] 7777 7777 7777 #> [3,] 7777 7777 7777 #>   # weigh by column number w <- init(b, fun=\"col\") layerCor(b, \"weighted.cov\", w=w) #> $weighted_covariance #>            red    green     blue #> red   5670.750 5536.351 5009.851 #> green 5536.351 5427.161 4987.092 #> blue  5009.851 4987.092 4937.007 #>  #> $weighted_mean #>            red    green     blue #> red   177.5983 177.5983 177.5983 #> green 181.3521 181.3521 181.3521 #> blue  191.5236 191.5236 191.5236 #>"},{"path":"https://rspatial.github.io/terra/reference/legend.html","id":null,"dir":"Reference","previous_headings":"","what":"add a custom legend — add_legend","title":"add a custom legend — add_legend","text":"Wrapper around legend allows adding custom legend map using keyword \"topleft\" \"bottomright\". function place legend locations within mapped area delineated axes.","code":""},{"path":"https://rspatial.github.io/terra/reference/legend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"add a custom legend — add_legend","text":"","code":"add_legend(x, y, ...)"},{"path":"https://rspatial.github.io/terra/reference/legend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"add a custom legend — add_legend","text":"x keyword used position legend (x coordinate) y y coordinate used position legend (x also coordinate) ... arguments passed legend","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/legend.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"add a custom legend — add_legend","text":"","code":"v <- vect(system.file(\"ex/lux.shp\", package=\"terra\")) plot(v) points(centroids(v), col=\"red\") legend(\"topleft\", legend = \"centroids\", pch = 20, xpd=NA, bg=\"white\", col=\"red\") add_legend(\"topright\", legend = \"centroids\", pch = 20, col=\"red\")"},{"path":"https://rspatial.github.io/terra/reference/linearUnits.html","id":null,"dir":"Reference","previous_headings":"","what":"Linear units of the coordinate reference system — linearUnits","title":"Linear units of the coordinate reference system — linearUnits","text":"Get linear units coordinate reference system (crs) SpatRaster SpatVector expressed m. value returned used internally transform area perimeter measures meters. value returned longitude/latitude crs zero.","code":""},{"path":"https://rspatial.github.io/terra/reference/linearUnits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Linear units of the coordinate reference system — linearUnits","text":"","code":"# S4 method for class 'SpatRaster' linearUnits(x)  # S4 method for class 'SpatVector' linearUnits(x)"},{"path":"https://rspatial.github.io/terra/reference/linearUnits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linear units of the coordinate reference system — linearUnits","text":"x SpatRaster SpatVector","code":""},{"path":"https://rspatial.github.io/terra/reference/linearUnits.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Linear units of the coordinate reference system — linearUnits","text":"numeric (meter)","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/linearUnits.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Linear units of the coordinate reference system — linearUnits","text":"","code":"x <- rast() crs(x) <- \"\" linearUnits(x) #> [1] NaN  crs(x) <- \"+proj=longlat +datum=WGS84\" linearUnits(x) #> [1] 0  crs(x) <- \"+proj=utm +zone=1 +units=cm\" linearUnits(x) #> [1] 0.01  crs(x) <- \"+proj=utm +zone=1 +units=km\" linearUnits(x) #> [1] 1000  crs(x) <- \"+proj=utm +zone=1 +units=us-ft\" linearUnits(x) #> [1] 0.3048006"},{"path":"https://rspatial.github.io/terra/reference/lines.html","id":null,"dir":"Reference","previous_headings":"","what":"Add points, lines, or polygons to a map — lines","title":"Add points, lines, or polygons to a map — lines","text":"Add vector geometries plot (map) points, lines, polys. simpler alternatives plot(x, add=TRUE) methods also work small(!) SpatRaster. cells NA first layer used.","code":""},{"path":"https://rspatial.github.io/terra/reference/lines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add points, lines, or polygons to a map — lines","text":"","code":"# S4 method for class 'SpatVector' points(x, col, cex=0.7, pch=16, alpha=1, ...)  # S4 method for class 'SpatVector' lines(x, y=NULL, col, lwd=1, lty=1, arrows=FALSE, alpha=1, ...)  # S4 method for class 'SpatVector' polys(x, col, border=\"black\", lwd=1, lty=1, alpha=1, ...)  # S4 method for class 'SpatRaster' points(x, ...)  # S4 method for class 'SpatRaster' lines(x, mx=10000, ...)  # S4 method for class 'SpatRaster' polys(x, mx=10000, dissolve=TRUE, ...)  # S4 method for class 'SpatExtent' points(x, col=\"black\", alpha=1, ...)  # S4 method for class 'SpatExtent' lines(x, col=\"black\", alpha=1, ...)  # S4 method for class 'SpatExtent' polys(x, col, alpha=1, ...)"},{"path":"https://rspatial.github.io/terra/reference/lines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add points, lines, or polygons to a map — lines","text":"x SpatVector SpatExtent y missing SpatVector. x y point geometry number rows, lines drawn pairs points col character. Colors border character. color(s) polygon borders. Use NULL NA draw border cex numeric. point size magnifier. See par pch positive integer, point type. See points. (linux) devices, default symbol \"16\" smooth circle. can use \"20\" instead (takes bit longer draw) \"1\" open circle alpha number 0 1 set transparency lwd numeric, line-width. See par lty positive integer, line type. See par arrows logical. TRUE y SpatVector, arrows drawn instead lines. See arrows additional arguments mx positive number. number cells SpatRaster x higher, method fail error message dissolve logical. boundaries cells value removed? ... additional graphical arguments lwd, cex pch","code":""},{"path":"https://rspatial.github.io/terra/reference/lines.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add points, lines, or polygons to a map — lines","text":"","code":"f <- system.file(\"ex/lux.shp\", package=\"terra\") v <- vect(f)  r <- rast(v) values(r) <- 1:ncell(r) plot(r) lines(v) points(v)"},{"path":"https://rspatial.github.io/terra/reference/makeTiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Make tiles or get their extents — makeTiles","title":"Make tiles or get their extents — makeTiles","text":"Divide SpatRaster \"tiles\". cells another SpatRaster (normally much lower resolution) SpatVector polygon geometry can used define tiles. can also provide one two numbers indicate number rows columns per tile. getTileExtents returns extents (virtual) tiles, makeTiles creates files tiles returns filenames.","code":""},{"path":"https://rspatial.github.io/terra/reference/makeTiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make tiles or get their extents — makeTiles","text":"","code":"# S4 method for class 'SpatRaster' makeTiles(x, y, filename=\"tile_.tif\", extend=FALSE,     na.rm=FALSE, buffer=0, overwrite=FALSE, ...)  # S4 method for class 'SpatRaster' getTileExtents(x, y, extend=FALSE, buffer=0)"},{"path":"https://rspatial.github.io/terra/reference/makeTiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make tiles or get their extents — makeTiles","text":"x SpatRaster y SpatRaster SpatVector defining zones; numeric specifying number rows columns zone (1 2 numbers number rows columns ) filename character. Output filename template. Filenames altered adding tile number tile extend logical. TRUE, extent y expanded assure covers x na.rm logical. TRUE, tiles missing values ignored buffer integer. number additional rows columns added tile. Can single number, two numbers specify separate number rows columns. allows creating overlapping tiles can used computing spatial context dependent values e.g. focal. expansion inside x, rows columns outside x added overwrite logical. TRUE, existing tiles overwritten; otherwise skipped (without error warning) ... additional arguments writing files writeRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/makeTiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make tiles or get their extents — makeTiles","text":"character (filenames) matrix (extents)","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/makeTiles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make tiles or get their extents — makeTiles","text":"","code":"r <- rast(ncols=100, nrows=100) values(r) <- 1:ncell(r) x <- rast(ncols=2, nrows=2)  getTileExtents(r, x) #>               xmin         xmax          ymin          ymax #> [1,] -1.800000e+02 4.440892e-15 -2.220446e-15  9.000000e+01 #> [2,]  4.440892e-15 1.800000e+02 -2.220446e-15  9.000000e+01 #> [3,] -1.800000e+02 4.440892e-15 -9.000000e+01 -2.220446e-15 #> [4,]  4.440892e-15 1.800000e+02 -9.000000e+01 -2.220446e-15 getTileExtents(r, x, buffer=3) #>        xmin  xmax  ymin ymax #> [1,] -190.8  10.8  -5.4 95.4 #> [2,]  -10.8 190.8  -5.4 95.4 #> [3,] -190.8  10.8 -95.4  5.4 #> [4,]  -10.8 190.8 -95.4  5.4   filename <- paste0(tempfile(), \"_.tif\") ff <- makeTiles(r, x, filename) ff #> [1] \"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/T//Rtmp0oj9Ql/file55fb1d23cfd2_1.tif\" #> [2] \"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/T//Rtmp0oj9Ql/file55fb1d23cfd2_2.tif\" #> [3] \"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/T//Rtmp0oj9Ql/file55fb1d23cfd2_3.tif\" #> [4] \"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/T//Rtmp0oj9Ql/file55fb1d23cfd2_4.tif\"  vrt(ff) #> class       : SpatRaster  #> dimensions  : 100, 100, 1  (nrow, ncol, nlyr) #> resolution  : 3.6, 1.8  (x, y) #> extent      : -180, 180, -90, 90  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (EPSG:4326)  #> source      : spat_55fb692d77f6_22011_CjcR62DykkoqBId.vrt  #> name        : spat_55fb692d77f6_22011_CjcR62DykkoqBId  #> min value   :                                       1  #> max value   :                                   10000"},{"path":"https://rspatial.github.io/terra/reference/makeVRT.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a VRT header file — makeVRT","title":"Make a VRT header file — makeVRT","text":"Create VRT header file \"flat binary\" raster file needs header file able read , .","code":""},{"path":"https://rspatial.github.io/terra/reference/makeVRT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a VRT header file — makeVRT","text":"","code":"makeVRT(filename, nrow, ncol, nlyr=1, extent, xmin, ymin, xres, yres=xres, xycenter=TRUE,    crs=\"+proj=longlat\", lyrnms=\"\", datatype, NAflag=NA, bandorder=\"BIL\", byteorder=\"LSB\",    toptobottom=TRUE, offset=0, scale=1)"},{"path":"https://rspatial.github.io/terra/reference/makeVRT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a VRT header file — makeVRT","text":"filename character. raster filename (without \".vrt\" extension) nrow positive integer, number rows ncol positive integer, number columns nlyr positive integer, number layers extent SpatExtent missing xmin numeric. minimum x coordinate (used extent missing) ymin numeric. minimum y coordinate (used extent missing) xres positive number. x resolution yres positive number. y resolution) xycenter logical. TRUE, xmin xmax represent coordinates center extreme cell, stead coordinates outside corner. used extent missing crs character. Coordinate reference system description lyrnms character. Layer names datatype character. One \"INT2S\", \"INT4S\", \"INT1U\", \"INT2U\", \"INT4U\", \"FLT4S\", \"FLT8S\". missing, guessed file size (INT1U 1 byte per value, INT2S 2 bytes FLT4S 4 bytes per value). may wrong , example, 2 bytes per value may fact INT2U (U unsigned) values NAflag numeric. value used \"NA flag\" bandorder character. One \"BIL\", \"BIP\", \"BSQ\". Band Interleaved Line, Pixel, Band SeQuential byteorder character. One \"LSB\", \"MSB\". \"MSB\" common files generated Linux systems, whereas \"LSB\" common files generated windows toptobottom logical. FALSE, values read bottom top offset numeric. offset applied scale numeric. scale applied","code":""},{"path":"https://rspatial.github.io/terra/reference/makeVRT.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a VRT header file — makeVRT","text":"character (.VRT filename)","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/map_extent.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the coordinates of the extent of a map — map_extent","title":"Get the coordinates of the extent of a map — map_extent","text":"Helper function creating custom map elements aligned axes map (base plot created SpatRaster /SpatVector). example, may need know coordinates upper-left corner map add information . Unlike standard base plot, terra keeps axis aligned data. reason use par()$usr get coordinates. coordinates returned function used , example, add_legend legend can automatically placed particular corner. function returns meaningful results active plot (canvas) create call plot SpatRaster SpatVector first argument.","code":""},{"path":"https://rspatial.github.io/terra/reference/map_extent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the coordinates of the extent of a map — map_extent","text":"","code":"map_extent()"},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/map_extent.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the coordinates of the extent of a map — map_extent","text":"","code":"r <- rast(xmin=0, xmax=10, ymin=0, ymax=10, res=1, vals=1:100) plot(r)   map_extent() #>  xmin xmax ymin ymax  geo #>     0   10    0   10 TRUE par()$usr #> [1]  0.0000000 10.0000000 -0.3244889 10.3244889"},{"path":"https://rspatial.github.io/terra/reference/mappal.html","id":null,"dir":"Reference","previous_headings":"","what":"color palettes for mapping — map.pal","title":"color palettes for mapping — map.pal","text":"Get color palette mapping. palettes copied GRASS.","code":""},{"path":"https://rspatial.github.io/terra/reference/mappal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"color palettes for mapping — map.pal","text":"","code":"map.pal(name, n=50, ...)"},{"path":"https://rspatial.github.io/terra/reference/mappal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"color palettes for mapping — map.pal","text":"name character (name palette, see Details), missing (get available names) n numeric. number colors ... additional arguments passed colorRamp","code":""},{"path":"https://rspatial.github.io/terra/reference/mappal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"color palettes for mapping — map.pal","text":"none","code":""},{"path":[]},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/mappal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"color palettes for mapping — map.pal","text":"","code":"map.pal(\"elevation\", 10) #>  [1] \"#00BFBF\" \"#00E254\" \"#1CFF00\" \"#A9FF00\" \"#FFE200\" \"#FF9B00\" \"#E97F14\" #>  [8] \"#C67F37\" \"#C39F7B\" \"#C8C8C8\"  r <- rast(system.file(\"ex/elev.tif\", package=\"terra\")) plot(r, col=map.pal(\"elevation\"))   map.pal() #>  [1] \"aspect\"      \"bcyr\"        \"bgyr\"        \"blues\"       \"byg\"         #>  [6] \"byr\"         \"curvature\"   \"differences\" \"elevation\"   \"grass\"       #> [11] \"greens\"      \"grey\"        \"gyr\"         \"haxby\"       \"inferno\"     #> [16] \"magma\"       \"oranges\"     \"plasma\"      \"rainbow\"     \"ramp\"        #> [21] \"reds\"        \"roygbiv\"     \"rstcurv\"     \"ryb\"         \"ryg\"         #> [26] \"sepia\"       \"viridis\"     \"water\"       \"wave\""},{"path":"https://rspatial.github.io/terra/reference/mask.html","id":null,"dir":"Reference","previous_headings":"","what":"Mask values in a SpatRaster or SpatVector — mask","title":"Mask values in a SpatRaster or SpatVector — mask","text":"x SpatRaster: Create new SpatRaster values SpatRaster x, except cells NA (maskvalue) another SpatRaster ('mask'), cells covered SpatVector SpatExtent. cells become NA (another updatevalue). x SpatVector SpatExtent: Select geometries x intersect, intersect, geometries y.","code":""},{"path":"https://rspatial.github.io/terra/reference/mask.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mask values in a SpatRaster or SpatVector — mask","text":"","code":"# S4 method for class 'SpatRaster,SpatRaster' mask(x, mask, inverse=FALSE, maskvalues=NA,     updatevalue=NA, filename=\"\", ...)     # S4 method for class 'SpatRaster,SpatVector' mask(x, mask, inverse=FALSE, updatevalue=NA,   touches=TRUE, filename=\"\", ...)  # S4 method for class 'SpatRaster,SpatExtent' mask(x, mask, inverse=FALSE, updatevalue=NA,   touches=TRUE, filename=\"\", ...)  # S4 method for class 'SpatVector,SpatVector' mask(x, mask, inverse=FALSE)  # S4 method for class 'SpatVector,SpatExtent' mask(x, mask, inverse=FALSE)"},{"path":"https://rspatial.github.io/terra/reference/mask.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mask values in a SpatRaster or SpatVector — mask","text":"x SpatRaster SpatVector mask SpatRaster SpatVector inverse logical. TRUE, areas mask _not_ maskvalue masked maskvalues numeric. value(s) mask indicate cells x masked (change value updatevalue (default = NA)) updatevalue numeric. value masked cells become (NA) touches logical. TRUE, cells touched lines polygons masked, just line render path, whose center point within polygon filename character. Output filename ... additional arguments writing files writeRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/mask.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mask values in a SpatRaster or SpatVector — mask","text":"SpatRaster","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/mask.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mask values in a SpatRaster or SpatVector — mask","text":"","code":"f <- system.file(\"ex/elev.tif\", package=\"terra\") r <- rast(f) msk <- ifel(r < 400, NA, 1)  m <- mask(r, msk)  f <- system.file(\"ex/lux.shp\", package=\"terra\") v <- vect(f)[1,]  mv1 <- mask(r, v) mv2 <- crop(r, v, mask=TRUE)"},{"path":"https://rspatial.github.io/terra/reference/match.html","id":null,"dir":"Reference","previous_headings":"","what":"Value matching for SpatRasters — match","title":"Value matching for SpatRasters — match","text":"match returns SpatRaster position matched values. cell values index table argument. %% returns 0/1 (FALSE/TRUE) SpatRaster indicating cells values matched .","code":""},{"path":"https://rspatial.github.io/terra/reference/match.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Value matching for SpatRasters — match","text":"","code":"match(x, table, nomatch = NA_integer_, incomparables = NULL)  x %in% table"},{"path":"https://rspatial.github.io/terra/reference/match.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Value matching for SpatRasters — match","text":"x SpatRaster table vector values matched nomatch value returned case match found. Note coerced integer incomparables vector values matched. value x matching value vector assigned nomatch value. historical reasons, FALSE equivalent NULL","code":""},{"path":"https://rspatial.github.io/terra/reference/match.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Value matching for SpatRasters — match","text":"SpatRaster","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/match.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Value matching for SpatRasters — match","text":"","code":"r <- rast(nrows=10, ncols=10) values(r) <- 1:100 m <- match(r, c(5:10, 50:55)) n <- r %in% c(5:10, 50:55)"},{"path":"https://rspatial.github.io/terra/reference/math-generics.html","id":null,"dir":"Reference","previous_headings":"","what":"General mathematical methods — Math-methods","title":"General mathematical methods — Math-methods","text":"Standard mathematical methods computations SpatRasters. Computations local (applied cell cell basis). multiple SpatRasters used, must extent resolution. implemented: abs, sign, sqrt, ceiling, floor, trunc,  cummax, cummin, cumprod, cumsum, log, log10, log2, log1p, acos, acosh, asin, asinh, atan, atanh, exp, expm1, cos, cosh, sin, sinh, tan, tanh, round, signif Instead directly calling methods, can also provide name math method. useful want provide output filename. following methods implemented SpatExtent: round, floor, ceiling round also implemented SpatVector, round coordinates geometries.","code":""},{"path":"https://rspatial.github.io/terra/reference/math-generics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"General mathematical methods — Math-methods","text":"","code":"# S4 method for class 'SpatRaster' sqrt(x)  # S4 method for class 'SpatRaster' log(x, base=exp(1))  # S4 method for class 'SpatRaster' round(x, digits=0)  # S4 method for class 'SpatRaster' math(x, fun, digits=0, filename=\"\", overwrite=FALSE, ...)  # S4 method for class 'SpatVector' round(x, digits=4)  # S4 method for class 'SpatRaster' cumsum(x)"},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/math-generics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"General mathematical methods — Math-methods","text":"x SpatRaster base positive complex number: base respect logarithms computed digits Number digits rounding fun character. Math function name filename character. Output filename overwrite logical. TRUE, filename overwritten ... additional arguments writing files writeRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/math-generics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"General mathematical methods — Math-methods","text":"SpatRaster SpatExtent","code":""},{"path":"https://rspatial.github.io/terra/reference/math-generics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"General mathematical methods — Math-methods","text":"","code":"r1 <- rast(ncols=10, nrows=10) v <- runif(ncell(r1)) v[10:20] <- NA values(r1) <- v r2 <- rast(r1) values(r2) <- 1:ncell(r2) / ncell(r2) r <- c(r1, r2)  s <- sqrt(r) # same as  math(r, \"sqrt\") #> class       : SpatRaster  #> dimensions  : 10, 10, 2  (nrow, ncol, nlyr) #> resolution  : 36, 18  (x, y) #> extent      : -180, 180, -90, 90  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (CRS84) (OGC:CRS84)  #> source(s)   : memory #> names       :     lyr.1, lyr.1  #> min values  : 0.1074500,   0.1  #> max values  : 0.9975409,   1.0   round(s, 1) #> class       : SpatRaster  #> dimensions  : 10, 10, 2  (nrow, ncol, nlyr) #> resolution  : 36, 18  (x, y) #> extent      : -180, 180, -90, 90  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (CRS84) (OGC:CRS84)  #> source(s)   : memory #> names       : lyr.1, lyr.1  #> min values  :   0.1,   0.1  #> max values  :   1.0,   1.0   cumsum(r) #> class       : SpatRaster  #> dimensions  : 10, 10, 2  (nrow, ncol, nlyr) #> resolution  : 36, 18  (x, y) #> extent      : -180, 180, -90, 90  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (CRS84) (OGC:CRS84)  #> source(s)   : memory #> names       :     lyr.1,      lyr.1  #> min values  : 0.0115455, 0.07105275  #> max values  : 0.9950879, 1.90387150"},{"path":"https://rspatial.github.io/terra/reference/mem.html","id":null,"dir":"Reference","previous_headings":"","what":"Memory available and needed — mem","title":"Memory available and needed — mem","text":"mem_info prints amount RAM required available process SpatRaster. free_RAM returns amount RAM available","code":""},{"path":"https://rspatial.github.io/terra/reference/mem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Memory available and needed — mem","text":"","code":"mem_info(x, n=1, print=TRUE)  free_RAM()"},{"path":"https://rspatial.github.io/terra/reference/mem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Memory available and needed — mem","text":"x SpatRaster n positive integer. number copies x needed print logical. print memory info?","code":""},{"path":"https://rspatial.github.io/terra/reference/mem.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Memory available and needed — mem","text":"free_RAM returns amount available RAM kilobytes","code":""},{"path":"https://rspatial.github.io/terra/reference/mem.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Memory available and needed — mem","text":"","code":"mem_info(rast()) #>  #> ------------------------ #> Memory (GB)  #> ------------------------ #> check threshold : 1 (memmin) #> available       : 2.98 #> allowed (50%)   : 1.49 #> needed (n=1)    : 0 #> ------------------------ #> proc in memory  : TRUE #> nr chunks       : 1 #> ------------------------  free_RAM() #> [1] 3122496"},{"path":"https://rspatial.github.io/terra/reference/merge.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge SpatRasters, or merge a SpatVector with a data.frame — merge","title":"Merge SpatRasters, or merge a SpatVector with a data.frame — merge","text":"Merge multiple SpatRasters create new SpatRaster larger spatial extent. SpatRasters coordinate reference system. normally also spatial origin resolution, automatic resampling can done depending algorithm used (see argument algo). areas SpatRasters overlap, values SpatRaster first sequence arguments (SpatRasterCollection) retained (unless first=FALSE). also method merging SpatVector data.frame; , join data.frame attribute table SpatVector.","code":""},{"path":"https://rspatial.github.io/terra/reference/merge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge SpatRasters, or merge a SpatVector with a data.frame — merge","text":"","code":"# S4 method for class 'SpatRaster,SpatRaster' merge(x, y, ..., first=TRUE, na.rm=TRUE, algo=1, method=NULL,        filename=\"\", overwrite=FALSE, wopt=list())  # S4 method for class 'SpatRasterCollection,missing' merge(x, first=TRUE, na.rm=TRUE, algo=1, method=NULL, filename=\"\", ...)  # S4 method for class 'SpatVector,data.frame' merge(x, y, ...)"},{"path":"https://rspatial.github.io/terra/reference/merge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge SpatRasters, or merge a SpatVector with a data.frame — merge","text":"x SpatRaster, SpatRasterCollection, SpatVector y missing x SpatRasterCollection. SpatRaster x SpatRaster. data.frame x SpatVector ... x SpatRaster: additional objects class x. x SpatRasterCollection: options writing files writeRaster. x SpatVector, arguments merge first logical. TRUE, areas rasters overlap, first value used. Otherwise last value used na.rm logical. TRUE missing values ignored. used algo 1; two always ignore missing values algo integer. can use 1, 2 3 pick merge algorithm. algo 1 generally faster algo 2, may poorer file compression. Algo 1 resample input rasters (may slow ), algo 2 . can increase tolerance option effectively get nearest neighbor resampling , example, wopt=list(tolerance=.2) allows misalignment .2 times resolution first input raster effectively use nearest neighbor resampling. Algo 3 creates virtual raster (see vrt). quick can good approach merge raster used input next step analysis. allows amount misalignment (respond tolerance option). Otherwise speed similar algo 2 method character. interpolation method used resampling necessary (see argument algo). One \"nearest\", \"bilinear\", \"cubic\", \"cubicspline\", \"lanczos\", \"average\", \"mode\" resample. NULL, \"nearest\" used categorical rasters \"bilinear\" rasters filename character. Output filename overwrite logical. TRUE, filename overwritten wopt list named options writing files writeRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/merge.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge SpatRasters, or merge a SpatVector with a data.frame — merge","text":"SpatRaster SpatVector","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/merge.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Merge SpatRasters, or merge a SpatVector with a data.frame — merge","text":"","code":"x <- rast(xmin=-110, xmax=-80, ymin=40, ymax=70, res=1, vals=1) y <- rast(xmin=-85, xmax=-55, ymax=60, ymin=30, res=1, vals=2) z <- rast(xmin=-60, xmax=-30, ymax=50, ymin=20, res=1, vals=3)  m1 <- merge(x, y, z) m2 <- merge(z, y, x) m3 <- merge(y, x, z) # panel(c(m1, m2, m3))  # if you have many SpatRasters, it may be convenient # to make a SpatRasterCollection # s <- sprc(list(x, y, z)) s <- sprc(x, y, z)  sm1 <- merge(s, algo=1, first=FALSE) sm2 <- merge(s, algo=2, first=FALSE) #sm3 <- merge(s, algo=3, first=FALSE)  ## SpatVector with data.frame f <- system.file(\"ex/lux.shp\", package=\"terra\") p <- vect(f) dfr <- data.frame(District=p$NAME_1, Canton=p$NAME_2, Value=round(runif(length(p), 100, 1000))) dfr <- dfr[1:5, ] pm <- merge(p, dfr, all.x=TRUE, by.x=c('NAME_1', 'NAME_2'), by.y=c('District', 'Canton')) pm #>  class       : SpatVector  #>  geometry    : polygons  #>  dimensions  : 12, 7  (geometries, attributes) #>  extent      : 5.74414, 6.528252, 49.44781, 50.18162  (xmin, xmax, ymin, ymax) #>  coord. ref. : lon/lat WGS 84 (EPSG:4326)  #>  names       :   NAME_1   NAME_2  ID_1  ID_2  AREA       POP Value #>  type        :    <chr>    <chr> <num> <num> <num>     <num> <num> #>  values      : Diekirch Clervaux     1     1   312 1.808e+04   433 #>                Diekirch Diekirch     1     2   218 3.254e+04   961 #>                Diekirch  Redange     1     3   259 1.866e+04   922 values(pm) #>          NAME_1           NAME_2 ID_1 ID_2 AREA    POP Value #> 1      Diekirch         Clervaux    1    1  312  18081   433 #> 2      Diekirch         Diekirch    1    2  218  32543   961 #> 3      Diekirch          Redange    1    3  259  18664   922 #> 4      Diekirch          Vianden    1    4   76   5163   841 #> 5      Diekirch            Wiltz    1    5  263  16735   388 #> 6  Grevenmacher       Echternach    2    6  188  18899    NA #> 7  Grevenmacher           Remich    2    7  129  22366    NA #> 8  Grevenmacher     Grevenmacher    2   12  210  29828    NA #> 9    Luxembourg         Capellen    3    8  185  48187    NA #> 10   Luxembourg Esch-sur-Alzette    3    9  251 176820    NA #> 11   Luxembourg       Luxembourg    3   10  237 182607    NA #> 12   Luxembourg           Mersch    3   11  233  32112    NA"},{"path":"https://rspatial.github.io/terra/reference/mergeTime.html","id":null,"dir":"Reference","previous_headings":"","what":"merge SpatRasters by timelines to create a single timeseries — mergeTime","title":"merge SpatRasters by timelines to create a single timeseries — mergeTime","text":"Combine SpatRasters partly overlapping time-stamps create single time series. overlap SpatRasters point using function (use c instead). Also note time gaps filled. can use fillTime .","code":""},{"path":"https://rspatial.github.io/terra/reference/mergeTime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"merge SpatRasters by timelines to create a single timeseries — mergeTime","text":"","code":"# S4 method for class 'SpatRasterDataset' mergeTime(x, fun=mean, filename=\"\", ...)"},{"path":"https://rspatial.github.io/terra/reference/mergeTime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"merge SpatRasters by timelines to create a single timeseries — mergeTime","text":"x SpatRasterDataset fun function reduces vector single number, mean min filename character. Output filename ... list named options writing files writeRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/mergeTime.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"merge SpatRasters by timelines to create a single timeseries — mergeTime","text":"SpatRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/mergeTime.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"merge SpatRasters by timelines to create a single timeseries — mergeTime","text":"","code":"r <- rast(system.file(\"ex/logo.tif\", package=\"terra\"))    s1 <- c(r, r) time(s1) <- as.Date(\"2001-01-01\") + 0:5 s1 <- s1/10 time(s1) <- as.Date(\"2001-01-07\") + 0:5 s2 <- s1*10 time(s2) <- as.Date(\"2001-01-05\") + 0:5 x <- sds(s1, s1, s2)  m <- mergeTime(x, mean)"},{"path":"https://rspatial.github.io/terra/reference/meta.html","id":null,"dir":"Reference","previous_headings":"","what":"meta — meta","title":"meta — meta","text":"Get metadata associated sources layers SpatRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/meta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"meta — meta","text":"","code":"# S4 method for class 'SpatRaster' meta(x, layers=FALSE)"},{"path":"https://rspatial.github.io/terra/reference/meta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"meta — meta","text":"x SpatRaster layers logical. layer level metadata returned?","code":""},{"path":"https://rspatial.github.io/terra/reference/meta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"meta — meta","text":"list","code":""},{"path":"https://rspatial.github.io/terra/reference/metags.html","id":null,"dir":"Reference","previous_headings":"","what":"Set or get metadata — metags","title":"Set or get metadata — metags","text":"can set arbitrary metadata (layers ) SpatRaster using \"name=value\" tags. wring SpatRaster GTiff file, tags written file.","code":""},{"path":"https://rspatial.github.io/terra/reference/metags.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set or get metadata — metags","text":"","code":"# S4 method for class 'SpatRaster' metags(x, layer = NULL) <- value  # S4 method for class 'SpatRaster' metags(x, layer=NULL, name=NULL)  # S4 method for class 'SpatRasterDataset' metags(x, dataset = NULL) <- value  # S4 method for class 'SpatRasterDataset' metags(x, dataset=NULL, name=NULL)"},{"path":"https://rspatial.github.io/terra/reference/metags.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set or get metadata — metags","text":"x SpatRaster layer NULL, positive integer character. value NULL, tags assigned returned SpatRaster. Otherwise layer number(s) name(s) name character value character \"name=value\" two-column matrix dataset NULL, positive integer character. value NULL, tags assigned returned SpatRasterDataset/SpatRasterCollection. Otherwise datset number(s) name(s)","code":""},{"path":"https://rspatial.github.io/terra/reference/metags.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set or get metadata — metags","text":"SpatRaster (metags<-), named character (metags)","code":""},{"path":"https://rspatial.github.io/terra/reference/metags.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set or get metadata — metags","text":"","code":"r <- rast(ncol=5, nrow=5) m <- cbind(c(\"one\", \"two\", \"three\"), c(\"ABC\", \"123\", \"hello\")) metags(r) <- m metags(r) #>     one   three     two  #>   \"ABC\" \"hello\"   \"123\"   metags(r) <- c(\"another_tag=another_value\", \"one more=this value\") metags(r) #>     another_tag             one        one more           three             two  #> \"another_value\"           \"ABC\"    \"this value\"         \"hello\"           \"123\"   metags(r) <- c(another_tag=\"44\", `one more`=\"that value\") metags(r) #>  another_tag          one     one more        three          two  #>         \"44\"        \"ABC\" \"that value\"      \"hello\"        \"123\"    metags(r, name=\"two\") #>   two  #> \"123\"   # remove a tag metags(r) <- cbind(\"one\", \"\") metags(r) <- \"two=\" metags(r) #>  another_tag     one more        three  #>         \"44\" \"that value\"      \"hello\"   # remove all tags metags(r) <- NULL metags(r) #> named character(0)"},{"path":"https://rspatial.github.io/terra/reference/minmax.html","id":null,"dir":"Reference","previous_headings":"","what":"Get or compute the minimum and maximum cell values — extremes","title":"Get or compute the minimum and maximum cell values — extremes","text":"minimum maximum value SpatRaster returned computed (file disk necessary) stored object.","code":""},{"path":"https://rspatial.github.io/terra/reference/minmax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get or compute the minimum and maximum cell values — extremes","text":"","code":"# S4 method for class 'SpatRaster' minmax(x, compute=FALSE) # S4 method for class 'SpatRaster' hasMinMax(x) # S4 method for class 'SpatRaster' setMinMax(x, force=FALSE)"},{"path":"https://rspatial.github.io/terra/reference/minmax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get or compute the minimum and maximum cell values — extremes","text":"x SpatRaster compute logical. TRUE min max values computed available force logical. TRUE min max values recomputed even already available","code":""},{"path":"https://rspatial.github.io/terra/reference/minmax.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get or compute the minimum and maximum cell values — extremes","text":"minmax: numeric matrix minimum maximum cell values layer hasMinMax: logical indicating whether min max values available. setMinMax: nothing. Used side-effect computing minimum maximum values SpatRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/minmax.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get or compute the minimum and maximum cell values — extremes","text":"","code":"r <- rast(system.file(\"ex/elev.tif\", package=\"terra\")) minmax(r) #>     elevation #> min       141 #> max       547"},{"path":"https://rspatial.github.io/terra/reference/modal.html","id":null,"dir":"Reference","previous_headings":"","what":"modal value — modal","title":"modal value — modal","text":"Compute mode cell across layers SpatRaster. mode, modal value, frequent value set values.","code":""},{"path":"https://rspatial.github.io/terra/reference/modal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"modal value — modal","text":"","code":"# S4 method for class 'SpatRaster' modal(x, ..., ties=\"first\", na.rm=FALSE, filename=\"\", overwrite=FALSE, wopt=list())"},{"path":"https://rspatial.github.io/terra/reference/modal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"modal value — modal","text":"x SpatRaster ... additional argument type x numeric ties character. Indicates treat ties. Either \"random\", \"lowest\", \"highest\", \"first\", \"NA\" na.rm logical. TRUE, NA values ignored. FALSE, NA returned x NA values filename character. Output filename overwrite logical. TRUE, filename overwritten wopt list named options writing files writeRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/modal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"modal value — modal","text":"SpatRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/modal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"modal value — modal","text":"","code":"r <- rast(system.file(\"ex/logo.tif\", package=\"terra\"))    r <- c(r/2, r, r*2) m <- modal(r)"},{"path":"https://rspatial.github.io/terra/reference/mosaic.html","id":null,"dir":"Reference","previous_headings":"","what":"mosaic SpatRasters — mosaic","title":"mosaic SpatRasters — mosaic","text":"Combine adjacent (partly) overlapping SpatRasters form single new SpatRaster. Values overlapping cells averaged (default) can computed another function. SpatRasters must origin spatial resolution. method similar simpler, much faster, merge method.","code":""},{"path":"https://rspatial.github.io/terra/reference/mosaic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mosaic SpatRasters — mosaic","text":"","code":"# S4 method for class 'SpatRaster,SpatRaster' mosaic(x, y, ..., fun=\"mean\", filename=\"\", overwrite=FALSE, wopt=list())  # S4 method for class 'SpatRasterCollection,missing' mosaic(x, fun=\"mean\", filename=\"\", ...)"},{"path":"https://rspatial.github.io/terra/reference/mosaic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"mosaic SpatRasters — mosaic","text":"x SpatRaster y object class x ... additional SpatRasters fun character. One \"mean\", \"median\", \"min\", \"max\", \"modal\", \"sum\", \"first\", \"last\" filename character. Output filename overwrite logical. TRUE, filename overwritten wopt list named options writing files writeRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/mosaic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"mosaic SpatRasters — mosaic","text":"SpatRaster","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/mosaic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"mosaic SpatRasters — mosaic","text":"","code":"x <- rast(xmin=-110, xmax=-60, ymin=40, ymax=70, res=1, vals=1) y <- rast(xmin=-95, xmax=-45, ymax=60, ymin=30, res=1, vals=2) z <- rast(xmin=-80, xmax=-30, ymax=50, ymin=20, res=1, vals=3)  m1 <- mosaic(x, y, z)  m2 <- mosaic(z, y, x)  # with many SpatRasters, make a SpatRasterCollection from a list rlist <- list(x, y, z) rsrc <- sprc(rlist)  m <- mosaic(rsrc)"},{"path":"https://rspatial.github.io/terra/reference/na.omit.html","id":null,"dir":"Reference","previous_headings":"","what":"Find and remove geometries that are NA — na.omit","title":"Find and remove geometries that are NA — na.omit","text":"Find geometries NA; remove geometries /records NA.","code":""},{"path":"https://rspatial.github.io/terra/reference/na.omit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find and remove geometries that are NA — na.omit","text":"","code":"# S4 method for class 'SpatVector' is.na(x)  # S4 method for class 'SpatVector' na.omit(object, field=NA, geom=FALSE)"},{"path":"https://rspatial.github.io/terra/reference/na.omit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find and remove geometries that are NA — na.omit","text":"x SpatVector object SpatVector field character NA. NA, missing values attributes ignored. values either one field (variable) names, \"\" consider fields geom logical. TRUE empty geometries removed","code":""},{"path":"https://rspatial.github.io/terra/reference/na.omit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find and remove geometries that are NA — na.omit","text":"SpatVector","code":""},{"path":"https://rspatial.github.io/terra/reference/na.omit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find and remove geometries that are NA — na.omit","text":"","code":"f <- system.file(\"ex/lux.shp\", package=\"terra\") v <- vect(f) v$test <- c(1,2,NA) nrow(v) #> [1] 12 x <- na.omit(v, \"test\") nrow(x) #> [1] 8"},{"path":"https://rspatial.github.io/terra/reference/names.html","id":null,"dir":"Reference","previous_headings":"","what":"Names of Spat* objects — names","title":"Names of Spat* objects — names","text":"Get set names layers SpatRaster attributes SpatVector. See set.names -place setting names.","code":""},{"path":"https://rspatial.github.io/terra/reference/names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Names of Spat* objects — names","text":"","code":"# S4 method for class 'SpatRaster' names(x)  # S4 method for class 'SpatRaster' names(x) <- value  # S4 method for class 'SpatRasterDataset' names(x)  # S4 method for class 'SpatRasterDataset' names(x) <- value  # S4 method for class 'SpatVector' names(x)  # S4 method for class 'SpatVector' names(x) <- value"},{"path":"https://rspatial.github.io/terra/reference/names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Names of Spat* objects — names","text":"x SpatRaster, SpatRasterDataset, SpatVector value character (vector)","code":""},{"path":"https://rspatial.github.io/terra/reference/names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Names of Spat* objects — names","text":"character","code":""},{"path":"https://rspatial.github.io/terra/reference/names.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Names of Spat* objects — names","text":"terra enforces neither unique valid names. See make.unique create unique names make.names make syntactically valid names.","code":""},{"path":"https://rspatial.github.io/terra/reference/names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Names of Spat* objects — names","text":"","code":"s <- rast(ncols=5, nrows=5, nlyrs=3) nlyr(s) #> [1] 3 names(s) #> [1] \"lyr.1\" \"lyr.2\" \"lyr.3\" names(s) <- c(\"a\", \"b\", \"c\") names(s) #> [1] \"a\" \"b\" \"c\"  # SpatVector names f <- system.file(\"ex/lux.shp\", package=\"terra\") v <- vect(f) names(v) #> [1] \"ID_1\"   \"NAME_1\" \"ID_2\"   \"NAME_2\" \"AREA\"   \"POP\"    names(v) <- paste0(substr(names(v), 1, 2), \"_\", 1:ncol(v)) names(v) #> [1] \"ID_1\" \"NA_2\" \"ID_3\" \"NA_4\" \"AR_5\" \"PO_6\""},{"path":"https://rspatial.github.io/terra/reference/nearby.html","id":null,"dir":"Reference","previous_headings":"","what":"nearby geometries — nearest","title":"nearby geometries — nearest","text":"Identify geometries near . Either get index geometries within certain distance, k nearest neighbors, (nearest) get nearest points two geometries.","code":""},{"path":"https://rspatial.github.io/terra/reference/nearby.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"nearby geometries — nearest","text":"","code":"# S4 method for class 'SpatVector' nearby(x, y=NULL, distance=0, k=1, centroids=TRUE, symmetrical=TRUE, method=\"geo\")  # S4 method for class 'SpatVector' nearest(x, y, pairs=FALSE, centroids=TRUE, lines=FALSE, method=\"geo\")"},{"path":"https://rspatial.github.io/terra/reference/nearby.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"nearby geometries — nearest","text":"x SpatVector y SpatVector NULL distance numeric. maximum distance k positive integer. number neighbors. Ignored distance > 0 centroids logical. centroids polygons used? symmetrical logical. TRUE, near pair included . , geometry 1 near geometry 3, implied nearness 3 1 reported. Ignored k neighbors returned method character. One \"geo\", \"haversine\", \"cosine\". \"geo\" precise slower method Karney (2003) used. two methods faster less precise pairs logical. TRUE pairwise nearest points returned (relevant using least one SpatVector lines polygons lines logical. TRUE lines nearest points instead (nearest) points","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/nearby.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"nearby geometries — nearest","text":"matrix","code":""},{"path":"https://rspatial.github.io/terra/reference/nearby.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"nearby geometries — nearest","text":"","code":"f <- system.file(\"ex/lux.shp\", package=\"terra\") v <- vect(f) nearby(v, distance=12000) #>      from to #> [1,]    2  4 #> [2,]    6  8"},{"path":"https://rspatial.github.io/terra/reference/normalize.longitude.html","id":null,"dir":"Reference","previous_headings":"","what":"normalize vector data that crosses the dateline — normalize.longitude","title":"normalize vector data that crosses the dateline — normalize.longitude","text":"Normalize longitude geometries, move outside -180 180 degrees range.","code":""},{"path":"https://rspatial.github.io/terra/reference/normalize.longitude.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"normalize vector data that crosses the dateline — normalize.longitude","text":"","code":"# S4 method for class 'SpatVector' normalize.longitude(x)"},{"path":"https://rspatial.github.io/terra/reference/normalize.longitude.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"normalize vector data that crosses the dateline — normalize.longitude","text":"x SpatVector","code":""},{"path":"https://rspatial.github.io/terra/reference/normalize.longitude.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"normalize vector data that crosses the dateline — normalize.longitude","text":"SpatVector","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/normalize.longitude.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"normalize vector data that crosses the dateline — normalize.longitude","text":"","code":"p <- vect(\"POLYGON ((120 10, 230 75, 230 -75, 120 10))\") normalize.longitude(p) #>  class       : SpatVector  #>  geometry    : polygons  #>  dimensions  : 1, 0  (geometries, attributes) #>  extent      : -180, 180, -75, 75  (xmin, xmax, ymin, ymax) #>  coord. ref. :"},{"path":"https://rspatial.github.io/terra/reference/north.html","id":null,"dir":"Reference","previous_headings":"","what":"North arrow — north","title":"North arrow — north","text":"Add (North) arrow map","code":""},{"path":"https://rspatial.github.io/terra/reference/north.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"North arrow — north","text":"","code":"north(xy=NULL, type=1, label=\"N\", angle=0, d, head=0.1, xpd=TRUE, ...)"},{"path":"https://rspatial.github.io/terra/reference/north.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"North arrow — north","text":"xy numeric. x y coordinate place arrow. can also one following character values: \"bottomleft\", \"bottom\", \"bottomright\", topleft\", \"top\", \"topright\", \"left\", \"right\", NULL type integer 1 12, character (unicode) representation right pointing arrow \"\\u27A9\" label character, printed near arrow angle numeric. angle arrow degrees d numeric. Distance covered arrow plot coordinates. applies type=1 head numeric. size arrow \"head\", type=1 xpd logical. TRUE, scale bar arrow can outside plot area ... graphical arguments passed methods","code":""},{"path":"https://rspatial.github.io/terra/reference/north.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"North arrow — north","text":"none","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/north.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"North arrow — north","text":"","code":"f <- system.file(\"ex/meuse.tif\", package=\"terra\") r <- rast(f) plot(r) north() north(c(178550, 332500), d=250)   if (FALSE) { # \\dontrun{ f <- system.file(\"ex/elev.tif\", package=\"terra\") r <- rast(f) plot(r, type=\"interval\") sbar(15, c(6.3, 50), type=\"bar\", below=\"km\", label=c(0,7.5,15), cex=.8) north(type=3, cex=.8) north(xy=c(6.7, 49.9), type=2, angle=45, label=\"NE\") north(xy=c(6.6, 49.7), type=5, cex=1.25) north(xy=c(5.5, 49.6), type=9) north(d=.05, xy=c(5.5, 50), angle=180, label=\"S\", lwd=2, col=\"blue\")   ## all arrows r <- rast(res=10) values(r) <- 1 plot(r, col=\"white\", axes=FALSE, legend=FALSE, mar=c(0,0,0,0), reset=TRUE) for (i in 1:12) {   x = -200+i*30   north(xy=cbind(x,30), type=i)   text(x, -20, i, xpd=TRUE) }  } # }"},{"path":"https://rspatial.github.io/terra/reference/not.na.html","id":null,"dir":"Reference","previous_headings":"","what":"is not NA — not.na","title":"is not NA — not.na","text":"Shortcut method avoid two-step !.na(x)","code":""},{"path":"https://rspatial.github.io/terra/reference/not.na.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"is not NA — not.na","text":"","code":"# S4 method for class 'SpatRaster' not.na(x, falseNA=FALSE, filename=\"\", ...)"},{"path":"https://rspatial.github.io/terra/reference/not.na.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"is not NA — not.na","text":"x SpatRaster falseNA logical. TRUE, output cell values either TRUE, cells NA x, NA cells NA x. Otherwise, output values either TRUE FALSE filename character. Output filename ... additional arguments writing files writeRaster","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/not.na.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"is not NA — not.na","text":"SpatRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/not.na.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"is not NA — not.na","text":"","code":"r <- rast(ncols=5, nrows=5, vals=1, ext=c(0,1,0,1)) r[10:20] <- NA x <- not.na(r) y <- not.na(r, falseNA=TRUE) unique(values(c(x, y))) #>      lyr.1 lyr.1 #> [1,]  TRUE  TRUE #> [2,] FALSE    NA"},{"path":"https://rspatial.github.io/terra/reference/nseg.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of segments — nseg","title":"Number of segments — nseg","text":"Count number segements SpatVector lines polygons","code":""},{"path":"https://rspatial.github.io/terra/reference/nseg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of segments — nseg","text":"","code":"# S4 method for class 'SpatVector' nseg(x)"},{"path":"https://rspatial.github.io/terra/reference/nseg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of segments — nseg","text":"x SpatVector","code":""},{"path":"https://rspatial.github.io/terra/reference/nseg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number of segments — nseg","text":"numeric","code":""},{"path":"https://rspatial.github.io/terra/reference/nseg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Number of segments — nseg","text":"","code":"f <- system.file(\"ex/lux.shp\", package=\"terra\") v <- vect(f) nseg(v) #>  [1] 330 441 308 165 363 249 195 296 297 442 538 359"},{"path":"https://rspatial.github.io/terra/reference/origin.html","id":null,"dir":"Reference","previous_headings":"","what":"Origin — origin","title":"Origin — origin","text":"Get set coordinates point origin SpatRaster. point closest (0, 0) get moved towards point steps x y resolution.","code":""},{"path":"https://rspatial.github.io/terra/reference/origin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Origin — origin","text":"","code":"# S4 method for class 'SpatRaster' origin(x)  # S4 method for class 'SpatRaster' origin(x) <- value"},{"path":"https://rspatial.github.io/terra/reference/origin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Origin — origin","text":"x SpatRaster value numeric vector length 1 2","code":""},{"path":"https://rspatial.github.io/terra/reference/origin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Origin — origin","text":"vector two numbers (x y coordinates)","code":""},{"path":"https://rspatial.github.io/terra/reference/origin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Origin — origin","text":"","code":"r <- rast(xmin=-0.5, xmax = 9.5, ncols=10) origin(r) #> [1] 0.5 0.0 origin(r) <- c(0,0) r #> class       : SpatRaster  #> dimensions  : 180, 10, 1  (nrow, ncol, nlyr) #> resolution  : 1, 1  (x, y) #> extent      : 0, 10, -90, 90  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (CRS84) (OGC:CRS84)"},{"path":"https://rspatial.github.io/terra/reference/pairs.html","id":null,"dir":"Reference","previous_headings":"","what":"Pairs plot (matrix of scatterplots) — pairs","title":"Pairs plot (matrix of scatterplots) — pairs","text":"Pair plots layers SpatRaster. wrapper around graphics function pairs.","code":""},{"path":"https://rspatial.github.io/terra/reference/pairs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pairs plot (matrix of scatterplots) — pairs","text":"","code":"# S4 method for class 'SpatRaster' pairs(x, hist=TRUE, cor=TRUE, use=\"pairwise.complete.obs\", maxcells=100000, ...)"},{"path":"https://rspatial.github.io/terra/reference/pairs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pairs plot (matrix of scatterplots) — pairs","text":"x SpatRaster hist logical. TRUE histogram values shown diagonal cor logical. TRUE correlation coefficient shown upper panels use argument passed cor function maxcells integer. Number pixels sample layer large SpatRaster ... additional arguments (graphical parameters)","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/pairs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pairs plot (matrix of scatterplots) — pairs","text":"","code":"r <-rast(system.file(\"ex/elev.tif\", package=\"terra\")) s <- c(r, 1/r, sqrt(r)) names(s) <- c(\"elevation\", \"inverse\", \"sqrt\")  pairs(s)   # to make indvidual histograms: hist(r)  # or scatter plots: plot(s[[1]], s[[2]])"},{"path":"https://rspatial.github.io/terra/reference/panel.html","id":null,"dir":"Reference","previous_headings":"","what":"Map panel — panel","title":"Map panel — panel","text":"Show multiple maps share single legend.","code":""},{"path":"https://rspatial.github.io/terra/reference/panel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map panel — panel","text":"","code":"# S4 method for class 'SpatRaster' panel(x, main, loc.main=\"topleft\", nc, nr, maxnl=16,    maxcell=500000, box=FALSE, pax=list(), plg=list(), range=NULL, halo=TRUE,    type=NULL, ...)"},{"path":"https://rspatial.github.io/terra/reference/panel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map panel — panel","text":"x SpatRaster main character. Main plot titles (one layer plotted). can use arguments cex.main, font.main, col.main change appearance loc.main numeric character set location main title. Either two coordinates, character value \"topleft\") nc positive integer. Optional. number columns divide plotting device (plotting multiple layers) nr positive integer. Optional. number rows divide plotting device (plotting multiple layers) maxnl positive integer. Maximum number layers plot (multi-layer object) maxcell positive integer. Maximum number cells use plot box logical. box drawn around map? plg see plot pax see plot range numeric. minimum maximum values used continuous legend halo logical. Use halo around main (title)? type character. Type map/legend. One \"continuous\", \"classes\", \"interval\". specified, type chosen based data ... arguments passed plot(\"SpatRaster\", \"numeric\") additional graphical arguments","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/panel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map panel — panel","text":"","code":"r <- rast(system.file(\"ex/elev.tif\", package=\"terra\")) v <- vect(system.file(\"ex/lux.shp\", package=\"terra\")) x <- c(r, r/2, r*2, r) names(x) <- paste0(\"(\", LETTERS[1:4], \")\") panel(x)  panel(x, fun=\\()lines(v), loc.main=\"topright\")"},{"path":"https://rspatial.github.io/terra/reference/patches.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect patches (clumps) of cells — patches","title":"Detect patches (clumps) of cells — patches","text":"Detect patches (clumps). Patches groups cells surrounded cells NA. Set zeroAsNA TRUE also identify patches separated cells values zero.","code":""},{"path":"https://rspatial.github.io/terra/reference/patches.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect patches (clumps) of cells — patches","text":"","code":"# S4 method for class 'SpatRaster' patches(x, directions=4, values=FALSE, zeroAsNA=FALSE, allowGaps=TRUE, filename=\"\", ...)"},{"path":"https://rspatial.github.io/terra/reference/patches.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect patches (clumps) of cells — patches","text":"x SpatRaster directions integer indicating cells considered adjacent. 8 (Queen's case) 4 (Rook's case) values logical. TRUE use cell values distinguish patches. FALSE, cells NA considered identical zeroAsNA logical. TRUE treat cells zero NA. Ignored byvalue=TRUE allowGaps logical. TRUE may gaps patch IDs (e.g. may patch IDs 1, 2, 3 5, 4). FALSE, numbers recoded 1 number patches (4 example) filename character. Output filename ... options writing files writeRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/patches.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect patches (clumps) of cells — patches","text":"SpatRaster. Cell values patch numbers","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/patches.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect patches (clumps) of cells — patches","text":"","code":"r <- rast(nrows=18, ncols=36, xmin=0) r[1:2, 5:8] <- 1 r[5:8, 2:6] <- 1 r[7:12, 22:36] <- 1 r[15:16, 18:29] <- 1 p <- patches(r)  # zero as background instead of NA r <- rast(nrows=10, ncols=10, xmin=0, vals=0) r[3, 3] <- 10 r[4, 4] <- 10 r[5, 5:8] <- 12 r[6, 6:9] <- 12  # treat zeros as NA  p4 <- patches(r, zeroAsNA=TRUE) p8 <- patches(r, 8, zeroAsNA=TRUE)  ### patches for different values p <- patches(r, values=TRUE)  ### patch ID values are not guaranteed to be consecutive r <- rast(nrows=5, ncols=10, xmin=0) set.seed(0) values(r)<- round(runif(ncell(r))*0.7) rp <- patches(r, directions=8, zeroAsNA=TRUE)  plot(rp, type=\"classes\"); text(rp)   ## unless you set allowGaps=FALSE rp <- patches(r, directions=8, zeroAsNA=TRUE, allowGaps=FALSE)  plot(rp, type=\"classes\"); text(rp)   ### use zonal to remove small patches  f <- system.file(\"ex/elev.tif\", package=\"terra\") r <- rast(f) x <- classify(r, cbind(-Inf, 400, NA)) y <- patches(x) # remove patches smaller than 100 ha rz <- zonal(cellSize(y, unit=\"ha\"), y, sum, as.raster=TRUE) s <- ifel(rz < 250, NA, y)"},{"path":"https://rspatial.github.io/terra/reference/perim.html","id":null,"dir":"Reference","previous_headings":"","what":"Perimeter or length — perim","title":"Perimeter or length — perim","text":"method returns length lines perimeter polygons. coordinate reference system longitude/latitude, may get accurate results first transforming data longitude/latitude project","code":""},{"path":"https://rspatial.github.io/terra/reference/perim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perimeter or length — perim","text":"","code":"# S4 method for class 'SpatVector' perim(x)"},{"path":"https://rspatial.github.io/terra/reference/perim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perimeter or length — perim","text":"x SpatVector","code":""},{"path":"https://rspatial.github.io/terra/reference/perim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perimeter or length — perim","text":"numeric (m)","code":""},{"path":"https://rspatial.github.io/terra/reference/perim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perimeter or length — perim","text":"","code":"f <- system.file(\"ex/lux.shp\", package=\"terra\") v <- vect(f) perim(v) #>  [1] 117100.12  93477.28  84502.45  44919.14  85032.61  74708.05  57991.42 #>  [8]  81203.93  74443.82  95564.74  80618.76  70810.67"},{"path":"https://rspatial.github.io/terra/reference/persp.html","id":null,"dir":"Reference","previous_headings":"","what":"Perspective plot — persp","title":"Perspective plot — persp","text":"Perspective plot SpatRaster. implementation generic function graphics package.","code":""},{"path":"https://rspatial.github.io/terra/reference/persp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perspective plot — persp","text":"","code":"# S4 method for class 'SpatRaster' persp(x, maxcells=100000, ...)"},{"path":"https://rspatial.github.io/terra/reference/persp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perspective plot — persp","text":"x SpatRaster. first layer used maxcells integer > 0. Maximum number cells use plot. maxpixels < ncell(x), spatSample(method=\"regular\") used plotting ... argument can passed persp (graphics package)","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/persp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perspective plot — persp","text":"","code":"r <- rast(system.file(\"ex/elev.tif\", package=\"terra\")) persp(r)"},{"path":"https://rspatial.github.io/terra/reference/pitfinder.html","id":null,"dir":"Reference","previous_headings":"","what":"Pit Finder in a Flow Dir SpatRaster for Watershed Extraction — pitfinder","title":"Pit Finder in a Flow Dir SpatRaster for Watershed Extraction — pitfinder","text":"find pits (depressions outlet )","code":""},{"path":"https://rspatial.github.io/terra/reference/pitfinder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pit Finder in a Flow Dir SpatRaster for Watershed Extraction — pitfinder","text":"","code":"# S4 method for class 'SpatRaster' pitfinder(x,filename=\"\",...)"},{"path":"https://rspatial.github.io/terra/reference/pitfinder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pit Finder in a Flow Dir SpatRaster for Watershed Extraction — pitfinder","text":"x SpatRaster wih flow-direcion. See terrain filename character. Output filename ... additional arguments writing files writeRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/pitfinder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pit Finder in a Flow Dir SpatRaster for Watershed Extraction — pitfinder","text":"SpatRaster-class (raster) map containing value 1 pits  value 0 elsewhere.","code":""},{"path":"https://rspatial.github.io/terra/reference/pitfinder.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Pit Finder in a Flow Dir SpatRaster for Watershed Extraction — pitfinder","text":"Emanuele Cordano","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/pitfinder.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pit Finder in a Flow Dir SpatRaster for Watershed Extraction — pitfinder","text":"","code":"## Creation of a Digital Elevation Model   elev <- array(NA,c(9,9)) dx <- 1 dy <- 1  for (r in 1:nrow(elev)) {   x <- (r-5)*dx   for (c in 1:ncol(elev)) {          y <- (c-5)*dy     elev[r,c] <- 10+5*(x^2+y^2)     }   }     elev <- cbind(elev,elev,elev,elev)  elev <- rbind(elev,elev,elev,elev)  elev <- rast(elev)  ## Flow Directions  flowdir<- terrain(elev,v=\"flowdir\") t(array(flowdir[],rev(dim(flowdir)[1:2]))) #>       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] #>  [1,]    2    2    2    4    4    4    8    8    8     2     2     2     4 #>  [2,]    2    2    2    4    4    4    8    8    8     2     2     2     4 #>  [3,]    2    2    2    4    4    4    8    8    8     2     2     2     4 #>  [4,]    1    1    1    2    4    8   16   16   16     1     1     1     2 #>  [5,]    1    1    1    1    0   16   16   16   16     1     1     1     1 #>  [6,]    1    1    1  128   64   32   16   16   16     1     1     1   128 #>  [7,]  128  128  128   64   64   64   32   32   32   128   128   128    64 #>  [8,]  128  128  128   64   64   64   32   32   32   128   128   128    64 #>  [9,]  128  128  128   64   64   64   32   32   32   128   128   128    64 #> [10,]    2    2    2    4    4    4    8    8    8     2     2     2     4 #> [11,]    2    2    2    4    4    4    8    8    8     2     2     2     4 #> [12,]    2    2    2    4    4    4    8    8    8     2     2     2     4 #> [13,]    1    1    1    2    4    8   16   16   16     1     1     1     2 #> [14,]    1    1    1    1    0   16   16   16   16     1     1     1     1 #> [15,]    1    1    1  128   64   32   16   16   16     1     1     1   128 #> [16,]  128  128  128   64   64   64   32   32   32   128   128   128    64 #> [17,]  128  128  128   64   64   64   32   32   32   128   128   128    64 #> [18,]  128  128  128   64   64   64   32   32   32   128   128   128    64 #> [19,]    2    2    2    4    4    4    8    8    8     2     2     2     4 #> [20,]    2    2    2    4    4    4    8    8    8     2     2     2     4 #> [21,]    2    2    2    4    4    4    8    8    8     2     2     2     4 #> [22,]    1    1    1    2    4    8   16   16   16     1     1     1     2 #> [23,]    1    1    1    1    0   16   16   16   16     1     1     1     1 #> [24,]    1    1    1  128   64   32   16   16   16     1     1     1   128 #> [25,]  128  128  128   64   64   64   32   32   32   128   128   128    64 #> [26,]  128  128  128   64   64   64   32   32   32   128   128   128    64 #> [27,]  128  128  128   64   64   64   32   32   32   128   128   128    64 #> [28,]    2    2    2    4    4    4    8    8    8     2     2     2     4 #> [29,]    2    2    2    4    4    4    8    8    8     2     2     2     4 #> [30,]    2    2    2    4    4    4    8    8    8     2     2     2     4 #> [31,]    1    1    1    2    4    8   16   16   16     1     1     1     2 #> [32,]    1    1    1    1    0   16   16   16   16     1     1     1     1 #> [33,]    1    1    1  128   64   32   16   16   16     1     1     1   128 #> [34,]  128  128  128   64   64   64   32   32   32   128   128   128    64 #> [35,]  128  128  128   64   64   64   32   32   32   128   128   128    64 #> [36,]  128  128  128   64   64   64   32   32   32   128   128   128    64 #>       [,14] [,15] [,16] [,17] [,18] [,19] [,20] [,21] [,22] [,23] [,24] [,25] #>  [1,]     4     4     8     8     8     2     2     2     4     4     4     8 #>  [2,]     4     4     8     8     8     2     2     2     4     4     4     8 #>  [3,]     4     4     8     8     8     2     2     2     4     4     4     8 #>  [4,]     4     8    16    16    16     1     1     1     2     4     8    16 #>  [5,]     0    16    16    16    16     1     1     1     1     0    16    16 #>  [6,]    64    32    16    16    16     1     1     1   128    64    32    16 #>  [7,]    64    64    32    32    32   128   128   128    64    64    64    32 #>  [8,]    64    64    32    32    32   128   128   128    64    64    64    32 #>  [9,]    64    64    32    32    32   128   128   128    64    64    64    32 #> [10,]     4     4     8     8     8     2     2     2     4     4     4     8 #> [11,]     4     4     8     8     8     2     2     2     4     4     4     8 #> [12,]     4     4     8     8     8     2     2     2     4     4     4     8 #> [13,]     4     8    16    16    16     1     1     1     2     4     8    16 #> [14,]     0    16    16    16    16     1     1     1     1     0    16    16 #> [15,]    64    32    16    16    16     1     1     1   128    64    32    16 #> [16,]    64    64    32    32    32   128   128   128    64    64    64    32 #> [17,]    64    64    32    32    32   128   128   128    64    64    64    32 #> [18,]    64    64    32    32    32   128   128   128    64    64    64    32 #> [19,]     4     4     8     8     8     2     2     2     4     4     4     8 #> [20,]     4     4     8     8     8     2     2     2     4     4     4     8 #> [21,]     4     4     8     8     8     2     2     2     4     4     4     8 #> [22,]     4     8    16    16    16     1     1     1     2     4     8    16 #> [23,]     0    16    16    16    16     1     1     1     1     0    16    16 #> [24,]    64    32    16    16    16     1     1     1   128    64    32    16 #> [25,]    64    64    32    32    32   128   128   128    64    64    64    32 #> [26,]    64    64    32    32    32   128   128   128    64    64    64    32 #> [27,]    64    64    32    32    32   128   128   128    64    64    64    32 #> [28,]     4     4     8     8     8     2     2     2     4     4     4     8 #> [29,]     4     4     8     8     8     2     2     2     4     4     4     8 #> [30,]     4     4     8     8     8     2     2     2     4     4     4     8 #> [31,]     4     8    16    16    16     1     1     1     2     4     8    16 #> [32,]     0    16    16    16    16     1     1     1     1     0    16    16 #> [33,]    64    32    16    16    16     1     1     1   128    64    32    16 #> [34,]    64    64    32    32    32   128   128   128    64    64    64    32 #> [35,]    64    64    32    32    32   128   128   128    64    64    64    32 #> [36,]    64    64    32    32    32   128   128   128    64    64    64    32 #>       [,26] [,27] [,28] [,29] [,30] [,31] [,32] [,33] [,34] [,35] [,36] #>  [1,]     8     8     2     2     2     4     4     4     8     8     8 #>  [2,]     8     8     2     2     2     4     4     4     8     8     8 #>  [3,]     8     8     2     2     2     4     4     4     8     8     8 #>  [4,]    16    16     1     1     1     2     4     8    16    16    16 #>  [5,]    16    16     1     1     1     1     0    16    16    16    16 #>  [6,]    16    16     1     1     1   128    64    32    16    16    16 #>  [7,]    32    32   128   128   128    64    64    64    32    32    32 #>  [8,]    32    32   128   128   128    64    64    64    32    32    32 #>  [9,]    32    32   128   128   128    64    64    64    32    32    32 #> [10,]     8     8     2     2     2     4     4     4     8     8     8 #> [11,]     8     8     2     2     2     4     4     4     8     8     8 #> [12,]     8     8     2     2     2     4     4     4     8     8     8 #> [13,]    16    16     1     1     1     2     4     8    16    16    16 #> [14,]    16    16     1     1     1     1     0    16    16    16    16 #> [15,]    16    16     1     1     1   128    64    32    16    16    16 #> [16,]    32    32   128   128   128    64    64    64    32    32    32 #> [17,]    32    32   128   128   128    64    64    64    32    32    32 #> [18,]    32    32   128   128   128    64    64    64    32    32    32 #> [19,]     8     8     2     2     2     4     4     4     8     8     8 #> [20,]     8     8     2     2     2     4     4     4     8     8     8 #> [21,]     8     8     2     2     2     4     4     4     8     8     8 #> [22,]    16    16     1     1     1     2     4     8    16    16    16 #> [23,]    16    16     1     1     1     1     0    16    16    16    16 #> [24,]    16    16     1     1     1   128    64    32    16    16    16 #> [25,]    32    32   128   128   128    64    64    64    32    32    32 #> [26,]    32    32   128   128   128    64    64    64    32    32    32 #> [27,]    32    32   128   128   128    64    64    64    32    32    32 #> [28,]     8     8     2     2     2     4     4     4     8     8     8 #> [29,]     8     8     2     2     2     4     4     4     8     8     8 #> [30,]     8     8     2     2     2     4     4     4     8     8     8 #> [31,]    16    16     1     1     1     2     4     8    16    16    16 #> [32,]    16    16     1     1     1     1     0    16    16    16    16 #> [33,]    16    16     1     1     1   128    64    32    16    16    16 #> [34,]    32    32   128   128   128    64    64    64    32    32    32 #> [35,]    32    32   128   128   128    64    64    64    32    32    32 #> [36,]    32    32   128   128   128    64    64    64    32    32    32  ## Pit Detect  pits <- pitfinder(flowdir)  ## Application wth example DEM  elev <- rast(system.file('ex/elev.tif',package=\"terra\")) flowdir <- terrain(elev,\"flowdir\")  pits <- pitfinder(flowdir)"},{"path":"https://rspatial.github.io/terra/reference/plet.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot with leaflet — plet","title":"Plot with leaflet — plet","text":"Plot values SpatRaster SpatVector make interactive leaflet map displayed browser.","code":""},{"path":"https://rspatial.github.io/terra/reference/plet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot with leaflet — plet","text":"","code":"# S4 method for class 'SpatRaster' plet(x, y=1, col, alpha=0.8, main=names(x),    tiles=c(\"Streets\", \"Esri.WorldImagery\", \"OpenTopoMap\"),    wrap=TRUE, maxcell=500000, stretch=NULL, legend=\"bottomright\",    shared=FALSE, panel=FALSE, collapse=TRUE, type=NULL, breaks=NULL,   breakby=\"eqint\", map=NULL, ...)    # S4 method for class 'SpatVector' plet(x, y=\"\", col,fill=0.2, main=y, cex=1, lwd=2,    border=\"black\", alpha=1, popup=TRUE, label=FALSE, split=FALSE,   tiles=c(\"Streets\", \"Esri.WorldImagery\", \"OpenTopoMap\"),    wrap=TRUE, legend=\"bottomright\", collapse=FALSE, type=NULL, breaks=NULL,   breakby=\"eqint\", sort=TRUE, decreasing=FALSE, map=NULL, ...)   # S4 method for class 'SpatVectorCollection' plet(x, col, fill=0, cex=1, lwd=2, border=\"black\", alpha=1, popup=TRUE,     label=FALSE, tiles=c(\"Streets\", \"Esri.WorldImagery\", \"OpenTopoMap\"), wrap=TRUE,    legend=\"bottomright\", collapse=FALSE, map=NULL)   # S4 method for class 'leaflet' lines(x, y, col, lwd=2, alpha=1, ...)  # S4 method for class 'leaflet' points(x, y, col, cex=1, alpha=1, label=1:nrow(y), popup=FALSE, ...)  # S4 method for class 'leaflet' polys(x, y, col, fill=0.2, lwd=2, border=\"black\", alpha=1, popup=TRUE, label=FALSE, ...)"},{"path":"https://rspatial.github.io/terra/reference/plet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot with leaflet — plet","text":"x SpatRaster, SpatVector, leaflet object y missing, positive integer, character (variable layer name) indicating layer(s) plotted. x SpatRaster, can select multiple layers col character. Vector colors color generating function alpha Number 0 1 set transparency lines (0 transparent, 1 opaque) fill Number 0 1 set transparency polygon areas (0 transparent, 1 opaque) tiles character NULL. Names background tile providers wrap logical. TRUE, tiles wrap around maxcell positive integer. Maximum number cells use plot stretch NULL character (\"lin\" \"hist\") stretch RGB rasters. See plotRGB legend character indicate legend position (\"bottomleft\", \"bottomright\", \"topleft\" \"topright\") NULL suppress legend main character. Title legend. length 1 x SpatVector length nlyr(x) x SpatVector shared logical. legend rasters (multiple layers SpatRaster x mapped) map leaflet object ... additional arguments drawing points, lines, polygons passed relevant leaflet function border character. Color polygon borders collapse logical. layers \"control\" panel collapsed? split logical. TRUE check-box created toggle value y (x SpatVector) cex numeric. point size magnifier. See par lwd numeric, line-width. See par popup logical. pop-ups created? label logical. mouse-labels added? panel logical. SpatRaster layers shown panel\" type character. Type map/legend. One \"classes\", \"interval\". specified, type chosen based data. Use \"\" suppress legend breaks numeric. Either single number indicate number breaks desired, actual breaks. providing argument, default legend becomes \"interval\" breakby character function. Either \"eqint\" equal interval breaks, \"cases\" equal quantile breaks. function supplied take single argument (vector values) create groups sort logical. TRUE legends character values sorted. can also supply vector unique values, order want appear legend decreasing logical. TRUE, legends sorted decreasing order","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/plet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot with leaflet — plet","text":"","code":"if (FALSE) { # \\dontrun{ if (require(leaflet) && (packageVersion(\"leaflet\") > \"2.1.1\")) {  v <- vect(system.file(\"ex/lux.shp\", package=\"terra\")) p <- spatSample(as.polygons(v, ext=T), 30) values(p) = data.frame(id=11:40, name=letters[1:30])  m <- plet(v, \"NAME_1\", tiles=\"\", border=\"blue\") m <- points(m, p, col=\"red\", cex=2, popup=T) lines(m, v, lwd=1, col=\"white\")  plet(v, \"NAME_1\", split=TRUE, alpha=.2) |>    points(p, col=\"gray\", cex=2, popup=TRUE,     clusterOptions = markerClusterOptions())  s <- svc(v, p) names(s) <- c(\"the polys\", \"set of points\") plet(s, col=c(\"red\", \"blue\"), lwd=1)   r <- rast(system.file(\"ex/elev.tif\", package=\"terra\")) plet(r, main=\"Hi\\nthere\", tiles=NULL) |> lines(v, lwd=1)  plet(r, tiles=\"OpenTopoMap\") |> lines(v, lwd=2, col=\"blue\")  x <- c(r, 50*classify(r, 5)) names(x) <- c(\"first\", \"second\")  # each their own legend plet(x, 1:2, collapse=FALSE) |> lines(v, lwd=2, col=\"blue\")  # shared legend plet(x, 1:2, shared=TRUE, collapse=FALSE) |> lines(v, lwd=2, col=\"blue\")  }} # }"},{"path":"https://rspatial.github.io/terra/reference/plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a map — plot","title":"Make a map — plot","text":"Plot values SpatRaster SpatVector make map. See points, lines polys add SpatVector existing map (use argument add=TRUE). separate help file plotting SpatGraticule SpatExtent.","code":""},{"path":"https://rspatial.github.io/terra/reference/plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a map — plot","text":"","code":"# S4 method for class 'SpatRaster,numeric' plot(x, y=1, col, type=NULL, mar=NULL, legend=TRUE, axes=!add, plg=list(), pax=list(),      maxcell=500000, smooth=FALSE, range=NULL, fill_range=FALSE, levels=NULL,    all_levels=FALSE, breaks=NULL, breakby=\"eqint\", fun=NULL, colNA=NULL,    alpha=NULL, sort=FALSE,  decreasing=FALSE, grid=FALSE, ext=NULL, reset=FALSE,    add=FALSE, buffer=FALSE, background=NULL, box=axes, clip=TRUE, overview=NULL, ...)  # S4 method for class 'SpatRaster,missing' plot(x, y, main, mar=NULL, nc, nr, maxnl=16, maxcell=500000, add=FALSE, ...)  # S4 method for class 'SpatRaster,character' plot(x, y, ...)  # S4 method for class 'SpatVector,character' plot(x, y, col=NULL, type=NULL, mar=NULL, add=FALSE, legend=TRUE, axes=!add,      main=\"\", buffer=TRUE, background=NULL, grid=FALSE, ext=NULL, sort=TRUE,    decreasing=FALSE, plg=list(), pax=list(), nr, nc, colNA=NA, alpha=NULL,    box=axes, clip=TRUE, ...)  # S4 method for class 'SpatVector,numeric' plot(x, y, ...)  # S4 method for class 'SpatVector,missing' plot(x, y, values=NULL, ...)  # S4 method for class 'SpatVectorCollection,missing' plot(x, y, main, mar=NULL, nc, nr, maxnl=16, ...)  # S4 method for class 'SpatVectorCollection,numeric' plot(x, y, main, mar=NULL, ext=NULL, ...)"},{"path":"https://rspatial.github.io/terra/reference/plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a map — plot","text":"x SpatRaster SpatVector y missing positive integer name indicating layer(s) plotted col character vector specify colors use. default map.pal(\"viridis\", 100). default can changed terra.pal option. example: options(terra.pal=terrain.colors(10)). x SpatRaster, can also data.frame two columns (value, color) get \"classes\" type legend three columns (, , color) get \"interval\" type legend type character. Type map/legend. One \"continuous\", \"classes\", \"interval\". specified, type chosen based data mar numeric vector length 4 set margins plot (make space legend). default (3.1, 3.1, 2.1, 7.1) single plot legend (3.1, 3.1, 2.1, 2.1) otherwise. default RGB raster 0. Use mar=NA set margins legend logical character. FALSE legend drawn. character value can used indicate legend drawn. example \"topright\" \"bottomleft\". Use plg refined placement. supported continuous legends (default raster data) axes logical. Draw axes? buffer logical. TRUE plotting area made slightly larger extent x background background color. Default color (white) box logical. box drawn around map? clip logical. axes clipped extent x? overview logical. \"overviews\" used fast rendering? can result much faster plotting raster files overviews (e.g. \"COG\" format) accessed http connection. However, overviews generally show aggregate values, thus reducing range actual values. NULL, argument set TRUE rasters accessed http FALSE cases plg list parameters drawing legend. classes interval type legend see arguments legend. example x y can used place legend. can also use keywords \"topleft\" \"bottomright\" place legend locations inside map rectangle. apply continuous legend, behave little differently. example, placement keywords \"left\", \"right\", \"top\", \"bottom\" recognized; using keywords, legend placed outside map rectangle. Additional parameters continuous legends include:  digits set number digits print decimal point. size change height /width; defaults c(1,1), negative values size flip order legend. set location tic-marks tic One partially matched values: \"\", \"\", \"\", \"none\", choose tic-mark placement/length different default \"\".  pax list parameters drawing axes. See arguments axis. Arguments side, tick lab can used indicate four axes draw line (side), tick-mark, /tick-mark labels. default c(1:4) side 1:2 two. side changed two default value. Logical argument retro can used use sexagesimal notation labels (degrees/minutes/hemisphere) instead standard decimal notation maxcell positive integer. Maximum number cells use plot smooth logical. TRUE cell values smoothed (continuous legend used) range numeric. minimum maximum values used continuous legend. can use NA one set minimum maximum value fill_range logical. TRUE, values outside range get colors extreme values; otherwise get colored NA levels character. labels legend type=\"classes\" all_levels logical. TRUE, legend shows levels categorical raster, even present data breaks numeric. Either single number indicate number breaks desired, actual breaks. providing argument, default legend becomes \"interval\" breakby character function. Either \"eqint\" equal interval breaks, \"cases\" equal quantile breaks. function supplied, take single argument (vector values) create groups fun function called plotting SpatRaster layer add something map (text, legend, lines). example, SpatVector v, fun=function() lines(v). function may one argument, representing layer plotted (1 number layers) colNA character. color NA values alpha Either single numeric 0 1 set transparency colors (0 transparent, 1 opaque) SpatRaster values 0 1 set transparency cell. set transparency given color, set colors directly sort logical. TRUE legends categorical values sorted. x SpatVector can also supply vector unique values, order want appear legend decreasing logical. TRUE, legends sorted decreasing order grid logical. TRUE grid lines drawn. properties type color can set pax argument nc positive integer. Optional. number columns divide plotting device (plotting multiple layers) nr positive integer. Optional. number rows divide plotting device (plotting multiple layers) main character. Main plot titles (one layer plotted). can use arguments cex.main, font.main, col.main change appearance; loc.main change location main title (either two coordinates, character value \"topleft\") maxnl positive integer. Maximum number layers plot (multi-layer object) add logical. TRUE add object current plot ext SpatExtent. Can use instead xlim ylim set extent plot reset logical. TRUE add margins (see argument mar) reset calling plot; may affect display additional objects added map (e.g.  lines) values Either vector values used plotting two-column data.frame, first column matches variable x second column values plotted ... arguments passed plot(\"SpatRaster\", \"numeric\") additional graphical arguments","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a map — plot","text":"","code":"## SpatRaster f <- system.file(\"ex/elev.tif\", package=\"terra\")  r <- rast(f) plot(r)   plot(r, type=\"interval\")   e <- c(6.37, 6.41, 49.9, 50.1) plot(r, plg=list(ext=e, title=\"Legend\\nTitle\", title.cex=0.9),      pax=list(side=1:4, retro=FALSE)) north(cbind(5.8, 50.1))     d <- classify(r, c(100,200,300,400,500,600)) plot(d, type=\"classes\")   plot(d, type=\"interval\", breaks=1:5)   plot(d, type=\"interval\", breaks=c(1,4,5), plg=list(legend=c(\"1-4\", \"4-5\")))   plot(d, type=\"classes\", xlim=c(5.6, 6.6),    plg=list(legend=c(\"Mr\", \"Xx\", \"As\", \"Zx\", \"Bb\"), x=\"bottomleft\"))    x <- trunc(r/200) levels(x) <- data.frame(id=0:2, element=c(\"earth\", \"wind\", \"fire\")) plot(x, plg=list(x=\"topright\"),mar=c(2,2,2,2))   oldpar <- par(no.readonly=TRUE)  # two plots with the same legend dev.new(width=6, height=4, noRStudioGD = TRUE) par(mfrow=c(1,2)) plot(r, range=c(50,600), mar=c(1,1,1,4)) plot(r/2, range=c(50,600), mar=c(1,1,1,4))  # as we only need one legend:   par(mfrow=c(1,2)) plot(r, range=c(50,600), mar=c(2, 2, 2, 2), plg=list(size=0.9, cex=.8),    pax=list(side=1:2, cex.axis=.6), box=FALSE) #text(182500, 335000, \"Two maps, one plot\", xpd=NA) plot(r/2, range=c(50,600), mar=c(2, 2, 2, 2), legend=FALSE,    pax=list(side=c(1,4), cex.axis=.6), box=FALSE)  par(oldpar)  # multi-layer with RGB s <- rast(system.file(\"ex/logo.tif\", package=\"terra\"))    s #> class       : SpatRaster  #> dimensions  : 77, 101, 3  (nrow, ncol, nlyr) #> resolution  : 1, 1  (x, y) #> extent      : 0, 101, 0, 77  (xmin, xmax, ymin, ymax) #> coord. ref. : Cartesian (Meter)  #> source      : logo.tif  #> colors RGB  : 1, 2, 3  #> names       : red, green, blue  #> min values  :   0,     0,    0  #> max values  : 255,   255,  255  plot(s) # remove RGB plot(s*1) # or use layers plot(s, 1) plot(s, 1:3)  # fix legend by linking values and colors  x = rast(nrows = 2, ncols = 2, vals=1) y = rast(nrows = 2, ncols = 2, vals=c(1,2,2,1)) cols = data.frame(id=1:2, col=c(\"red\", \"blue\")) plot(c(x,y), col=cols)  r  = rast(nrows=10, ncols=10, vals=1:100) dr = data.frame(from=c(5,33,66,150), to=c(33, 66, 95,200), col=rainbow(4)) plot(r, col=dr)  ### SpatVector   f <- system.file(\"ex/lux.shp\", package=\"terra\") v <- vect(f)  plot(v)  plot(v, \"NAME_2\", col=rainbow(12), border=c(\"gray\", \"blue\"), lwd=3)  plot(v, 2, pax=list(side=1:2), plg=list(x=6.16, y=50.17, cex=.8), xlim=c(5.7, 6.7))  plot(v, 4, pax=list(side=1:2), plg=list(x=6.2, y=50.2, ncol=2), main=\"\", box=FALSE)   plot(v, 1, plg=list(x=5.8, y=49.37, horiz=TRUE, cex=1.1), main=\"\", mar=c(5,2,0.5,0.5))  plot(v, density=1:12, angle=seq(18, 360, 20), col=rainbow(12))   plot(v, \"AREA\", type=\"interval\", breaks=3, mar=c(3.1, 3.1, 2.1, 3.1),   plg=list(x=\"topright\"), main=\"\")  plot(v, \"AREA\", type=\"interval\", breaks=c(0,200,250,350),    mar=c(2,2,2,2), xlim=c(5.7, 6.75),   plg=list(legend=c(\"<200\", \"200-250\", \">250\"), cex=1, bty=\"o\",    x=6.3, y=50.15, box.lwd=2, bg=\"light yellow\", title=\"My legend\"))"},{"path":"https://rspatial.github.io/terra/reference/plotRGB.html","id":null,"dir":"Reference","previous_headings":"","what":"Red-Green-Blue plot of a multi-layered SpatRaster — plotRGB","title":"Red-Green-Blue plot of a multi-layered SpatRaster — plotRGB","text":"Make Red-Green-Blue plot based three layers SpatRaster. layers (sometimes referred \"bands\" may represent different bandwidths electromagnetic spectrum) combined represent red, green blue channel. function can used make \"true\" (\"false\") color images Landsat multi-spectral satellite images. Note margins plot set zero (axes titles visible) can set mar argument. alternative way plot RGB images first use colorize create single layer SpatRaster color-table use plot.","code":""},{"path":"https://rspatial.github.io/terra/reference/plotRGB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Red-Green-Blue plot of a multi-layered SpatRaster — plotRGB","text":"","code":"# S4 method for class 'SpatRaster' plotRGB(x, r=1, g=2, b=3, a=NULL, scale=NULL, mar=0,      stretch=NULL, smooth=TRUE, colNA=\"white\", alpha=NULL, bgalpha=NULL,      zlim=NULL, zcol=FALSE, axes=FALSE ,...)"},{"path":"https://rspatial.github.io/terra/reference/plotRGB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Red-Green-Blue plot of a multi-layered SpatRaster — plotRGB","text":"x SpatRaster r integer 1 nlyr(x). Layer use Red channel g integer 1 nlyr(x). Layer use Green channel b integer 1 nlyr(x). Layer use Blue channel NULL integer 1 nlyr(x). Layer use alpha (transparency) channel. NULL, argument alpha ignored scale integer. Maximum (possible) value three channels. Defaults 255 maximum value x known larger 255 mar numeric vector recycled length 4 set margins plot. Use mar=NULL mar=NA set margins stretch character. Option stretch values increase contrast: \"lin\" (linear) \"hist\" (histogram). linear stretch uses stretch arguments minq=0.02 maxq=0.98 smooth logical. TRUE, smooth image drawing get appearance higher spatial resolution colNA color. color used cells NA values alpha transparency. Integer 0 (transparent) 255 (opaque) bgalpha Background transparency. Integer 0 (transparent) 255 (opaque) zlim numeric vector length 2. Range values plot (optional). set, stretch=\"lin\" used, values stretched within range zlim. allows creating consistent coloring SpatRasters different cell-value ranges, even stretching colors improved contrast zcol logical. TRUE values outside range zlim get color extremes range. Otherwise, values outside zlim range get color NA values (see argument \"colNA\") axes logical. TRUE axes drawn (arguments main=\"title\" honored) ... graphical parameters plot<SpatRaster-method>","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/plotRGB.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Red-Green-Blue plot of a multi-layered SpatRaster — plotRGB","text":"","code":"b <- rast(system.file(\"ex/logo.tif\", package=\"terra\"))    plotRGB(b)  plotRGB(b, mar=2) plotRGB(b, 3, 2, 1)   b[1000:2000] <- NA plotRGB(b, 3, 2, 1, stretch=\"hist\")"},{"path":"https://rspatial.github.io/terra/reference/plot_extent.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a SpatExtent — plot_extent","title":"Plot a SpatExtent — plot_extent","text":"Plot SpatExtent. Use lines add SpatExtent existing map. See plot plotting object types.","code":""},{"path":"https://rspatial.github.io/terra/reference/plot_extent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a SpatExtent — plot_extent","text":"","code":"# S4 method for class 'SpatExtent,missing' plot(x, y, ...)"},{"path":"https://rspatial.github.io/terra/reference/plot_extent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a SpatExtent — plot_extent","text":"x SpatExtent y missing ... additional graphical arguments lines","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/plot_extent.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a SpatExtent — plot_extent","text":"","code":"r <- rast() plot(ext(r))"},{"path":"https://rspatial.github.io/terra/reference/plot_graticule.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a graticule — plot_graticule","title":"Plot a graticule — plot_graticule","text":"Plot SpatGraticule. can create SpatGraticule graticule.","code":""},{"path":"https://rspatial.github.io/terra/reference/plot_graticule.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a graticule — plot_graticule","text":"","code":"# S4 method for class 'SpatGraticule,missing' plot(x, y, background=NULL, col=\"black\", mar=NULL, labels=TRUE,   retro=FALSE, lab.loc=c(1,1), lab.lon=NULL, lab.lat=NULL, lab.cex=0.65,    lab.col=\"black\", off.lat=0.25, off.lon=0.25, box=FALSE, box.col=\"black\",   add=FALSE, ...)"},{"path":"https://rspatial.github.io/terra/reference/plot_graticule.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a graticule — plot_graticule","text":"x SpatRaster SpatVector y missing positive integer name indicating layer(s) plotted background background color. NULL, background drawn mar numeric vector length 4 set margins plot. make space legend may use something like c(3.1, 3.1, 2.1, 7.1). fill plotting canvas, can use c(0,0,0,0. Use NA set margins col character. Color graticule lines labels logical. TRUE, show graticule labels retro logical. TRUE, show \"retro\" instead decimal labels graticule lab.loc numeric. first number indicates longitude graticule labels drawn (1=bottom, 2=top, NA=drawn, number=top bottom). second number indicates latitude graticule labels drawn (1=left, 2=right, NA=drawn, number=left right) lab.lon positive integers 1 number labels, indicating longitude graticule labels included lab.lat positive integers 1 number labels, indicating latitude graticule labels included lab.cex double. size label font lab.col character. color labels .lon numeric. longitude labels offset .lat numeric. latitude labels offset box logical. TRUE, outer lines graticule drawn top sold line lty=1 box.col character. color outer lines graticule box=TRUE add logical. Add graticule current plot? ... additional graphical arguments passed lines","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/plot_graticule.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a graticule — plot_graticule","text":"","code":"g <- graticule(60, 30, crs=\"+proj=robin\")  plot(g, background=\"azure\", col=\"red\", lty=2, box=TRUE)  plot(g, background=\"azure\", col=\"light gray\", lab.loc=c(1,2),      lab.lon=c(2,4,6), lab.lat=3:5, lty=3, retro=TRUE)"},{"path":"https://rspatial.github.io/terra/reference/prcomp.html","id":null,"dir":"Reference","previous_headings":"","what":"SpatRaster PCA with prcomp — prcomp","title":"SpatRaster PCA with prcomp — prcomp","text":"Compute principal components SpatRaster layers. method may preferred princomp greater numerical accuracy. However, slower large rasters can done sample. may good enough see princomp want use values. Unlike princomp, method sample variances used n-1 denominator.","code":""},{"path":"https://rspatial.github.io/terra/reference/prcomp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SpatRaster PCA with prcomp — prcomp","text":"","code":"# S4 method for class 'SpatRaster' prcomp(x, retx=TRUE, center=TRUE, scale.=FALSE,      tol=NULL, rank.=NULL, maxcell=Inf)"},{"path":"https://rspatial.github.io/terra/reference/prcomp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SpatRaster PCA with prcomp — prcomp","text":"x SpatRaster retx logical value indicating whether rotated variables returned center logical value indicating whether variables shifted zero centered. Alternately, vector length equal number columns x can supplied. value passed scale scale. logical value indicating whether variables scaled unit variance analysis takes place. default FALSE consistency S, general scaling advisable. Alternatively, vector length equal number columns x can supplied. value passed scale tol value indicating magnitude components omitted. (Components omitted standard deviations less equal tol times standard deviation first component.) default null setting, components omitted (unless rank. specified less min(dim(x))). settings tol tol = 0 tol = sqrt(.Machine$double.eps), omit essentially constant components rank. optionally, number specifying maximal rank, .e., maximal number principal components used. Can set alternative addition tol, useful notably desired rank considerably smaller dimensions matrix maxcell positive integer. maximum number cells used. smaller ncell(x), regular sample x used","code":""},{"path":"https://rspatial.github.io/terra/reference/prcomp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SpatRaster PCA with prcomp — prcomp","text":"prcomp object","code":""},{"path":"https://rspatial.github.io/terra/reference/prcomp.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"SpatRaster PCA with prcomp — prcomp","text":"prcomp may change layer names valid. See make.names. case, get warning, need also make layer names x valid using predict. Even better change calling prcomp.","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/prcomp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SpatRaster PCA with prcomp — prcomp","text":"","code":"f <- system.file(\"ex/logo.tif\", package = \"terra\") r <- rast(f) pca <- prcomp(r) x <- predict(r, pca)  # use \"index\" to get a subset of the components p <- predict(r, pca, index=1:2)"},{"path":"https://rspatial.github.io/terra/reference/predict.html","id":null,"dir":"Reference","previous_headings":"","what":"Spatial model predictions — predict","title":"Spatial model predictions — predict","text":"Make SpatRaster predictions fitted model object (example, obtained glm randomForest). first argument SpatRaster object predictor variables. names SpatRaster exactly match expected model. regression like model predict method implemented (can implemented) can used. method work model's predict function returns vector, matrix data.frame (list can coerced data.frame). cases may necessary provide custom \"predict\" function wraps model's predict function return values required form. See examples. approach using model predictions commonly used remote sensing (classification satellite images) ecology, species distribution modeling.","code":""},{"path":"https://rspatial.github.io/terra/reference/predict.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spatial model predictions — predict","text":"","code":"# S4 method for class 'SpatRaster' predict(object, model, fun=predict, ..., const=NULL, na.rm=FALSE,           index=NULL, cores=1, cpkgs=NULL, filename=\"\", overwrite=FALSE, wopt=list())"},{"path":"https://rspatial.github.io/terra/reference/predict.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spatial model predictions — predict","text":"object SpatRaster model fitted model class \"predict\" method (can supply similar method fun argument. E.g. glm, gam, randomForest fun function. predict function takes model first argument. default value predict, can replaced e.g. predict.se (depending type model), custom function ... additional arguments fun const data.frame. Can used add constant value predictor variable need make SpatRaster layer na.rm logical. TRUE, cells NA values layers x removed computation (even NA cell layer used variable model). option prevents errors models handle NA values making predictions. cases affect output. However, models return predicted values even () variables NA index integer character. Can used select subset model output variables cores positive integer. cores > 1, 'parallel' package cluster many cores created used cpkgs character. package(s) need loaded nodes able run model.predict function (see examples) filename character. Output filename overwrite logical. TRUE, filename overwritten wopt list named options writing files writeRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/predict.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Spatial model predictions — predict","text":"SpatRaster","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/predict.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Spatial model predictions — predict","text":"","code":"logo <- rast(system.file(\"ex/logo.tif\", package=\"terra\"))    names(logo) <- c(\"red\", \"green\", \"blue\") p <- matrix(c(48, 48, 48, 53, 50, 46, 54, 70, 84, 85, 74, 84, 95, 85,     66, 42, 26, 4, 19, 17, 7, 14, 26, 29, 39, 45, 51, 56, 46, 38, 31,     22, 34, 60, 70, 73, 63, 46, 43, 28), ncol=2)  a <- matrix(c(22, 33, 64, 85, 92, 94, 59, 27, 30, 64, 60, 33, 31, 9,    99, 67, 15, 5, 4, 30, 8, 37, 42, 27, 19, 69, 60, 73, 3, 5, 21,    37, 52, 70, 74, 9, 13, 4, 17, 47), ncol=2)  xy <- rbind(cbind(1, p), cbind(0, a))  # extract predictor values for points e <- extract(logo, xy[,2:3])  # combine with response (excluding the ID column) v <- data.frame(cbind(pa=xy[,1], e))  #build a model, here with glm  model <- glm(formula=pa~., data=v)  #predict to a raster r1 <- predict(logo, model)  plot(r1) points(p, bg='blue', pch=21) points(a, bg='red', pch=21)   # logistic regression model <- glm(formula=pa~., data=v, family=\"binomial\") #> Warning: glm.fit: algorithm did not converge #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred r1log <- predict(logo, model, type=\"response\")  # to get the probability and standard error r1se <- predict(logo, model, se.fit=TRUE)  # or provide a custom predict function  predfun <- function(model, data) {   v <- predict(model, data, se.fit=TRUE)   cbind(p=as.vector(v$fit), se=as.vector(v$se.fit)) }  r2 <- predict(logo, model, fun=predfun)  ### principal components of a SpatRaster pca <- prcomp(logo)  # or use sampling if you have a large raster  # and cannot process all cell values sr <- spatSample(logo, 100000, \"regular\") pca <- prcomp(sr)  x <- predict(logo, pca) plot(x)   ## parallelization if (FALSE) { # \\dontrun{ ## simple case with GLM  model <- glm(formula=pa~., data=v) p <- predict(logo, model, cores=2)  ## The above does not work with a model from a contributed ## package, as the package needs to be loaded in each core.  ## Below are three approaches to deal with that   library(randomForest) rfm <- randomForest(formula=pa~., data=v)  ## approach 0 (not parallel)  rp0 <- predict(logo, rfm)  ## approach 1, use the \"cpkgs\" argument  rp1 <- predict(logo, rfm, cores=2, cpkgs=\"randomForest\")  ## approach 2, write a custom predict function that loads the package rfun <- function(mod, dat, ...) {   library(randomForest)   predict(mod, dat, ...) } rp2 <- predict(logo, rfm, fun=rfun, cores=2)  ## approach 3, write a parallelized custom predict function  rfun <- function(mod, dat, ...) {   ncls <- length(cls)   nr <- nrow(dat)   s <- split(dat, rep(1:ncls, each=ceiling(nr/ncls), length.out=nr))   unlist(  parallel::clusterApply(cls, s, function(x, ...) predict(mod, x, ...))  ) }  library(parallel) cls <- parallel::makeCluster(2) parallel::clusterExport(cls, c(\"rfm\", \"rfun\", \"randomForest\")) rp3 <- predict(logo, rfm, fun=rfun) parallel::stopCluster(cls)  plot(c(rp0, rp1, rp2, rp3))   ### with two output variables (probabilities for each class) v$pa <- as.factor(v$pa) rfm2 <- randomForest(formula=pa~., data=v) rfp <- predict(logo, rfm2, cores=2, type=\"prob\", cpkgs=\"randomForest\") } # }"},{"path":"https://rspatial.github.io/terra/reference/princomp.html","id":null,"dir":"Reference","previous_headings":"","what":"SpatRaster PCA with princomp — princomp","title":"SpatRaster PCA with princomp — princomp","text":"Compute principal components SpatRaster layers. method can use values compute principal components, even large rasters. computes covariance matrix processing data chunks, necessary, using layerCor. population covariance used (sample, n-1 denominator, covariance). Alternatively, can specify maxcell sample raster values data.frame speed calculations large rasters (see examples ). See prcomp alternative method higher numerical accuracy, slower, large rasters can accomplished sample since values must read memory.","code":""},{"path":"https://rspatial.github.io/terra/reference/princomp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SpatRaster PCA with princomp — princomp","text":"","code":"# S4 method for class 'SpatRaster' princomp(x, cor=FALSE, fix_sign=TRUE, use=\"pairwise.complete.obs\", maxcell=Inf)"},{"path":"https://rspatial.github.io/terra/reference/princomp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SpatRaster PCA with princomp — princomp","text":"x SpatRaster cor logical. FALSE, covariance matrix used. Otherwise correlation matrix used fix_sign logical.  TRUE, signs loadings scores chosen first element loading non-negative use character. decide handle missing values. must (abbreviation ) one strings \"everything\", \"complete.obs\", \"pairwise.complete.obs\", \"masked.complete\". \"pairwise.complete.obs\", covariance pair layers computed cells NA pair. Therefore, may (number ) cells used varies pairs. benefit approach available data used. Use \"complete.obs\", want use values cells NA layers. using \"masked.complete\" indicate layers NA values cells maxcell positive integer. maximum number cells used. smaller ncell(x), regular sample x used","code":""},{"path":"https://rspatial.github.io/terra/reference/princomp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SpatRaster PCA with princomp — princomp","text":"princomp object","code":""},{"path":"https://rspatial.github.io/terra/reference/princomp.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"SpatRaster PCA with princomp — princomp","text":"Alex Ilich Robert Hijmans, based similar method Benjamin Leutner","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/princomp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SpatRaster PCA with princomp — princomp","text":"","code":"f <- system.file(\"ex/logo.tif\", package = \"terra\") r <- rast(f) pca <- princomp(r) x <- predict(r, pca)  # use \"index\" to get a subset of the components p <- predict(r, pca, index=1:2)  ### use princomp directly pca2 <- princomp(values(r),  fix_sign = TRUE) p2 <- predict(r, pca2)  ### may need to use sampling with a large raster  ### here with prcomp instead of princomp sr <- spatSample(r, 100000, \"regular\") pca3 <- prcomp(sr) p3 <- predict(r, pca3)"},{"path":"https://rspatial.github.io/terra/reference/project.html","id":null,"dir":"Reference","previous_headings":"","what":"Change the coordinate reference system — project","title":"Change the coordinate reference system — project","text":"Change coordinate reference system (\"project\") SpatVector, SpatRaster matrix coordinates.","code":""},{"path":"https://rspatial.github.io/terra/reference/project.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change the coordinate reference system — project","text":"","code":"# S4 method for class 'SpatVector' project(x, y, partial = FALSE)  # S4 method for class 'SpatRaster' project(x, y, method, mask=FALSE, align_only=FALSE, res=NULL,    origin=NULL, threads=FALSE, filename=\"\", ..., use_gdal=TRUE, by_util = FALSE)  # S4 method for class 'SpatExtent' project(x, from, to)  # S4 method for class 'matrix' project(x, from, to)"},{"path":"https://rspatial.github.io/terra/reference/project.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change the coordinate reference system — project","text":"x SpatRaster, SpatVector, SpatExtent matrix (x y columns) whose coordinates project y x SpatRaster, preferred approach y SpatRaster well, serving template geometry (extent resolution) output SpatRaster. Alternatively, can provide coordinate reference system (CRS) description. can use following formats define coordinate reference systems: WKT,  PROJ.4 (e.g., +proj=longlat +datum=WGS84), EPSG code (e.g., \"epsg:4326\"). note PROJ.4 notation deprecated, can use WGS84/NAD83 NAD27 datums. datums silently ignored. x SpatVector, can provide crs definition discussed , object crs can extracted crs partial logical. TRUE, geometries can partially represented output crs included output method character. Method used estimating new cell values SpatRaster. One : bilinear: bilinear interpolation (3x3 cell window). used default first layer x categorical average:  can good choice continuous variables output cells overlap multiple input cells. near: nearest neighbor. used default first layer x categorical. method good choice continuous values. mode: modal value. can good choice categrical rasters, output cells overlap multiple input cells. cubic: cubic interpolation (5x5 cell window). cubicspline: cubic B-spline interpolation. (5x5 cell window). lanczos: Lanczos windowed sinc resampling. (7x7 cell window). sum: weighted sum non-NA contributing grid cells. min, q1, median, q3, max: minimum, first quartile, median, third quartile, maximum value. rms: root-mean-square value non-NA contributing grid cells. mask logical. TRUE, mask areas outside input extent. example, avoid data wrapping around date-line (see example Robinson projection). remove cells NA y (y SpatRaster) can use mask method calling project (function) align_only logical. TRUE, y SpatRaster, template used spatial resolution origin, extent set extent x included res numeric. Can used set resolution output raster y CRS origin numeric. Can used set origin output raster y CRS threads logical. TRUE multiple threads used (faster large files) filename character. Output filename ... additional arguments writing files writeRaster use_gdal logical. TRUE GDAL-warp algorithm used. Otherwise, slower internal algorithm used may accurate much variation cell sizes output raster. near bilinear algorithms available internal algorithm by_util logical. TRUE gdal=TRUE, GDAL warp utility used character. Coordinate reference system x character. Output coordinate reference system","code":""},{"path":"https://rspatial.github.io/terra/reference/project.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Change the coordinate reference system — project","text":"SpatVector SpatRaster","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/project.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Change the coordinate reference system — project","text":"PROJ.4 notation coordinate reference systems partly deprecated GDAL/PROJ library used function. can still use notation, ** WGS84 datum. datums silently ignored. Transforming (projecting) raster data fundamentally different transforming vector data. Vector data can transformed back-transformed without loss precision without changes values. case raster data. transformation values new cells estimated fashion. Therefore, need match raster vector data analysis, generally transform vector data. using method SpatRaster, preferable approach provide template SpatRaster argument y. template another raster dataset want data align . template begin , can project(rast(x), crs) manipulate output get template want. example, possible use whole numbers extent resolution worry small differences future. can use commands like dim(z) = c(180, 360) res(z) <- 100000. output resolution generally similar input resolution, \"correct\" resolution raster transformation. obvious resolution using lon/lat data spans large North-South extent.","code":""},{"path":"https://rspatial.github.io/terra/reference/project.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Change the coordinate reference system — project","text":"","code":"## SpatRaster a <- rast(ncols=40, nrows=40, xmin=-110, xmax=-90, ymin=40, ymax=60,            crs=\"+proj=longlat +datum=WGS84\") values(a) <- 1:ncell(a) newcrs=\"+proj=lcc +lat_1=48 +lat_2=33 +lon_0=-100 +datum=WGS84\" b <- rast(ncols=94, nrows=124, xmin=-944881, xmax=935118, ymin=4664377, ymax=7144377, crs=newcrs) w <- project(a, b)   ## SpatVector f <- system.file(\"ex/lux.shp\", package=\"terra\") v <- vect(f) crs(v, proj=TRUE) #> [1] \"+proj=longlat +datum=WGS84 +no_defs\" cat(crs(v), \"\\n\") #> GEOGCRS[\"WGS 84\", #>     DATUM[\"World Geodetic System 1984\", #>         ELLIPSOID[\"WGS 84\",6378137,298.257223563, #>             LENGTHUNIT[\"metre\",1]]], #>     PRIMEM[\"Greenwich\",0, #>         ANGLEUNIT[\"degree\",0.0174532925199433]], #>     CS[ellipsoidal,2], #>         AXIS[\"geodetic latitude (Lat)\",north, #>             ORDER[1], #>             ANGLEUNIT[\"degree\",0.0174532925199433]], #>         AXIS[\"geodetic longitude (Lon)\",east, #>             ORDER[2], #>             ANGLEUNIT[\"degree\",0.0174532925199433]], #>     ID[\"EPSG\",4326]]   project(v, \"+proj=moll\") #>  class       : SpatVector  #>  geometry    : polygons  #>  dimensions  : 12, 6  (geometries, attributes) #>  extent      : 437476.4, 497805.3, 5815524, 5892478  (xmin, xmax, ymin, ymax) #>  coord. ref. : +proj=moll +lon_0=0 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs  #>  names       :  ID_1   NAME_1  ID_2   NAME_2  AREA       POP #>  type        : <num>    <chr> <num>    <chr> <num>     <num> #>  values      :     1 Diekirch     1 Clervaux   312 1.808e+04 #>                    1 Diekirch     2 Diekirch   218 3.254e+04 #>                    1 Diekirch     3  Redange   259 1.866e+04   project(v, \"EPSG:2169\") #>  class       : SpatVector  #>  geometry    : polygons  #>  dimensions  : 12, 6  (geometries, attributes) #>  extent      : 49540.31, 105922, 57009.53, 138631.1  (xmin, xmax, ymin, ymax) #>  coord. ref. : LUREF / Luxembourg TM (EPSG:2169)  #>  names       :  ID_1   NAME_1  ID_2   NAME_2  AREA       POP #>  type        : <num>    <chr> <num>    <chr> <num>     <num> #>  values      :     1 Diekirch     1 Clervaux   312 1.808e+04 #>                    1 Diekirch     2 Diekirch   218 3.254e+04 #>                    1 Diekirch     3  Redange   259 1.866e+04"},{"path":"https://rspatial.github.io/terra/reference/quantile.html","id":null,"dir":"Reference","previous_headings":"","what":"Quantiles of spatial data — quantile","title":"Quantiles of spatial data — quantile","text":"Compute quantiles cell across layers SpatRaster. can use use global(x, fun=quantile) instead compute quantiles across cells layer. can also use method compute quantiles numeric variables SpatVector.","code":""},{"path":"https://rspatial.github.io/terra/reference/quantile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quantiles of spatial data — quantile","text":"","code":"# S4 method for class 'SpatRaster' quantile(x, probs=seq(0, 1, 0.25), na.rm=FALSE, filename=\"\", ...)   # S4 method for class 'SpatVector' quantile(x, probs=seq(0, 1, 0.25), ...)"},{"path":"https://rspatial.github.io/terra/reference/quantile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quantiles of spatial data — quantile","text":"x SpatRaster SpatVector probs numeric vector probabilities values [0,1] na.rm logical. TRUE, NA's removed x quantiles computed filename character. Output filename ... additional arguments writing files writeRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/quantile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quantiles of spatial data — quantile","text":"SpatRaster layers representing quantiles","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/quantile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Quantiles of spatial data — quantile","text":"","code":"r <- rast(system.file(\"ex/logo.tif\", package=\"terra\"))    rr <- c(r/2, r, r*2) qr <- quantile(rr) qr #> class       : SpatRaster  #> dimensions  : 77, 101, 5  (nrow, ncol, nlyr) #> resolution  : 1, 1  (x, y) #> extent      : 0, 101, 0, 77  (xmin, xmax, ymin, ymax) #> coord. ref. : Cartesian (Meter)  #> source(s)   : memory #> names       :    q0, q0.25, q0.5, q0.75,  q1  #> min values  :   0.0,   0.0,    0,     0,   0  #> max values  : 127.5, 127.5,  255,   510, 510   if (FALSE) { # \\dontrun{ # same but slower qa <- app(rr, quantile) } # }  #quantile by layer instead of by cell qg <- global(r, quantile)"},{"path":"https://rspatial.github.io/terra/reference/query.html","id":null,"dir":"Reference","previous_headings":"","what":"Query a SpatVectorProxy object — query","title":"Query a SpatVectorProxy object — query","text":"Query SpatVectorProxy extract subset","code":""},{"path":"https://rspatial.github.io/terra/reference/query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query a SpatVectorProxy object — query","text":"","code":"# S4 method for class 'SpatVectorProxy' query(x, start=1, n=nrow(x), vars=NULL, where=NULL,      extent=NULL, filter=NULL, sql=NULL, what=\"\")"},{"path":"https://rspatial.github.io/terra/reference/query.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query a SpatVectorProxy object — query","text":"x SpatVectorProxy start positive integer. record start reading n positive integer. number records requested vars character. Variable names. Must subset names(x) character. expression like \"NAME_1='California' ID > 3\" , subset records. Note start n applied executing statement extent Spat* object. extent object used spatial filter select geometries read. Ignored filter NULL filter SpatVector. Used spatial filter select geometries read (convex hull used lines points) sql character. Arbitrary SQL statement. used, arguments \"start\", \"n\", \"vars\" \"\" ignored character indicating read. Either \"\" geometries attributes, \"geoms\" read geometries, \"attributes\" read attributes (returned data.frame)","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/query.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Query a SpatVectorProxy object — query","text":"SpatVector","code":""},{"path":"https://rspatial.github.io/terra/reference/query.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Query a SpatVectorProxy object — query","text":"","code":"f <- system.file(\"ex/lux.shp\", package=\"terra\") v <- vect(f, proxy=TRUE) v #>  class       : SpatVectorProxy #>  geometry    : polygons  #>  dimensions  : 12, 6  (geometries, attributes) #>  extent      : 5.74414, 6.528252, 49.44781, 50.18162  (xmin, xmax, ymin, ymax) #>  source      : lux.shp #>  coord. ref. : lon/lat WGS 84 (EPSG:4326)  #>  names       :  ID_1 NAME_1  ID_2 NAME_2  AREA   POP #>  type        : <num>  <chr> <num>  <chr> <num> <num>  x <- query(v, vars=c(\"ID_2\", \"NAME_2\"), start=5, n=2) x #>  class       : SpatVector  #>  geometry    : polygons  #>  dimensions  : 2, 2  (geometries, attributes) #>  extent      : 5.74414, 6.528252, 49.72324, 50.03632  (xmin, xmax, ymin, ymax) #>  source      : lux.shp #>  coord. ref. : lon/lat WGS 84 (EPSG:4326)  #>  names       :  ID_2     NAME_2 #>  type        : <num>      <chr> #>  values      :     5      Wiltz #>                    6 Echternach  query(v, vars=c(\"ID_2\", \"NAME_1\", \"NAME_2\"), where=\"NAME_1='Grevenmacher' AND ID_2 > 6\") #>  class       : SpatVector  #>  geometry    : polygons  #>  dimensions  : 2, 3  (geometries, attributes) #>  extent      : 6.169137, 6.516485, 49.46498, 49.75016  (xmin, xmax, ymin, ymax) #>  source      : lux.shp #>  coord. ref. : lon/lat WGS 84 (EPSG:4326)  #>  names       :  ID_2       NAME_1       NAME_2 #>  type        : <num>        <chr>        <chr> #>  values      :     7 Grevenmacher       Remich #>                   12 Grevenmacher Grevenmacher  ## with an extent e <- ext(5.9, 6.3, 49.9, 50)  x <- query(v, extent=e)  ## with polygons p <- as.polygons(e) x <- query(v, filter=p) x #>  class       : SpatVector  #>  geometry    : polygons  #>  dimensions  : 4, 6  (geometries, attributes) #>  extent      : 5.74414, 6.315773, 49.78479, 50.18162  (xmin, xmax, ymin, ymax) #>  source      : lux.shp #>  coord. ref. : lon/lat WGS 84 (EPSG:4326)  #>  names       :  ID_1   NAME_1  ID_2   NAME_2  AREA       POP #>  type        : <num>    <chr> <num>    <chr> <num>     <num> #>  values      :     1 Diekirch     1 Clervaux   312 1.808e+04 #>                    1 Diekirch     2 Diekirch   218 3.254e+04 #>                    1 Diekirch     4  Vianden    76      5163"},{"path":"https://rspatial.github.io/terra/reference/rangeFill.html","id":null,"dir":"Reference","previous_headings":"","what":"Fill layers with a range — rangeFill","title":"Fill layers with a range — rangeFill","text":"Fill layers cell-varying ranges defined start end SpatRaster. range must start 1 end user-defined maximum. Output values either zero (range) one (range). example, cell start=3, end=5 limit=8, output cell 0,0,1,1,1,0,0,0","code":""},{"path":"https://rspatial.github.io/terra/reference/rangeFill.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fill layers with a range — rangeFill","text":"","code":"# S4 method for class 'SpatRaster' rangeFill(x, limit, circular=FALSE, filename=\"\", ...)"},{"path":"https://rspatial.github.io/terra/reference/rangeFill.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fill layers with a range — rangeFill","text":"x SpatRaster two layers. cell values first layer indicate start range (1 based); cell values indicate end range limit numeric > 1. range size circular logical. TRUE values considered circular, days year. case, first > last layers used c(first:limit, 1:last). Otherwise, circular=FALSE, range considered invalid NA used filename character. Output filename ... additional arguments writing files writeRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/rangeFill.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fill layers with a range — rangeFill","text":"SpatRaster","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/rangeFill.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fill layers with a range — rangeFill","text":"","code":"x <- y <- rast(ncol=2, nrow=2) values(x) <- c(NA, 1:3) values(y) <- c(NA, 4:6)  r <- rangeFill(c(x, y), 8)"},{"path":"https://rspatial.github.io/terra/reference/rapp.html","id":null,"dir":"Reference","previous_headings":"","what":"Range-apply — rapp","title":"Range-apply — rapp","text":"Apply function range layers SpatRaster varies cell. range specified cell one two SpatRasters (arguments first last). either first last can use single number instead. use single numbers first last case use app Summary-methods, perhaps subsetting layers SpatRaster. See selectRange create new SpatRaster extracting one values starting cell-varying layer.","code":""},{"path":"https://rspatial.github.io/terra/reference/rapp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Range-apply — rapp","text":"","code":"# S4 method for class 'SpatRaster' rapp(x, first, last, fun, ..., allyrs=FALSE, fill=NA,          clamp=FALSE, circular=FALSE, filename=\"\", overwrite=FALSE, wopt=list())"},{"path":"https://rspatial.github.io/terra/reference/rapp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Range-apply — rapp","text":"x SpatRaster first SpatRaster positive integer 1 nlyr(x), indicating first layer range layers considered last SpatRaster positive integer 1 nlyr(x), indicating last layer range considered fun function applied ... additional arguments passed fun allyrs logical. TRUE, values layers passed fun values outside range set fill fill numeric. fill value values outside range, allyrs=TRUE clamp logical. FALSE specified range outside 1:nlyr(x) cells considered NA. Otherwise, invalid part range ignored circular logical. TRUE values considered circular, days year. case, first > last layers used c(first:nlyr(x), 1:last). Otherwise, range considered invalid NA returned filename character. Output filename overwrite logical. TRUE, filename overwritten wopt list named options writing files writeRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/rapp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Range-apply — rapp","text":"SpatRaster","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/rapp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Range-apply — rapp","text":"","code":"r <- rast(ncols=9, nrows=9) values(r) <- 1:ncell(r) s <- c(r, r, r, r, r, r) s <- s * 1:6 s[1:2] <- NA start <- end <- rast(r) start[] <- 1:3 end[]   <- 4:6 a <- rapp(s, start, end, fun=\"mean\") b <- rapp(s, start, 2, fun=\"mean\")  # cumsum from start to nlyr(x). return all layers r <- rapp(s, start, nlyr(s), cumsum, allyrs=TRUE, fill=0) # return only the final value rr <- rapp(s, start, nlyr(s), function(i) max(cumsum(i)))"},{"path":"https://rspatial.github.io/terra/reference/rast.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a SpatRaster — rast","title":"Create a SpatRaster — rast","text":"Methods create SpatRaster. objects can created scratch, filename, another object. SpatRaster represents spatially referenced surface divided three dimensional cells (rows, columns, layers). SpatRaster created one files, load cell (pixel) values memory (RAM). reads parameters describe geometry SpatRaster, number rows columns coordinate reference system. actual values read needed. Note operating system level limitations number files can opened simultaneously. Using SpatRaster many files (e.g. 10,000) may cause R crash use computation. situations like may need split task combine data fewer (multi-layer) files. Also note GTiff format used temporary files store 65535 layers single file.","code":""},{"path":"https://rspatial.github.io/terra/reference/rast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a SpatRaster — rast","text":"","code":"# S4 method for class 'character' rast(x, subds=0, lyrs=NULL, drivers=NULL, opts=NULL,        win=NULL, snap=\"near\", vsi=FALSE, raw=FALSE, noflip=FALSE)  # S4 method for class 'missing' rast(x, nrows=180, ncols=360, nlyrs=1, xmin=-180, xmax=180,            ymin=-90, ymax=90, crs, extent, resolution, vals, names, time, units)  # S4 method for class 'SpatRaster' rast(x, nlyrs=nlyr(x), names, vals, keeptime=TRUE,        keepunits=FALSE, props=FALSE, tags=FALSE)   # S4 method for class 'matrix' rast(x, type=\"\", crs=\"\", digits=6, extent=NULL)  # S4 method for class 'data.frame' rast(x, type=\"xyz\", crs=\"\", digits=6, extent=NULL)  # S4 method for class 'array' rast(x, crs=\"\", extent=NULL)  # S4 method for class 'list' rast(x, warn=TRUE)  # S4 method for class 'SpatRasterDataset' rast(x)  # S4 method for class 'SpatVector' rast(x, type=\"\", ...)                      # S4 method for class 'SpatExtent' rast(x, ...)"},{"path":"https://rspatial.github.io/terra/reference/rast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a SpatRaster — rast","text":"x filename (character), missing, SpatRaster, SpatRasterDataset, SpatExtent, SpatVector, matrix, array, list SpatRasters. types attempted create SpatRaster via (`(x, \"SpatRaster\")` subds positive integer character select sub-dataset. zero \"\", sub-datasets returned (possible) lyrs positive integer character select subset layers (.k.. \"bands\") drivers character. GDAL drivers consider opts character. GDAL dataset open options win SpatExtent set window (area interest) snap character. One \"near\", \"\", \"\", indicate extent window \"snapped\" x vsi logical. TRUE, \"\\vsicurl\\\" prepended filenames start \"http\". many  VSI configuration options can set setGDALconfig raw logical. TRUE, scale offset values ignored. See scoff get parameters noflip logical. TRUE, raster (e.g. JPEG image) georeferenced GDAL assigns flipped extent (ymax < ymin), considered flipped. avoids need flip raster vertically nrows positive integer. Number rows ncols positive integer. Number columns nlyrs positive integer. Number layers xmin minimum x coordinate (left border) xmax maximum x coordinate (right border) ymin minimum y coordinate (bottom border) ymax maximum y coordinate (top border) crs character. Description Coordinate Reference System (map projection) PROJ.4, WKT authority:code notation. See crs. argument missing, x coordinates within -360 .. 360 y coordinates within -90 .. 90, longitude/latitude assigned keeptime logical. FALSE time stamps discarded keepunits logical. FALSE layer units discarded props logical. TRUE properties (categories color-table) kept tags logical. TRUE user specified metadata tags kept (see metags). extent object class SpatExtent. present, arguments xmin, xmax, ymin ymax ignored resolution numeric vector length 1 2 set spatial resolution (see res). argument used, arguments ncols nrows ignored vals numeric. optional vector cell values (fewer values provided, recycled reach number cells) names character. optional vector layer names (must match number layers) time time date stamps layer units character. units layer type character. value \"xyz\", x must SpatVector point geometry, matrix data.frame least two columns, first x (longitude) second y (latitude) coordinates represent centers raster cells. additional columns values associated raster cells. value \"xylz\", x must four columns third representing layer fourth cell values. value \"\", resulting SpatRaster number rows columns x. digits integer set precision detecting whether points regular grid (low number digits low precision). used type=\"xyz\" warn logical. TRUE, warnings empty rasters may emitted ... additional arguments passed rast,missing-method","code":""},{"path":"https://rspatial.github.io/terra/reference/rast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a SpatRaster — rast","text":"SpatRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/rast.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a SpatRaster — rast","text":"Files read GDAL library. GDAL guesses file format name, /tries reading different \"drivers\" (see gdal) succeeds. cases may cause file opened wrong driver, information may lost. example, netCDF file opened HDF5 driver. can avoid using argument rast(\"filename.ncdf\", drivers=\"NETCDF\") classes hold C++ pointer data \"reference class\" creates limitations. recovered saved R session either directly passed nodes computer cluster. Generally, use writeRaster save SpatRaster objects disk (pass filename cell values cluster nodes). Also see wrap.","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/rast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a SpatRaster — rast","text":"","code":"# Create a SpatRaster from scratch x <- rast(nrows=108, ncols=21, xmin=0, xmax=10)  # Create a SpatRaster from a file f <- system.file(\"ex/elev.tif\", package=\"terra\") r <- rast(f)  # A file with multiple layers. This one is special as the layers are RGB color channels  s <- rast(system.file(\"ex/logo.tif\", package=\"terra\"))  # remove the color channels #plot(s) #RGB(s) <- NULL #plot(s)  # Create a skeleton with no associated cell values rast(s) #> class       : SpatRaster  #> dimensions  : 77, 101, 3  (nrow, ncol, nlyr) #> resolution  : 1, 1  (x, y) #> extent      : 0, 101, 0, 77  (xmin, xmax, ymin, ymax) #> coord. ref. : Cartesian (Meter)   # from a matrix  m <- matrix(1:25, nrow=5, ncol=5) rm <- rast(m)  # from a \"xyz\" data.frame d <- as.data.frame(rm, xy=TRUE) head(d) #>     x   y lyr.1 #> 1 0.5 4.5     1 #> 2 1.5 4.5     6 #> 3 2.5 4.5    11 #> 4 3.5 4.5    16 #> 5 4.5 4.5    21 #> 6 0.5 3.5     2 rast(d, type=\"xyz\") #> class       : SpatRaster  #> dimensions  : 5, 5, 1  (nrow, ncol, nlyr) #> resolution  : 1, 1  (x, y) #> extent      : 0, 5, 0, 5  (xmin, xmax, ymin, ymax) #> coord. ref. :   #> source(s)   : memory #> name        : lyr.1  #> min value   :     1  #> max value   :    25"},{"path":"https://rspatial.github.io/terra/reference/rasterize.html","id":null,"dir":"Reference","previous_headings":"","what":"Rasterize vector data — rasterize","title":"Rasterize vector data — rasterize","text":"Transfer values associated geometries vector data raster","code":""},{"path":"https://rspatial.github.io/terra/reference/rasterize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rasterize vector data — rasterize","text":"","code":"# S4 method for class 'SpatVector,SpatRaster' rasterize(x, y, field=\"\", fun, ..., background=NA, touches=FALSE, update=FALSE,    cover=FALSE, by=NULL, filename=\"\", overwrite=FALSE, wopt=list())  # S4 method for class 'matrix,SpatRaster' rasterize(x, y, values=1, fun, ..., background=NA, update=FALSE,    by=NULL, filename=\"\", overwrite=FALSE, wopt=list())"},{"path":"https://rspatial.github.io/terra/reference/rasterize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rasterize vector data — rasterize","text":"x SpatVector two-column matrix (point coordinates) y SpatRaster field character numeric. field character, variable name x. field numeric typically single number vector length nrow(x). values recycled nrow(x) values typically numeric vector length 1 nrow(x). length nrow(x) values recycled nrow(x). used x matrix. Can also matrix data.frame fun summarizing function multiple geometries one cell. lines polygons can use  \"min\", \"max\", \"mean\", \"count\" \"sum\"   points can use function returns single number; example mean, length (get count), min max ... additional arguments passed fun background numeric. Value put cells covered features x. Default NA touches logical. TRUE, cells touched lines polygons affected, just line render path, whose center point within polygon. touches=TRUE, add TRUE update logical. TRUE, values input SpatRaster updated cover logical. TRUE geometry x polygons, fraction cell covered polygons returned. estimated determining presence/absence polygon least 100 sub-cells (cells) character numeric value(s) split x multiple groups. separate layer group returned. x SpatVector, can column number name. x matrix, vector identifies group membership row x filename character. Output filename overwrite logical. TRUE, filename overwritten wopt list additional arguments writing files writeRaster","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/rasterize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rasterize vector data — rasterize","text":"SpatRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/rasterize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rasterize vector data — rasterize","text":"","code":"r <- rast(xmin=0, ncols=18, nrows=18)  # generate points set.seed(1) p <- spatSample(r, 1000, xy=TRUE, replace=TRUE)  # rasterize points as a matrix x <- rasterize(p, r, fun=sum) y <- rasterize(p, r, value=1:nrow(p), fun=max)  # rasterize points as a SpatVector pv <- vect(p) xv <- rasterize(pv, r, fun=sum)  # Polygons f <- system.file(\"ex/lux.shp\", package=\"terra\") v <- vect(f) r <- rast(v, ncols=75, nrows=100) z <- rasterize(v, r, \"NAME_2\") plot(z) lines(v)"},{"path":"https://rspatial.github.io/terra/reference/rasterizeGeom.html","id":null,"dir":"Reference","previous_headings":"","what":"Rasterize geometric properties of vector data — rasterizeGeom","title":"Rasterize geometric properties of vector data — rasterizeGeom","text":"Rasterization geometric properties vector data. can get count number geometries cell; area covered polygons; length lines; number lines cross boundary cell. See rasterize standard rasterization (attribute values associated geometries). area polygons intended summing area polygons relatively small relative raster cells, may multiple polygons per cell. See rasterize(fun=\"sum\") counting large polygons rasterize(cover=TRUE) get fraction covered larger polygons.","code":""},{"path":"https://rspatial.github.io/terra/reference/rasterizeGeom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rasterize geometric properties of vector data — rasterizeGeom","text":"","code":"# S4 method for class 'SpatVector,SpatRaster' rasterizeGeom(x, y, fun=\"count\", unit=\"m\", filename=\"\", ...)"},{"path":"https://rspatial.github.io/terra/reference/rasterizeGeom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rasterize geometric properties of vector data — rasterizeGeom","text":"x SpatVector y SpatRaster fun character. \"count\", \"area\", \"length\", \"crosses\" unit character. \"m\" \"km\" filename character. Output filename ... additional arguments writing files writeRaster","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/rasterizeGeom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rasterize geometric properties of vector data — rasterizeGeom","text":"SpatRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/rasterizeGeom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rasterize geometric properties of vector data — rasterizeGeom","text":"","code":"f <- system.file(\"ex/lux.shp\", package=\"terra\") v <- vect(f) r <- rast(v, res=.1)  # length of lines lns <- as.lines(v) x <- rasterizeGeom(lns, r, fun=\"length\", \"km\")  # count of points set.seed(44) pts <- spatSample(v, 100) y <- rasterizeGeom(pts, r)  # area of polygons pols <- buffer(pts, 1000) z <- rasterizeGeom(pols, r, fun=\"area\")"},{"path":"https://rspatial.github.io/terra/reference/rasterizeWin.html","id":null,"dir":"Reference","previous_headings":"","what":"Rasterize points with a moving window — rasterizeWin","title":"Rasterize points with a moving window — rasterizeWin","text":"Rasterize points using circle (ellipse) moving window. raster cell, points (x, y) fall within window centered cell considered. function used compute summary value (e.g. \"mean\") values (z) associated points. can result much smoother results compared standard rasterize method.","code":""},{"path":"https://rspatial.github.io/terra/reference/rasterizeWin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rasterize points with a moving window — rasterizeWin","text":"","code":"# S4 method for class 'SpatVector,SpatRaster' rasterizeWin(x, y, field, win=\"circle\", pars, fun, ..., cvars=FALSE,          minPoints=1, fill=NA, filename=\"\", wopt=list())  # S4 method for class 'data.frame,SpatRaster' rasterizeWin(x, y, win=\"circle\", pars, fun, ..., cvars=FALSE,            minPoints=1, fill=NA, filename=\"\", wopt=list())"},{"path":"https://rspatial.github.io/terra/reference/rasterizeWin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rasterize points with a moving window — rasterizeWin","text":"x SpatVector matrix least three columns ((x, y) coordinates variable rasterized) y SpatRaster field character. field name SpatVector x values rasterize win character choose window type. Can \"circle\", \"ellipse\", \"rectangle\", \"buffer\" pars parameters define window. win=\"circle\" win=\"buffer\", single number set radius circle width buffer. win=\"ellipse\", either two numbers (x y-axis) three numbers axes rotation (degrees). win=\"rectangle\", either two (width, height) three (width, height) rotation degrees. unit radius/width/height/axis parameters coordinate reference system (expressed cells). , lon/lat crs, conversion degrees meters vice-versa. fun function summarize values cell. cvars=FALSE, functions must take numeric vector return (cases) one numbers. cvars=TRUE, multiple variables used, function must take single argument (data.frame names variables).   win=\"circle\" win=\"ellipse\" two additional character values can used: \"distto\" (average distance points center cell) \"distbetween\" (average distance points inside window) ... additional named arguments passed fun minPoints numeric. minimum number points use. fewer points found search ellipse considered empty fill value returned fill numeric. value use fill cells empty search areas cvars logical. using multiple fields, fun operate ? , fun applied variable separately filename character. Output filename wopt list additional arguments writing files writeRaster","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/rasterizeWin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rasterize points with a moving window — rasterizeWin","text":"SpatRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/rasterizeWin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rasterize points with a moving window — rasterizeWin","text":"","code":"r <- rast(ncol=100, nrow=100, crs=\"local\", xmin=0, xmax=50, ymin=0, ymax=50) set.seed(100) x <- runif(50, 5, 45) y <- runif(50, 5, 45) z <- sample(50) xyz <- data.frame(x,y,z)  r <- rasterizeWin(xyz, r, fun=\"count\", pars=5)  rfuns <- c(\"count\", \"min\", \"max\", \"mean\") x <- lapply(rfuns, function(f) rasterizeWin(xyz, r, fun=f, pars=5)) names(x) <- rfuns  x <- rast(x) #plot(x)"},{"path":"https://rspatial.github.io/terra/reference/rcl.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine row, column, and layer numbers — rcl","title":"Combine row, column, and layer numbers — rcl","text":"Get matrix combination row, column, layer numbers","code":""},{"path":"https://rspatial.github.io/terra/reference/rcl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine row, column, and layer numbers — rcl","text":"","code":"# S4 method for class 'SpatRaster' rcl(x, row=NULL, col=NULL, lyr=NULL)"},{"path":"https://rspatial.github.io/terra/reference/rcl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine row, column, and layer numbers — rcl","text":"x SpatRaster row positive integer row number(s), list thereof, NULL rows col columns lyr layers","code":""},{"path":"https://rspatial.github.io/terra/reference/rcl.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Combine row, column, and layer numbers — rcl","text":"list used least one row, col lyr, evaluated parallel. combinations made list element, across list elements. , case another argument list either length 1 (used cases) length (longest) list, case value coerced list .list multiple arguments list different lengths, theyare recycled longest list.","code":""},{"path":"https://rspatial.github.io/terra/reference/rcl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine row, column, and layer numbers — rcl","text":"matrix","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/rcl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine row, column, and layer numbers — rcl","text":"","code":"x <- rast(ncol=5, nrow=5, nlyr=2) values(x) <- 1:size(x)  rcl(x, 1, 2:3, 1:2) #>      row col lyr #> [1,]   1   2   1 #> [2,]   1   3   1 #> [3,]   1   2   2 #> [4,]   1   3   2  i <- rcl(x, 1, list(1:2, 3:4), 1:2) i #>      row col lyr #> [1,]   1   1   1 #> [2,]   1   2   1 #> [3,]   1   3   2 #> [4,]   1   4   2  # get the values for these cells x[i] #> [1]  1  2 28 29"},{"path":"https://rspatial.github.io/terra/reference/readwrite.html","id":null,"dir":"Reference","previous_headings":"","what":"Read from, or write to, file — readwrite","title":"Read from, or write to, file — readwrite","text":"Methods read write chunks values file. low level methods programmers. Use writeRaster want save entire SpatRaster file one step. much easier use. write chunks, begin opening file writeStart, write values chunks using list returned writeStart. writing done, close file writeStop. blocks returns chunk size information. can useful reading, writing, raster data.","code":""},{"path":"https://rspatial.github.io/terra/reference/readwrite.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read from, or write to, file — readwrite","text":"","code":"# S4 method for class 'SpatRaster' readStart(x)  # S4 method for class 'SpatRaster' readStop(x)  # S4 method for class 'SpatRaster' readValues(x, row=1, nrows=nrow(x), col=1, ncols=ncol(x), mat=FALSE, dataframe=FALSE, ...)  # S4 method for class 'SpatRaster,character' writeStart(x, filename=\"\", overwrite=FALSE, n=4, sources=\"\", ...)  # S4 method for class 'SpatRaster' writeStop(x)  # S4 method for class 'SpatRaster,vector' writeValues(x, v, start, nrows)  # S4 method for class 'SpatRaster' blocks(x, n=4)  fileBlocksize(x)"},{"path":"https://rspatial.github.io/terra/reference/readwrite.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read from, or write to, file — readwrite","text":"x SpatRaster filename character. Output filename v vector cell values written start integer. Row number (counting starts 1) start writing v row positive integer. Row number start , 1 nrow(x) nrows positive integer. many rows? col positive integer. Column number start , 1 ncol(x) ncols positive integer. many columns? Default number columns left start column mat logical. TRUE, values returned numeric matrix instead vector, except dataframe=TRUE. layers x factor, level index returned, label. Use dataframe=TRUE get labels dataframe logical. TRUE, values returned data.frame instead vector (also matrix TRUE) overwrite logical. TRUE, filename overwritten n positive integer indicating many copies data may memory point time. used determine many blocks (large) datasets need read sources character. Filenames may overwritten used input function. Can obtained sources(x) ... writeStart: additional arguments writing files writeRaster readValues: additional arguments data.frame (thus relevant dataframe=TRUE)","code":""},{"path":"https://rspatial.github.io/terra/reference/readwrite.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read from, or write to, file — readwrite","text":"readValues returns vector, matrix, data.frame writeStart returns list can used processing file chunks. methods invisibly return logical value indicating whether successful . purpose side-effect opening closing files.","code":""},{"path":"https://rspatial.github.io/terra/reference/rectify.html","id":null,"dir":"Reference","previous_headings":"","what":"Rectify a SpatRaster — rectify","title":"Rectify a SpatRaster — rectify","text":"Rectify rotated SpatRaster non-rotated object","code":""},{"path":"https://rspatial.github.io/terra/reference/rectify.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rectify a SpatRaster — rectify","text":"","code":"# S4 method for class 'SpatRaster' rectify(x, method=\"bilinear\", aoi=NULL, snap=TRUE,          filename=\"\", ...)"},{"path":"https://rspatial.github.io/terra/reference/rectify.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rectify a SpatRaster — rectify","text":"x SpatRaster rectified method character. Method used resampling. See resample aoi SpatExtent SpatRaster crop x smaller area interest; Using SpatRaster allowing set exact output extent output resolution snap logical. TRUE, origin resolution output case aoi = NULL. relevant aoi SpatExtent filename character. Output filename ... additional arguments writing files writeRaster","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/rectify.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rectify a SpatRaster — rectify","text":"SpatRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/regress.html","id":null,"dir":"Reference","previous_headings":"","what":"Cell level regression — regress","title":"Cell level regression — regress","text":"Run regression model cell SpatRaster. independent variable can either defined vector, another SpatRaster make spatially variable.","code":""},{"path":"https://rspatial.github.io/terra/reference/regress.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cell level regression — regress","text":"","code":"# S4 method for class 'SpatRaster,numeric' regress(y, x, formula=y~x, na.rm=FALSE, cores=1, filename=\"\", overwrite=FALSE, ...)  # S4 method for class 'SpatRaster,SpatRaster' regress(y, x, formula=y~x, na.rm=FALSE, cores=1, filename=\"\", overwrite=FALSE, ...)"},{"path":"https://rspatial.github.io/terra/reference/regress.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cell level regression — regress","text":"y SpatRaster x SpatRaster numeric (length nlyr(x) formula regression formula general form y ~ x. can add additional terms (x^2) na.rm logical. Remove NA values? cores positive integer. cores > 1, 'parallel' package cluster many cores created used. can also supply cluster object. filename character. Output filename overwrite logical. TRUE, filename overwritten ... list named options writing files writeRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/regress.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cell level regression — regress","text":"SpatRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/regress.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cell level regression — regress","text":"","code":"s <- rast(system.file(\"ex/logo.tif\", package=\"terra\"))    x <- regress(s, 1:nlyr(s))"},{"path":"https://rspatial.github.io/terra/reference/relate.html","id":null,"dir":"Reference","previous_headings":"","what":"Spatial relationships between geometries — relate","title":"Spatial relationships between geometries — relate","text":"relate returns logical matrix indicating presence absence specific spatial relationships geometries x y. .related returns logical vector indicating presence absence specific spatial relationships x geometries y.","code":""},{"path":"https://rspatial.github.io/terra/reference/relate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spatial relationships between geometries — relate","text":"","code":"# S4 method for class 'SpatVector,SpatVector' relate(x, y, relation, pairs=FALSE, na.rm=TRUE)  # S4 method for class 'SpatVector,missing' relate(x, y, relation, pairs=FALSE, na.rm=TRUE)  # S4 method for class 'SpatVector,SpatVector' is.related(x, y, relation)"},{"path":"https://rspatial.github.io/terra/reference/relate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spatial relationships between geometries — relate","text":"x SpatVector SpatExtent y missing x relation character. One \"intersects\", \"touches\", \"crosses\", \"overlaps\", \"within\", \"contains\", \"covers\", \"coveredby\", \"disjoint\", \"equals\". can also \"DE-9IM\" string \"FF*FF****\". See Wikipedia GeoTools doc pairs logical. TRUE two-column matrix returned indices cases requested relation TRUE. especially helpful dealing many geometries returned value generally much smaller na.rm logical. TRUE pairs=TRUE, geometries x related geometry y omitted","code":""},{"path":"https://rspatial.github.io/terra/reference/relate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Spatial relationships between geometries — relate","text":"matrix (relate) vector (.related)","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/relate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Spatial relationships between geometries — relate","text":"","code":"# polygons p1 <- vect(\"POLYGON ((0 0, 8 0, 8 9, 0 9, 0 0))\") p2 <- vect(\"POLYGON ((5 6, 15 6, 15 15, 5 15, 5 6))\") p3 <- vect(\"POLYGON ((8 2, 9 2, 9 3, 8 3, 8 2))\") p4 <- vect(\"POLYGON ((2 6, 3 6, 3 8, 2 8, 2 6))\") p5 <- vect(\"POLYGON ((2 12, 3 12, 3 13, 2 13, 2 12))\") p6 <- vect(\"POLYGON ((10 4, 12 4, 12 7, 11 7, 11 6, 10 6, 10 4))\")  p <- rbind(p1, p2, p3, p4, p5, p6) plot(p, col=rainbow(6, alpha=.5)) lines(p, lwd=2) text(p)   ## relate SpatVectors relate(p1, p2, \"intersects\") #>      [,1] #> [1,] TRUE relate(p1, p3, \"touches\") #>      [,1] #> [1,] TRUE relate(p1, p5, \"disjoint\") #>      [,1] #> [1,] TRUE relate(rbind(p1, p2), p4, \"disjoint\") #>       [,1] #> [1,] FALSE #> [2,]  TRUE  ## relate geometries within SpatVectors # which are completely separated? relate(p, relation=\"disjoint\") #>       [,1]  [,2]  [,3]  [,4]  [,5]  [,6] #> [1,] FALSE FALSE FALSE FALSE  TRUE  TRUE #> [2,] FALSE FALSE  TRUE  TRUE  TRUE FALSE #> [3,] FALSE  TRUE FALSE  TRUE  TRUE  TRUE #> [4,] FALSE  TRUE  TRUE FALSE  TRUE  TRUE #> [5,]  TRUE  TRUE  TRUE  TRUE FALSE  TRUE #> [6,]  TRUE FALSE  TRUE  TRUE  TRUE FALSE  # which touch (not overlap or within)? relate(p, relation=\"touches\") #>       [,1]  [,2]  [,3]  [,4]  [,5]  [,6] #> [1,] FALSE FALSE  TRUE FALSE FALSE FALSE #> [2,] FALSE FALSE FALSE FALSE FALSE FALSE #> [3,]  TRUE FALSE FALSE FALSE FALSE FALSE #> [4,] FALSE FALSE FALSE FALSE FALSE FALSE #> [5,] FALSE FALSE FALSE FALSE FALSE FALSE #> [6,] FALSE FALSE FALSE FALSE FALSE FALSE # which overlap (not merely touch, and not within)? relate(p, relation=\"overlaps\") #>       [,1]  [,2]  [,3]  [,4]  [,5]  [,6] #> [1,] FALSE  TRUE FALSE FALSE FALSE FALSE #> [2,]  TRUE FALSE FALSE FALSE FALSE  TRUE #> [3,] FALSE FALSE FALSE FALSE FALSE FALSE #> [4,] FALSE FALSE FALSE FALSE FALSE FALSE #> [5,] FALSE FALSE FALSE FALSE FALSE FALSE #> [6,] FALSE  TRUE FALSE FALSE FALSE FALSE # which are within (not merely overlap)? relate(p, relation=\"within\") #>       [,1]  [,2]  [,3]  [,4]  [,5]  [,6] #> [1,]  TRUE FALSE FALSE FALSE FALSE FALSE #> [2,] FALSE  TRUE FALSE FALSE FALSE FALSE #> [3,] FALSE FALSE  TRUE FALSE FALSE FALSE #> [4,]  TRUE FALSE FALSE  TRUE FALSE FALSE #> [5,] FALSE FALSE FALSE FALSE  TRUE FALSE #> [6,] FALSE FALSE FALSE FALSE FALSE  TRUE  # do they touch or overlap or are within? relate(p, relation=\"intersects\") #>       [,1]  [,2]  [,3]  [,4]  [,5]  [,6] #> [1,]  TRUE  TRUE  TRUE  TRUE FALSE FALSE #> [2,]  TRUE  TRUE FALSE FALSE FALSE  TRUE #> [3,]  TRUE FALSE  TRUE FALSE FALSE FALSE #> [4,]  TRUE FALSE FALSE  TRUE FALSE FALSE #> [5,] FALSE FALSE FALSE FALSE  TRUE FALSE #> [6,] FALSE  TRUE FALSE FALSE FALSE  TRUE  all(relate(p, relation=\"intersects\") ==    (relate(p, relation=\"overlaps\") |     relate(p, relation=\"touches\") |    relate(p, relation=\"within\"))) #> [1] FALSE  #for polygons, \"coveredby\" is \"within\" relate(p, relation=\"coveredby\") #>       [,1]  [,2]  [,3]  [,4]  [,5]  [,6] #> [1,]  TRUE FALSE FALSE FALSE FALSE FALSE #> [2,] FALSE  TRUE FALSE FALSE FALSE FALSE #> [3,] FALSE FALSE  TRUE FALSE FALSE FALSE #> [4,]  TRUE FALSE FALSE  TRUE FALSE FALSE #> [5,] FALSE FALSE FALSE FALSE  TRUE FALSE #> [6,] FALSE FALSE FALSE FALSE FALSE  TRUE  # polygons, lines, and points   pp <- rbind(p1, p2) L1 <- vect(\"LINESTRING(1 11, 4 6, 10 6)\") L2 <- vect(\"LINESTRING(8 14, 12 10)\") L3 <- vect(\"LINESTRING(1 8, 12 14)\") lns <- rbind(L1, L2, L3) pts <- vect(cbind(c(7,10,10), c(3,5,6)))  plot(pp, col=rainbow(2, alpha=.5)) text(pp, paste0(\"POL\", 1:2), halo=TRUE) lines(pp, lwd=2) lines(lns, col=rainbow(3), lwd=4) text(lns, paste0(\"L\", 1:3), halo=TRUE) points(pts, cex=1.5) text(pts, paste0(\"PT\", 1:3), halo=TRUE, pos=4)    relate(lns, relation=\"crosses\") #>       [,1]  [,2]  [,3] #> [1,] FALSE FALSE  TRUE #> [2,] FALSE FALSE  TRUE #> [3,]  TRUE  TRUE FALSE relate(lns, pp, relation=\"crosses\")  #>       [,1]  [,2] #> [1,]  TRUE FALSE #> [2,] FALSE FALSE #> [3,]  TRUE  TRUE relate(lns, pp, relation=\"touches\")  #>       [,1]  [,2] #> [1,] FALSE  TRUE #> [2,] FALSE FALSE #> [3,] FALSE FALSE relate(lns, pp, relation=\"intersects\")  #>       [,1] [,2] #> [1,]  TRUE TRUE #> [2,] FALSE TRUE #> [3,]  TRUE TRUE  relate(lns, pp, relation=\"within\") #>       [,1]  [,2] #> [1,] FALSE FALSE #> [2,] FALSE  TRUE #> [3,] FALSE FALSE # polygons can contain lines or points, not the other way around relate(lns, pp, relation=\"contains\")  #>       [,1]  [,2] #> [1,] FALSE FALSE #> [2,] FALSE FALSE #> [3,] FALSE FALSE relate(pp, lns, relation=\"contains\")  #>       [,1]  [,2]  [,3] #> [1,] FALSE FALSE FALSE #> [2,] FALSE  TRUE FALSE # points and lines can be covered by polygons relate(lns, pp, relation=\"coveredby\") #>       [,1]  [,2] #> [1,] FALSE FALSE #> [2,] FALSE  TRUE #> [3,] FALSE FALSE  relate(pts, pp, \"within\") #>       [,1]  [,2] #> [1,]  TRUE FALSE #> [2,] FALSE FALSE #> [3,] FALSE FALSE relate(pts, pp, \"touches\") #>       [,1]  [,2] #> [1,] FALSE FALSE #> [2,] FALSE FALSE #> [3,] FALSE  TRUE relate(pts, lns, \"touches\") #>       [,1]  [,2]  [,3] #> [1,] FALSE FALSE FALSE #> [2,] FALSE FALSE FALSE #> [3,]  TRUE FALSE FALSE"},{"path":"https://rspatial.github.io/terra/reference/rep.html","id":null,"dir":"Reference","previous_headings":"","what":"Replicate layers — rep","title":"Replicate layers — rep","text":"Replicate layers SpatRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/rep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replicate layers — rep","text":"","code":"# S4 method for class 'SpatRaster' rep(x, ...)"},{"path":"https://rspatial.github.io/terra/reference/rep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replicate layers — rep","text":"x SpatRaster ... arguments rep","code":""},{"path":"https://rspatial.github.io/terra/reference/rep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replicate layers — rep","text":"SpatRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/rep.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Replicate layers — rep","text":"","code":"s <- rast(system.file(\"ex/logo.tif\", package=\"terra\"))    x <- rep(s, 2) nlyr(x) #> [1] 6 names(x) #> [1] \"red\"   \"green\" \"blue\"  \"red\"   \"green\" \"blue\"  x #> class       : SpatRaster  #> dimensions  : 77, 101, 6  (nrow, ncol, nlyr) #> resolution  : 1, 1  (x, y) #> extent      : 0, 101, 0, 77  (xmin, xmax, ymin, ymax) #> coord. ref. : Cartesian (Meter)  #> source      : logo.tif  #> names       : red, green, blue, red, green, blue  #> min values  :   0,     0,    0,   0,     0,    0  #> max values  : 255,   255,  255, 255,   255,  255"},{"path":"https://rspatial.github.io/terra/reference/replace_dollar.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace with $<- — replace_dollar","title":"Replace with $<- — replace_dollar","text":"Replace layer SpatRaster, attribute variable SpatVector","code":""},{"path":"https://rspatial.github.io/terra/reference/replace_dollar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace with $<- — replace_dollar","text":"","code":"# S4 method for class 'SpatRaster' x$name <- value  # S4 method for class 'SpatVector' x$name <- value  # S4 method for class 'SpatExtent' x$name <- value"},{"path":"https://rspatial.github.io/terra/reference/replace_dollar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace with $<- — replace_dollar","text":"x SpatRaster, SpatVector SpatExtent name character. x SpatRaster: layer name. x SpatVector: variable name. x SpatExtent: \"xmin\", \"xmax\". \"ymin\" \"ymax\" value x SpatRaster, SpatRaster TRUE: nlyr(value) == length(); x SpatVector, vector new values; x SpatExtent single number","code":""},{"path":"https://rspatial.github.io/terra/reference/replace_dollar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace with $<- — replace_dollar","text":"x","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/replace_dollar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Replace with $<- — replace_dollar","text":"","code":"f <- system.file(\"ex/lux.shp\", package=\"terra\") v <- vect(f) v$ID_1 <- LETTERS[1:12] v$new <- sample(12) values(v) #>    ID_1       NAME_1 ID_2           NAME_2 AREA    POP new #> 1     A     Diekirch    1         Clervaux  312  18081  12 #> 2     B     Diekirch    2         Diekirch  218  32543   5 #> 3     C     Diekirch    3          Redange  259  18664  10 #> 4     D     Diekirch    4          Vianden   76   5163   4 #> 5     E     Diekirch    5            Wiltz  263  16735   9 #> 6     F Grevenmacher    6       Echternach  188  18899   1 #> 7     G Grevenmacher    7           Remich  129  22366   2 #> 8     H Grevenmacher   12     Grevenmacher  210  29828   3 #> 9     I   Luxembourg    8         Capellen  185  48187  11 #> 10    J   Luxembourg    9 Esch-sur-Alzette  251 176820   6 #> 11    K   Luxembourg   10       Luxembourg  237 182607   7 #> 12    L   Luxembourg   11           Mersch  233  32112   8"},{"path":"https://rspatial.github.io/terra/reference/replace_layers.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace layers or variables — replace_layers","title":"Replace layers or variables — replace_layers","text":"Replace layers SpatRaster (layers ) another SpatRaster replace variables SpatVector. can also create new layers/variables methods.","code":""},{"path":"https://rspatial.github.io/terra/reference/replace_layers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace layers or variables — replace_layers","text":"","code":"# S4 method for class 'SpatRaster,numeric' x[[i]] <- value  # S4 method for class 'SpatRaster,character' x[[i]] <- value  # S4 method for class 'SpatVector,numeric' x[[i]] <- value  # S4 method for class 'SpatVector,character' x[[i]] <- value"},{"path":"https://rspatial.github.io/terra/reference/replace_layers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace layers or variables — replace_layers","text":"SpatRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/replace_layers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace layers or variables — replace_layers","text":"x SpatRaster SpatVector x SpatRaster: layer number(s) name(s). x SpatVector: variable  number(s) name(s) (column attributes) value x SpatRaster: SpatRaster TRUE: nlyr(value) == length(). x SpatVector: vector data.frame","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/replace_layers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Replace layers or variables — replace_layers","text":"","code":"# raster s <- rast(system.file(\"ex/logo.tif\", package=\"terra\"))    s[[\"red\"]] <- mean(s) s[[2]] <- sqrt(s[[1]])  # vector v <- vect(system.file(\"ex/lux.shp\", package=\"terra\")) v[[\"ID_1\"]] <- 12:1"},{"path":"https://rspatial.github.io/terra/reference/replace_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace values of a SpatRaster — replace_values","title":"Replace values of a SpatRaster — replace_values","text":"Replace values SpatRaster. convenience functions smaller objects . larger rasters see link{classify} subst","code":""},{"path":"https://rspatial.github.io/terra/reference/replace_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace values of a SpatRaster — replace_values","text":"","code":"# S4 method for class 'SpatRaster,ANY,ANY,ANY' x[i, j, k] <- value  # S4 method for class 'SpatVector,ANY,ANY' x[i, j] <- value  # S4 method for class 'SpatExtent,numeric,missing' x[i, j] <- value"},{"path":"https://rspatial.github.io/terra/reference/replace_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace values of a SpatRaster — replace_values","text":"x SpatRaster row numbers. numeric, logical, missing rows. Can also SpatRaster SpatVector j column numbers. numeric, logical missing columns k layer number. numeric, logical missing layers value numeric, matrix, data.frame","code":""},{"path":"https://rspatial.github.io/terra/reference/replace_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace values of a SpatRaster — replace_values","text":"SpatRaster","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/replace_values.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Replace values of a SpatRaster — replace_values","text":"","code":"## SpatRaster r <- rast(ncols=5, nrows=5, xmin=0, xmax=5, ymin=0, ymax=5) r[] <- 1:25 r[1,] <- 5 r[,2] <- 10 r[r>10] <- NA  ## SpatVector f <- system.file(\"ex/lux.shp\", package=\"terra\") v <- vect(f) v[2,2] <- \"hello\" v[1,] <- v[10,] v[,3] <- v[,1] v[2, \"NAME_2\"] <- \"terra\" head(v, 3) #>   ID_1     NAME_1 ID_2           NAME_2 AREA    POP #> 1    3 Luxembourg    3 Esch-sur-Alzette  251 176820 #> 2    1      hello    1            terra  218  32543 #> 3    1   Diekirch    1          Redange  259  18664"},{"path":"https://rspatial.github.io/terra/reference/resample.html","id":null,"dir":"Reference","previous_headings":"","what":"Transfer values of a SpatRaster to another one with a different geometry — resample","title":"Transfer values of a SpatRaster to another one with a different geometry — resample","text":"resample transfers values SpatRaster objects align (different origin /resolution). See project change coordinate reference system (crs). origin extent input output , consider using functions instead: aggregate, disagg, extend crop.","code":""},{"path":"https://rspatial.github.io/terra/reference/resample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transfer values of a SpatRaster to another one with a different geometry — resample","text":"","code":"# S4 method for class 'SpatRaster,SpatRaster' resample(x, y, method, threads=FALSE, by_util=FALSE, filename=\"\", ...)"},{"path":"https://rspatial.github.io/terra/reference/resample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transfer values of a SpatRaster to another one with a different geometry — resample","text":"x SpatRaster resampled y SpatRaster geometry x resampled method character. Method used estimating new cell values. One : bilinear: bilinear interpolation (3x3 cell window). used default first layer x categorical average:  can good choice continuous variables output cells overlap multiple input cells. near: nearest neighbor. used default first layer x categorical. method good choice continuous values. mode: modal value. can good choice categrical rasters, output cells overlap multiple input cells. cubic: cubic interpolation (5x5 cell window). cubicspline: cubic B-spline interpolation. (5x5 cell window). lanczos: Lanczos windowed sinc resampling. (7x7 cell window). sum: weighted sum non-NA contributing grid cells. min, q1, median, q3, max: minimum, first quartile, median, third quartile, maximum value. rms: root-mean-square value non-NA contributing grid cells. threads logical. TRUE multiple threads used (faster large files) by_util logical. TRUE GDAL warp utility used filename character. Output filename ... additional arguments writing files writeRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/resample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transfer values of a SpatRaster to another one with a different geometry — resample","text":"SpatRaster","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/resample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transfer values of a SpatRaster to another one with a different geometry — resample","text":"","code":"r <- rast(nrows=3, ncols=3, xmin=0, xmax=10, ymin=0, ymax=10) values(r) <- 1:ncell(r) s <- rast(nrows=25, ncols=30, xmin=1, xmax=11, ymin=-1, ymax=11) x <- resample(r, s, method=\"bilinear\")  opar <- par(no.readonly =TRUE) par(mfrow=c(1,2)) plot(r) plot(x)  par(opar)"},{"path":"https://rspatial.github.io/terra/reference/rescale.html","id":null,"dir":"Reference","previous_headings":"","what":"rescale — rescale","title":"rescale — rescale","text":"Rescale SpatVector SpatRaster. may useful make small inset maps georeferencing.","code":""},{"path":"https://rspatial.github.io/terra/reference/rescale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rescale — rescale","text":"","code":"# S4 method for class 'SpatRaster' rescale(x, fx=0.5, fy=fx, x0, y0)  # S4 method for class 'SpatVector' rescale(x, fx=0.5, fy=fx, x0, y0)"},{"path":"https://rspatial.github.io/terra/reference/rescale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"rescale — rescale","text":"x SpatVector SpatRaster fx numeric > 0. horizontal scaling factor fy numeric > 0. vertical scaling factor x0 numeric. x-coordinate center rescaling. missing, center extent x used y0 numeric. y-coordinate center rescaling. missing, center extent x used","code":""},{"path":"https://rspatial.github.io/terra/reference/rescale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"rescale — rescale","text":"x","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/rescale.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"rescale — rescale","text":"","code":"f <- system.file(\"ex/lux.shp\", package=\"terra\") v <- vect(f) w <- rescale(v, 0.2) plot(v) lines(w, col=\"red\")"},{"path":"https://rspatial.github.io/terra/reference/roll.html","id":null,"dir":"Reference","previous_headings":"","what":"Rolling (moving) functions — roll","title":"Rolling (moving) functions — roll","text":"Compute \"rolling\" \"moving\" values, \"rolling average\" cell SpatRaster. See focal spatially moving averages similar computations. see cumsum cum* functions compute cumulate values.","code":""},{"path":"https://rspatial.github.io/terra/reference/roll.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rolling (moving) functions — roll","text":"","code":"# S4 method for class 'SpatRaster' roll(x, n, fun=mean, type=\"around\", circular=FALSE,       na.rm=FALSE, filename=\"\", ..., wopt=list())   # S4 method for class 'numeric' roll(x, n, fun=mean, type=\"around\", circular=FALSE, na.rm=FALSE, ...)"},{"path":"https://rspatial.github.io/terra/reference/roll.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rolling (moving) functions — roll","text":"x SpatRaster numeric n integer > 1. size \"window\", , number sequential cells use fun fun function like mean, min, max, sum type character. One \"around\", \"\", \"\". choice indicates values used computation. focal cell always used. type \"around\", (n-1)/2 focal cell also included. type = \"\", n-1 cells focal cell included. type = \"\", n-1 cells focal cell included. example, using n=3 element 5 vector; \"around\" used elements 4,5,6; \"\" used elements 3,4,5, \"\" uses elements 5,6,7 circular logical. TRUE, data considered circular nature (e.g. days months year), missing values first last value. na.rm logical. TRUE, NA values ignored (fun) filename character. Output filename ... additional arguments fun wopt list named options writing files writeRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/roll.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rolling (moving) functions — roll","text":"x","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/roll.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rolling (moving) functions — roll","text":"","code":"## numeric roll(1:12, 3, mean) #>  [1] NA  2  3  4  5  6  7  8  9 10 11 NA roll(1:12, 3, mean, \"to\") #>  [1] NA NA  2  3  4  5  6  7  8  9 10 11 roll(1:12, 3, mean, circular=TRUE) #>  [1]  5  2  3  4  5  6  7  8  9 10 11  8  ## SpatRaster r <- rast(ncol=2, nrow=2, nlyr=10, vals=1) r[1,2] = 2 r[2,2] = 4  roll(r, n=3, \"sum\", \"from\", na.rm=FALSE) |> values() #>      lyr.1 lyr.2 lyr.3 lyr.4 lyr.5 lyr.6 lyr.7 lyr.8 lyr.9 lyr.10 #> [1,]     3     3     3     3     3     3     3     3   NaN    NaN #> [2,]     6     6     6     6     6     6     6     6   NaN    NaN #> [3,]     3     3     3     3     3     3     3     3   NaN    NaN #> [4,]    12    12    12    12    12    12    12    12   NaN    NaN roll(r, n=3, \"sum\", \"from\", na.rm=TRUE) |> values() #>      lyr.1 lyr.2 lyr.3 lyr.4 lyr.5 lyr.6 lyr.7 lyr.8 lyr.9 lyr.10 #> [1,]     3     3     3     3     3     3     3     3     2      1 #> [2,]     6     6     6     6     6     6     6     6     4      2 #> [3,]     3     3     3     3     3     3     3     3     2      1 #> [4,]    12    12    12    12    12    12    12    12     8      4 roll(r, n=3, \"sum\", \"from\", circular=TRUE) |> values() #>      lyr.1 lyr.2 lyr.3 lyr.4 lyr.5 lyr.6 lyr.7 lyr.8 lyr.9 lyr.10 #> [1,]     3     3     3     3     3     3     3     3     3      3 #> [2,]     6     6     6     6     6     6     6     6     6      6 #> [3,]     3     3     3     3     3     3     3     3     3      3 #> [4,]    12    12    12    12    12    12    12    12    12     12  roll(r, n=3, \"sum\", \"to\", na.rm=TRUE) |> values() #>      lyr.1 lyr.2 lyr.3 lyr.4 lyr.5 lyr.6 lyr.7 lyr.8 lyr.9 lyr.10 #> [1,]     1     2     3     3     3     3     3     3     3      3 #> [2,]     2     4     6     6     6     6     6     6     6      6 #> [3,]     1     2     3     3     3     3     3     3     3      3 #> [4,]     4     8    12    12    12    12    12    12    12     12  roll(r, n=3, \"sum\", \"around\", circular=TRUE) |> values() #>      lyr.1 lyr.2 lyr.3 lyr.4 lyr.5 lyr.6 lyr.7 lyr.8 lyr.9 lyr.10 #> [1,]     3     3     3     3     3     3     3     3     3      3 #> [2,]     6     6     6     6     6     6     6     6     6      6 #> [3,]     3     3     3     3     3     3     3     3     3      3 #> [4,]    12    12    12    12    12    12    12    12    12     12"},{"path":"https://rspatial.github.io/terra/reference/rotate.html","id":null,"dir":"Reference","previous_headings":"","what":"Rotate data along longitude — rotate","title":"Rotate data along longitude — rotate","text":"Rotate SpatRaster longitude coordinates 0 360, standard coordinates -180 180 degrees (vice-versa). Longitude 0 360 frequently used global climate models. Rotate SpatVector SpatRaster , split=FALSE correct coordinates connected across date line (end \"side\" longitude scale).","code":""},{"path":"https://rspatial.github.io/terra/reference/rotate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rotate data along longitude — rotate","text":"","code":"# S4 method for class 'SpatRaster' rotate(x, left=TRUE, filename=\"\", ...)  # S4 method for class 'SpatVector' rotate(x, longitude=0, split=TRUE, left=TRUE, normalize=FALSE)"},{"path":"https://rspatial.github.io/terra/reference/rotate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rotate data along longitude — rotate","text":"x SpatRaster SpatVector left logical. TRUE, rotate left, else right filename character. Output filename ... additional arguments writing files writeRaster longitude numeric. longitude around rotate split logical. geometries split longitude? normalize logical. output normalized longitudes -180 180? See normalize.longitude","code":""},{"path":"https://rspatial.github.io/terra/reference/rotate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rotate data along longitude — rotate","text":"SpatRaster","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/rotate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rotate data along longitude — rotate","text":"","code":"x <- rast(nrows=9, ncols=18, nl=3, xmin=0, xmax=360) v <- rep(as.vector(t(matrix(1:ncell(x), nrow=9, ncol=18))), 3) values(x) <- v z <- rotate(x)  if (FALSE) { # \\dontrun{ #SpatVector p <- rbind(c(3847903, 1983584 ), c(3847903, 5801864), c(8301883, 5801864), c(8301883, 1983584 )) p <- vect(p, \"polygons\", crs=\"+init=EPSG:3347\") d <- densify(p, 100000) g <- project(d, \"+proj=longlat\")  x <- rotate(g, 50) plot(g) lines(x, col=\"red\") } # }  ## rotate countries to 0-360 longitude #w <- geodata::world(path=\".\") #x <- rotate(w, long=0, split=TRUE, left=FALSE)"},{"path":"https://rspatial.github.io/terra/reference/rowSums.html","id":null,"dir":"Reference","previous_headings":"","what":"row/col sums and means for SpatRaster — rowSums","title":"row/col sums and means for SpatRaster — rowSums","text":"Sum average values SpatRaster layers row column.","code":""},{"path":"https://rspatial.github.io/terra/reference/rowSums.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"row/col sums and means for SpatRaster — rowSums","text":"","code":"# S4 method for class 'SpatRaster' rowSums(x, na.rm=FALSE, dims=1L, ...)  # S4 method for class 'SpatRaster' colSums(x, na.rm=FALSE, dims=1L, ...)  # S4 method for class 'SpatRaster' rowMeans(x, na.rm=FALSE, dims=1L, ...)  # S4 method for class 'SpatRaster' colMeans(x, na.rm=FALSE, dims=1L, ...)"},{"path":"https://rspatial.github.io/terra/reference/rowSums.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"row/col sums and means for SpatRaster — rowSums","text":"x SpatRaster na.rm logical. TRUE, NA values ignored dims argument ignored ... additional arguments (none implemented)","code":""},{"path":"https://rspatial.github.io/terra/reference/rowSums.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"row/col sums and means for SpatRaster — rowSums","text":"matrix","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/rowSums.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"row/col sums and means for SpatRaster — rowSums","text":"","code":"r <- rast(ncols=2, nrows=5, nl=2, vals=1:20) rowSums(r) #>      lyr.1 lyr.2 #> [1,]     3    23 #> [2,]     7    27 #> [3,]    11    31 #> [4,]    15    35 #> [5,]    19    39 colSums(r) #>      lyr.1 lyr.2 #> [1,]    25    75 #> [2,]    30    80 colMeans(r) #>      lyr.1 lyr.2 #> [1,]     5    15 #> [2,]     6    16"},{"path":"https://rspatial.github.io/terra/reference/same.crs.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare coordinate reference systems — same.crs","title":"Compare coordinate reference systems — same.crs","text":"function takes two coordinate reference system descriptions compares equality.","code":""},{"path":"https://rspatial.github.io/terra/reference/same.crs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare coordinate reference systems — same.crs","text":"","code":"same.crs(x, y)"},{"path":"https://rspatial.github.io/terra/reference/same.crs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare coordinate reference systems — same.crs","text":"x character, SpatRaster, SpatVector, CRS, object returns something intelligible withcrs(x) y types x","code":""},{"path":"https://rspatial.github.io/terra/reference/same.crs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare coordinate reference systems — same.crs","text":"logical","code":""},{"path":"https://rspatial.github.io/terra/reference/same.crs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare coordinate reference systems — same.crs","text":"","code":"r <- rast() same.crs(r, \"+proj=longlat\") #> [1] TRUE  same.crs(r, \"+proj=utm +zone=1\") #> [1] FALSE"},{"path":"https://rspatial.github.io/terra/reference/sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Take a regular sample — spatSample","title":"Take a regular sample — spatSample","text":"Take spatial sample SpatRaster, SpatVector SpatExtent. Sampling SpatVector SpatExtent always returns SpatVector points. SpatRaster, can get cell values, cell numbers (cells=TRUE), coordinates (xy=TRUE) (method=\"regular\" .raster=TRUE) get new SpatRaster extent, fewer cells. order assure regularity requesting regular sample, number cells points returned may exactly size requested.","code":""},{"path":"https://rspatial.github.io/terra/reference/sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Take a regular sample — spatSample","text":"","code":"# S4 method for class 'SpatRaster' spatSample(x, size, method=\"random\", replace=FALSE, na.rm=FALSE,      as.raster=FALSE, as.df=TRUE, as.points=FALSE, values=TRUE, cells=FALSE,      xy=FALSE, ext=NULL, warn=TRUE, weights=NULL, exp=5, exhaustive=FALSE,    exact=FALSE, each=TRUE)  # S4 method for class 'SpatVector' spatSample(x, size, method=\"random\", strata=NULL, chess=\"\")  # S4 method for class 'SpatExtent' spatSample(x, size, method=\"random\", lonlat, as.points=FALSE, exact=FALSE)"},{"path":"https://rspatial.github.io/terra/reference/sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Take a regular sample — spatSample","text":"x SpatRaster, SpatVector SpatExtent size numeric. sample size. x SpatVector, can also provide vector length x case sampling done separately geometry. x SpatRaster, using method=\"regular\" can specify size two numbers (number rows columns). Note using method=\"stratified\", sample size returned stratum method character. \"regular\" \"random\", x SpatRaster, can also \"stratified\" (value x stratum) \"weights\" (value x probability weight) replace logical. TRUE, sampling replacement (method=\"random\") na.rm logical. TRUE, NAs removed. used random sampling cell values. method=\"random\", .raster=FALSE, cells=FALSE .raster logical. TRUE, SpatRaster returned .df logical. TRUE, data.frame returned instead matrix .points logical. TRUE, SpatVector points returned values logical. TRUE raster cell values returned cells logical. TRUE, cell numbers returned. method=\"stratified\" always set TRUE xy=FALSE xy logical. TRUE, cell coordinates returned ext SpatExtent NULL restrict sampling subset area x warn logical. Give warning sample size returned smaller requested weights SpatRaster. Used provide weights method=\"stratified\" lonlat logical. TRUE, sampling SpatExtent weighted cos(latitude). SpatRaster SpatVector done based crs, ignored .raster=TRUE exp numeric >= 1. \"Expansion factor\" multiplied size get initial sample used stratified samples random samples na.rm=TRUE try get least size samples exhaustive logical. TRUE (method==\"random\" na.rm=TRUE) method==\"stratified\", cells NA determined sample taken cells. useful dealing large raster sparse (cells NA). Otherwise, default approach may find enough samples. used cases, especially large rasters mostly values exact logical. TRUE method==\"regular\", sample returned exactly size, perhaps expense regularity. Otherwise get least size many samples. Ignored lon/lat rasters logical. TRUE method==\"stratified\", sample returned size stratum. Otherwise size total sample size strata NULL, stratified random sampling done, taking size samples stratum. x polygon geometry, strata must field name (index) x. x point geometry, strata can SpatVector polygons SpatRaster chess character. One \"\", \"white\", \"black\". stratified sampling strata SpatRaster. \"\", samples taken alternate cells, organized like \"white\" \"black\" fields chessboard","code":""},{"path":"https://rspatial.github.io/terra/reference/sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Take a regular sample — spatSample","text":"numeric matrix, data.frame, SpatRaster SpatVector","code":""},{"path":"https://rspatial.github.io/terra/reference/sample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Take a regular sample — spatSample","text":"","code":"f <- system.file(\"ex/elev.tif\", package=\"terra\") r <- rast(f) s <- spatSample(r, 10, as.raster=TRUE) spatSample(r, 5) #>   elevation #> 1       288 #> 2        NA #> 3       497 #> 4        NA #> 5        NA spatSample(r, 5, na.rm=TRUE) #>   elevation #> 1       458 #> 2       269 #> 3       271 #> 4       142 #> 5       202 spatSample(r, 5, \"regular\") #>   elevation #> 1       479 #> 2       NaN #> 3       NaN #> 4       419 #> 5       290 #> 6       306 #> 7       281 #> 8       286 #> 9       NaN  ## if you require cell numbers and/or coordinates size <- 6 spatSample(r, 6, \"random\", cells=TRUE, xy=TRUE, values=FALSE) #>      cell        x        y #> [1,] 5800 5.779167 49.67917 #> [2,] 7874 6.437500 49.50417 #> [3,]  843 6.429167 50.12083 #> [4,]  426 6.120833 50.15417 #> [5,] 2775 5.904167 49.94583 #> [6,] 2267 6.420833 49.99583  # regular, with values  spatSample(r, 6, \"regular\", cells=TRUE, xy=TRUE) #>   cell        x        y elevation #> 1 7458 6.137500 49.53750       264 #> 2 7505 6.529167 49.53750        NA #> 3 7411 5.745833 49.53750        NA #> 4 5368 6.137500 49.72083       289 #> 5 5415 6.529167 49.72083        NA #> 6 5321 5.745833 49.72083        NA #> 7 3183 6.137500 49.91250       322 #> 8 1093 6.137500 50.09583        NA  # stratified rr <- rast(ncol=10, nrow=10, names=\"stratum\") set.seed(1) values(rr) <- round(runif(ncell(rr), 1, 3)) spatSample(rr, 2, \"stratified\", xy=TRUE) #>      x   y stratum #> 1 -126  63       1 #> 2  126 -27       1 #> 3  126  27       2 #> 4 -162  81       2 #> 5   18 -45       3 #> 6  -18  27       3  s <- spatSample(rr, 5, \"stratified\", as.points=TRUE, each=FALSE) plot(rr, plg=list(title=\"raster\")) plot(s, 1, add=TRUE, plg=list(x=185, y=1, title=\"points\"), col=rainbow(5))    ## SpatExtent  e <- ext(r) spatSample(e, 10, \"random\", lonlat=TRUE) #>              x        y #>  [1,] 6.079256 49.98471 #>  [2,] 6.318611 50.16477 #>  [3,] 5.983956 49.88864 #>  [4,] 6.319211 50.07627 #>  [5,] 6.103970 49.45971 #>  [6,] 6.226828 49.48651 #>  [7,] 6.455581 49.47558 #>  [8,] 6.330888 49.71458 #>  [9,] 5.977512 49.91053 #> [10,] 5.869123 49.52883  ## SpatVector f <- system.file(\"ex/lux.shp\", package=\"terra\") v <- vect(f)  # sample the geometries  i <- sample(v, 3)  # sample points in geometries p <- spatSample(v, 3)"},{"path":"https://rspatial.github.io/terra/reference/sapp.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply a terra function that takes only a single layer and returns a SpatRaster to all layers of a SpatRaster — sapp","title":"Apply a terra function that takes only a single layer and returns a SpatRaster to all layers of a SpatRaster — sapp","text":"Apply layers SpatRaster function takes single layer SpatRaster returns SpatRaster (rare). cases can also use lapply sapply . apply method sub-dataset (SpatRaster) SpatRasterDataset","code":""},{"path":"https://rspatial.github.io/terra/reference/sapp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply a terra function that takes only a single layer and returns a SpatRaster to all layers of a SpatRaster — sapp","text":"","code":"# S4 method for class 'SpatRaster' sapp(x, fun, ..., filename=\"\", overwrite=FALSE, wopt=list())  # S4 method for class 'SpatRasterDataset' sapp(x, fun, ..., filename=\"\", overwrite=FALSE, wopt=list())"},{"path":"https://rspatial.github.io/terra/reference/sapp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply a terra function that takes only a single layer and returns a SpatRaster to all layers of a SpatRaster — sapp","text":"x SpatRaster SpatRasterDataset fun x SpatRaster: function takes SpatRaster argument can applied layer x (e.g. terrain.   x SpatRasterDataset: function applied layers SpatRasters x (e.g. mean ... additional arguments passed fun filename character. Output filename overwrite logical. TRUE, filename overwritten wopt list named options writing files writeRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/sapp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply a terra function that takes only a single layer and returns a SpatRaster to all layers of a SpatRaster — sapp","text":"SpatRaster","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/sapp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply a terra function that takes only a single layer and returns a SpatRaster to all layers of a SpatRaster — sapp","text":"","code":"s <- rast(system.file(\"ex/logo.tif\", package=\"terra\")) + 1    #SpatRasterDataset sd <- sds(s*2, s/2) y <- sapp(sd, mean) z <- sapp(sd, \\(i) 2 * mean(i))"},{"path":"https://rspatial.github.io/terra/reference/sbar.html","id":null,"dir":"Reference","previous_headings":"","what":"scale bar — sbar","title":"scale bar — sbar","text":"Add scale bar map","code":""},{"path":"https://rspatial.github.io/terra/reference/sbar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"scale bar — sbar","text":"","code":"sbar(d, xy=NULL, type=\"line\", divs=2, below=\"\", lonlat=NULL, labels,   adj=c(0.5, -1), lwd=2, xpd=TRUE, ticks=FALSE, scaleby=1, halo=TRUE, ...)"},{"path":"https://rspatial.github.io/terra/reference/sbar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"scale bar — sbar","text":"d numeric. Distance covered scale bar. scale bar, units coordinates plot (map), km angular (longitude/latitude) data; see argument lonlat. can also missing xy numeric. x y coordinate place scale bar. can also one following character values: \"bottomleft\", \"bottom\", \"bottomright\", topleft\", \"top\", \"topright\", \"left\", \"right\", NULL type sbar: \"line\" \"bar\" divs number divisions bar: 2 4 character. Text go scale bar (e.g., \"kilometers\") lonlat logical NULL. logical, TRUE indicates plot using longitude/latitude coordinates. NULL guessed plot's coordinates labels vector three numbers label scale bar (beginning, midpoint, end) adj adjustment text placement lwd line width \"line\" type scale bar xpd logical. TRUE, scale bar can outside plotting area ticks logical numeric. FALSE, tick marks added \"line\" scale bar. length tick marks can specified scaleby numeric. labels provided. labels divided number. example, use 1000 go m km halo logical. TRUE \"line\" type scale bar gets white background ... graphical arguments passed methods","code":""},{"path":"https://rspatial.github.io/terra/reference/sbar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"scale bar — sbar","text":"none","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/sbar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"scale bar — sbar","text":"","code":"f <- system.file(\"ex/meuse.tif\", package=\"terra\") r <- rast(f) plot(r) sbar() sbar(1000, xy=c(178500, 333500), type=\"bar\", divs=4, cex=.8) sbar(1000, xy=\"bottomright\", divs=3, cex=.8, ticks=TRUE) north(d=250, c(178550, 332500))    f <- system.file(\"ex/elev.tif\", package=\"terra\") r <- rast(f) plot(r, type=\"interval\") sbar(20, c(6.2, 50.1), type=\"bar\", cex=.8, divs=4) sbar(15, c(6.3, 50), type=\"bar\", below=\"km\", label=c(0,7.5,15), cex=.8) sbar(15, c(6.65, 49.8), cex=.8, label=c(0,\"km\",15)) north(type=2) sbar(15, c(6.65, 49.7), cex=.8, label=\"15 kilometer\", lwd=5) sbar(15, c(6.65, 49.6), divs=4, cex=.8, below=\"km\")"},{"path":"https://rspatial.github.io/terra/reference/scale.html","id":null,"dir":"Reference","previous_headings":"","what":"Scale values — scale","title":"Scale values — scale","text":"Center /scale raster data. details see scale","code":""},{"path":"https://rspatial.github.io/terra/reference/scale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scale values — scale","text":"","code":"# S4 method for class 'SpatRaster' scale(x, center=TRUE, scale=TRUE)"},{"path":"https://rspatial.github.io/terra/reference/scale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scale values — scale","text":"x SpatRaster center logical numeric. TRUE, centering done subtracting layer means (omitting NAs), FALSE, centering done. center numeric vector (recycled nlyr(x)), layer x corresponding value center subtracted . scale logical numeric. TRUE, scaling done dividing (centered) layers x standard deviations center TRUE, root mean square otherwise. scale FALSE, scaling done. scale numeric vector (recycled nlyr(x)), layer x divided corresponding value. Scaling done centering.","code":""},{"path":"https://rspatial.github.io/terra/reference/scale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scale values — scale","text":"SpatRaster","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/scale.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scale values — scale","text":"","code":"r <- rast(system.file(\"ex/logo.tif\", package=\"terra\"))    s <- scale(r)  ## the equivalent, computed in steps m <- global(r, \"mean\") rr <- r - m[,1] rms <- global(rr, \"rms\") ss <- rr / rms[,1]"},{"path":"https://rspatial.github.io/terra/reference/scale_linear.html","id":null,"dir":"Reference","previous_headings":"","what":"Scale values linearly — scale_linear","title":"Scale values linearly — scale_linear","text":"Linear scaling raster cell values specified minimum maximum value.","code":""},{"path":"https://rspatial.github.io/terra/reference/scale_linear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scale values linearly — scale_linear","text":"","code":"# S4 method for class 'SpatRaster' scale_linear(x, min=0, max=1, filename=\"\", ...)"},{"path":"https://rspatial.github.io/terra/reference/scale_linear.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scale values linearly — scale_linear","text":"x SpatRaster min minimum value scale max maximum value scale filename character. Output filename ... additional arguments writing files writeRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/scale_linear.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scale values linearly — scale_linear","text":"SpatRaster","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/scale_linear.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scale values linearly — scale_linear","text":"","code":"r <- rast(system.file(\"ex/logo.tif\", package=\"terra\"))    s1 <- scale_linear(r) s2 <- scale_linear(r, 1, 10)"},{"path":"https://rspatial.github.io/terra/reference/scatter.html","id":null,"dir":"Reference","previous_headings":"","what":"Scatterplot of two SpatRaster layers — scatterplot","title":"Scatterplot of two SpatRaster layers — scatterplot","text":"Scatterplot values two SpatRaster layers","code":""},{"path":"https://rspatial.github.io/terra/reference/scatter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scatterplot of two SpatRaster layers — scatterplot","text":"","code":"# S4 method for class 'SpatRaster,SpatRaster' plot(x, y, maxcell=100000, warn=TRUE, nc, nr,     maxnl=16, smooth=FALSE, gridded=FALSE, ncol=25, nrow=25, ...)"},{"path":"https://rspatial.github.io/terra/reference/scatter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scatterplot of two SpatRaster layers — scatterplot","text":"x SpatRaster y SpatRaster maxcell positive integer. Maximum number cells use plot nc positive integer. Optional. number columns divide plotting device (plotting multiple layers) nr positive integer. Optional. number rows divide plotting device (plotting multiple layers) maxnl positive integer. Maximum number layers plot (multi-layer objects) smooth logical. TRUE show smooth scatterplot gridded logical. TRUE scatterplot gridded (counts cells) warn boolean. Show warning sample pixels used (scatterplot ) ncol positive integer. Number columns gridding nrow positive integer. Number rows gridding ... additional graphical arguments","code":""},{"path":"https://rspatial.github.io/terra/reference/scatter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scatterplot of two SpatRaster layers — scatterplot","text":"","code":"s <- rast(system.file(\"ex/logo.tif\", package=\"terra\"))    plot(s[[1]], s[[2]])  plot(s, sqrt(s[[3:1]]))"},{"path":"https://rspatial.github.io/terra/reference/scoff.html","id":null,"dir":"Reference","previous_headings":"","what":"Scale (gain) and offset — scoff","title":"Scale (gain) and offset — scoff","text":"functions can used get set scale (gain) offset parameters used transform values reading raster data file. parameters applied raw values using formula : value <- value * scale + offset default value scale 1 offset 0. 'scale' sometimes referred 'gain'. Note setting scale /offset intended used values stored file. values memory, assigning scale offset values lead immediate computation new values; cases clearer use Arith-methods.","code":""},{"path":"https://rspatial.github.io/terra/reference/scoff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scale (gain) and offset — scoff","text":"","code":"# S4 method for class 'SpatRaster' scoff(x)  # S4 method for class 'SpatRaster' scoff(x) <- value"},{"path":"https://rspatial.github.io/terra/reference/scoff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scale (gain) and offset — scoff","text":"x SpatRaster value two-column matrix scale (first column) offset (second column) layer. NULL remove scale offset values","code":""},{"path":"https://rspatial.github.io/terra/reference/scoff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scale (gain) and offset — scoff","text":"matrix changed SpatRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/scoff.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scale (gain) and offset — scoff","text":"","code":"r <- rast(system.file(\"ex/elev.tif\", package=\"terra\")) minmax(r) #>     elevation #> min       141 #> max       547 scoff(r) #>      scale offset #> [1,]     1      0 r[4603] #>   elevation #> 1       279  scoff(r) <- cbind(10, 5) minmax(r) #>     elevation #> min      1415 #> max      5475 scoff(r) #>      scale offset #> [1,]    10      5 r[4603] #>   elevation #> 1      2795"},{"path":"https://rspatial.github.io/terra/reference/sds.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a SpatRasterDataset — sds","title":"Create a SpatRasterDataset — sds","text":"Methods create SpatRasterDataset. object hold \"sub-datasets\", SpatRaster cases multiple layers. See describe getting information sub-datasets present file.","code":""},{"path":"https://rspatial.github.io/terra/reference/sds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a SpatRasterDataset — sds","text":"","code":"# S4 method for class 'missing' sds(x)   # S4 method for class 'character' sds(x, ids=0, opts=NULL, raw=FALSE)  # S4 method for class 'SpatRaster' sds(x, ...)   # S4 method for class 'list' sds(x)   # S4 method for class 'array' sds(x, crs=\"\", extent=NULL)"},{"path":"https://rspatial.github.io/terra/reference/sds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a SpatRasterDataset — sds","text":"x character (filename), SpatRaster, list SpatRasters, missing. multiple filenames provided, attempted make SpatRasters , combine SpatRasterDataset ids optional. vector integer subdataset ids. Ignored first value positive integer opts character. GDAL dataset open options raw logical. TRUE, scale offset values ignored crs character. Description Coordinate Reference System (map projection) PROJ.4, WKT authority:code notation. argument missing, x coordinates within -360 .. 360 y coordinates within -90 .. 90, longitude/latitude assigned extent SpatExtent ... additional SpatRaster objects","code":""},{"path":"https://rspatial.github.io/terra/reference/sds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a SpatRasterDataset — sds","text":"SpatRasterDataset","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/sds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a SpatRasterDataset — sds","text":"","code":"s <- rast(system.file(\"ex/logo.tif\", package=\"terra\"))    x <- sds(s, s/2) names(x) <- c(\"first\", \"second\") x #> class       : SpatRasterDataset  #> subdatasets : 2  #> dimensions  : 77, 101 (nrow, ncol) #> nlyr        : 3, 3  #> resolution  : 1, 1  (x, y) #> extent      : 0, 101, 0, 77  (xmin, xmax, ymin, ymax) #> coord. ref. : Cartesian (Meter)  #> source(s)   : logo.tif, memory  #> names       : first, second  length(x) #> [1] 2  # extract the second SpatRaster x[2] #> class       : SpatRaster  #> dimensions  : 77, 101, 3  (nrow, ncol, nlyr) #> resolution  : 1, 1  (x, y) #> extent      : 0, 101, 0, 77  (xmin, xmax, ymin, ymax) #> coord. ref. : Cartesian (Meter)  #> source(s)   : memory #> varname     : logo  #> names       :   red, green,  blue  #> min values  :   0.0,   0.0,   0.0  #> max values  : 127.5, 127.5, 127.5   a <- array(1:9, c(3,3,3,3)) sds(a) #> class       : SpatRasterDataset  #> subdatasets : 3  #> dimensions  : 3, 3 (nrow, ncol) #> nlyr        : 3, 3, 3  #> resolution  : 1, 1  (x, y) #> extent      : 0, 3, 0, 3  (xmin, xmax, ymin, ymax) #> coord. ref. :   #> source(s)   : memory"},{"path":"https://rspatial.github.io/terra/reference/segregate.html","id":null,"dir":"Reference","previous_headings":"","what":"segregate — segregate","title":"segregate — segregate","text":"Create SpatRaster layer class (value, subset values) input SpatRaster. example, input vegetation types, function create layer (presence/absence; dummy variable) classes. called \"one-hot encoding\" \"dummy encoding\" (dummy encoding scheme can remove () one output layers redundant).","code":""},{"path":"https://rspatial.github.io/terra/reference/segregate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"segregate — segregate","text":"","code":"# S4 method for class 'SpatRaster' segregate(x, classes=NULL, keep=FALSE, other=0, round=FALSE, digits=0, filename=\"\", ...)"},{"path":"https://rspatial.github.io/terra/reference/segregate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"segregate — segregate","text":"x SpatRaster classes numeric. values (classes) layers made. NULL classes used keep logical. TRUE, cells class represented layer get value, rather value 1 numeric. Value assign cells class represented layer round logical. values rounded first? digits integer. Number digits round values filename character. Output filename ... additional arguments writing files writeRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/segregate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"segregate — segregate","text":"SpatRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/segregate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"segregate — segregate","text":"","code":"r <- rast(nrows=5, ncols=5) values(r) <- rep(c(1:4, NA), each=5) b <- segregate(r) bb <- segregate(r, keep=TRUE, other=NA)"},{"path":"https://rspatial.github.io/terra/reference/select.html","id":null,"dir":"Reference","previous_headings":"","what":"Spatial selection — sel","title":"Spatial selection — sel","text":"Geometrically subset SpatRaster SpatVector (done) drawing plot (map). Note many installations work well default RStudio plotting device. work around , can first run dev.new(noRStudioGD = TRUE) create separate window plotting, use plot() followed sel() click map. may also help set RStudio \"Tools/Global Options/Appearance/Zoom\" 100","code":""},{"path":"https://rspatial.github.io/terra/reference/select.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spatial selection — sel","text":"","code":"# S4 method for class 'SpatRaster' sel(x, ...)  # S4 method for class 'SpatVector' sel(x, use=\"rec\", show=TRUE, col=\"cyan\", draw=TRUE, ...)"},{"path":"https://rspatial.github.io/terra/reference/select.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spatial selection — sel","text":"x SpatRaster SpatVector use character indicating draw. One \"rec\" (rectangle) \"pol\" (polygon) show logical. TRUE selected geometries shown map col color used drawing draw=TRUE draw logical. TRUE area drawn select geometries shown map ... additional graphics arguments drawing selected geometries","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/select.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Spatial selection — sel","text":"SpatRaster SpatVector","code":""},{"path":"https://rspatial.github.io/terra/reference/select.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Spatial selection — sel","text":"","code":"if (FALSE) { # \\dontrun{ # select a subset of a SpatRaster r <- rast(nrows=10, ncols=10) values(r) <- 1:ncell(r) plot(r) s <- sel(r) # now click on the map twice  # plot the selection on a new canvas: x11() plot(s)  # vector f <- system.file(\"ex/lux.shp\", package=\"terra\") v <- vect(f) plot(v) x <- sel(v) # now click on the map twice x } # }"},{"path":"https://rspatial.github.io/terra/reference/selectHigh.html","id":null,"dir":"Reference","previous_headings":"","what":"select cells with high or low values — selectHighest","title":"select cells with high or low values — selectHighest","text":"Identify n cells highest lowest values first layer SpatRaster.","code":""},{"path":"https://rspatial.github.io/terra/reference/selectHigh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"select cells with high or low values — selectHighest","text":"","code":"# S4 method for class 'SpatRaster' selectHighest(x, n, low=FALSE)"},{"path":"https://rspatial.github.io/terra/reference/selectHigh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"select cells with high or low values — selectHighest","text":"x SpatRaster. first layer processed n number cells select low logical. TRUE, lowest values selected instead highest values","code":""},{"path":"https://rspatial.github.io/terra/reference/selectHigh.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"select cells with high or low values — selectHighest","text":"SpatRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/selectHigh.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"select cells with high or low values — selectHighest","text":"","code":"f <- system.file(\"ex/elev.tif\", package=\"terra\") r <- rast(f) x <- selectHighest(r, 1000) y <- selectHighest(r, 1000, TRUE)  m <- merge(y-1, x) levels(m) <- data.frame(id=0:1, elevation=c(\"low\", \"high\")) plot(m)"},{"path":"https://rspatial.github.io/terra/reference/selectRange.html","id":null,"dir":"Reference","previous_headings":"","what":"Select the values of a range of layers, as specified by cell values in another SpatRaster — selectRange","title":"Select the values of a range of layers, as specified by cell values in another SpatRaster — selectRange","text":"Use single layer SpatRaster select cell values different layers multi-layer SpatRaster. values SpatRaster select layers (y) whole numbers 1 nlyr(x) (values outside range ignored). See rapp applying function range variable size. See extract extraction values cell, point, otherwise.","code":""},{"path":"https://rspatial.github.io/terra/reference/selectRange.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select the values of a range of layers, as specified by cell values in another SpatRaster — selectRange","text":"","code":"# S4 method for class 'SpatRaster' selectRange(x, y, z=1, repint=0, filename=\"\", ...)"},{"path":"https://rspatial.github.io/terra/reference/selectRange.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select the values of a range of layers, as specified by cell values in another SpatRaster — selectRange","text":"x SpatRaster y SpatRaster. Cell values must positive integers. indicate first layer select cell z positive integer. number layers select repint integer > 1 < nlyr(x) allowing repeated selection fixed interval. example, x 36 layers, value cell y=2 repint = 12, values layers 2, 14 26 returned filename character. Output filename ... additional arguments writing files writeRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/selectRange.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select the values of a range of layers, as specified by cell values in another SpatRaster — selectRange","text":"SpatRaster","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/selectRange.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select the values of a range of layers, as specified by cell values in another SpatRaster — selectRange","text":"","code":"r <- rast(ncols=10, nrows=10) values(r) <- 1 s <- c(r, r+2, r+5) s <- c(s, s) set.seed(1) values(r) <- sample(3, ncell(r), replace=TRUE) x <- selectRange(s, r)  x <- selectRange(s, r, 3)"},{"path":"https://rspatial.github.io/terra/reference/serialize.html","id":null,"dir":"Reference","previous_headings":"","what":"saveRDS and serialize for SpatVector and SpatRaster* — serialize","title":"saveRDS and serialize for SpatVector and SpatRaster* — serialize","text":"serialize saveRDS SpatVector, SpatRaster, SpatRasterDataset SpatRasterCollection. Note objects first \"packed\" wrap, unserialize/readRDS need unpacked rast vect. Extensive use functions recommended. Especially SpatRaster generally much efficient use writeRaster write, e.g., GTiff file.","code":""},{"path":"https://rspatial.github.io/terra/reference/serialize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"saveRDS and serialize for SpatVector and SpatRaster* — serialize","text":"","code":"# S4 method for class 'SpatRaster' saveRDS(object, file=\"\", ascii = FALSE, version = NULL, compress=TRUE, refhook = NULL)  # S4 method for class 'SpatRasterDataset' saveRDS(object, file=\"\", ascii = FALSE, version = NULL, compress=TRUE, refhook = NULL)  # S4 method for class 'SpatRasterCollection' saveRDS(object, file=\"\", ascii = FALSE, version = NULL, compress=TRUE, refhook = NULL)  # S4 method for class 'SpatVector' saveRDS(object, file=\"\", ascii = FALSE, version = NULL, compress=TRUE, refhook = NULL)  # S4 method for class 'SpatRaster' serialize(object, connection, ascii = FALSE, xdr = TRUE, version = NULL, refhook = NULL)  # S4 method for class 'SpatVector' serialize(object, connection, ascii = FALSE, xdr = TRUE, version = NULL, refhook = NULL)"},{"path":"https://rspatial.github.io/terra/reference/serialize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"saveRDS and serialize for SpatVector and SpatRaster* — serialize","text":"object SpatVector, SpatRaster, SpatRasterDataset SpatRasterCollection file file name save object connection see serialize ascii see serialize saveRDS version see serialize saveRDS compress see serialize saveRDS refhook see serialize saveRDS xdr see serialize saveRDS","code":""},{"path":"https://rspatial.github.io/terra/reference/serialize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"saveRDS and serialize for SpatVector and SpatRaster* — serialize","text":"Packed* object","code":""},{"path":"https://rspatial.github.io/terra/reference/serialize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"saveRDS and serialize for SpatVector and SpatRaster* — serialize","text":"","code":"f <- system.file(\"ex/lux.shp\", package=\"terra\") v <- vect(f) p <- serialize(v, NULL) head(p) #> [1] 58 0a 00 00 00 03 x <- unserialize(p) x #>  class       : SpatVector  #>  geometry    : polygons  #>  dimensions  : 12, 6  (geometries, attributes) #>  extent      : 5.74414, 6.528252, 49.44781, 50.18162  (xmin, xmax, ymin, ymax) #>  coord. ref. : lon/lat WGS 84 (EPSG:4326)  #>  names       :  ID_1   NAME_1  ID_2   NAME_2  AREA       POP #>  type        : <num>    <chr> <num>    <chr> <num>     <num> #>  values      :     1 Diekirch     1 Clervaux   312 1.808e+04 #>                    1 Diekirch     2 Diekirch   218 3.254e+04 #>                    1 Diekirch     3  Redange   259 1.866e+04"},{"path":"https://rspatial.github.io/terra/reference/setValues.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the values of raster cells or of geometry attributes — setValues","title":"Set the values of raster cells or of geometry attributes — setValues","text":"Set cell values SpatRaster attributes SpatVector. large SpatRasters use init instead set values.","code":""},{"path":"https://rspatial.github.io/terra/reference/setValues.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the values of raster cells or of geometry attributes — setValues","text":"","code":"# S4 method for class 'SpatRaster,ANY' values(x) <- value  # S4 method for class 'SpatRaster,ANY' setValues(x, values, keeptime=TRUE, keepunits=TRUE, keepnames=FALSE, props=FALSE)  # S4 method for class 'SpatVector,ANY' values(x) <- value"},{"path":"https://rspatial.github.io/terra/reference/setValues.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the values of raster cells or of geometry attributes — setValues","text":"x SpatRaster SpatVector value SpatRaster: numeric, matrix data.frame. length numeric values must match total number cells (ncell(x) * nlyr(x)), single value. number columns matrix data.frame must match number layers x, number rows must match number cells x. also possible use matrix number rows x number columns matches ncol(x) * nlyr(x). SpatVector: data.frame, matrix, vector, NULL values value keeptime logical. TRUE time stamps kept keepunits logical. FALSE units discarded keepnames logical. FALSE layer names replaced column names y (present) props logical. TRUE properties (categories color-table) kept","code":""},{"path":"https://rspatial.github.io/terra/reference/setValues.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the values of raster cells or of geometry attributes — setValues","text":"object type x","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/setValues.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the values of raster cells or of geometry attributes — setValues","text":"","code":"f <- system.file(\"ex/elev.tif\", package=\"terra\") r <- rast(f) x <- setValues(r, 1:ncell(r)) x #> class       : SpatRaster  #> dimensions  : 90, 95, 1  (nrow, ncol, nlyr) #> resolution  : 0.008333333, 0.008333333  (x, y) #> extent      : 5.741667, 6.533333, 49.44167, 50.19167  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (EPSG:4326)  #> source(s)   : memory #> varname     : elev  #> name        : elevation  #> min value   :         1  #> max value   :      8550  values(x) <- runif(ncell(x)) x #> class       : SpatRaster  #> dimensions  : 90, 95, 1  (nrow, ncol, nlyr) #> resolution  : 0.008333333, 0.008333333  (x, y) #> extent      : 5.741667, 6.533333, 49.44167, 50.19167  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (EPSG:4326)  #> source(s)   : memory #> varname     : elev  #> name        :    elevation  #> min value   : 0.0001064336  #> max value   : 0.9999305937  head(x) #>    elevation #> 1 0.20754511 #> 2 0.22865814 #> 3 0.59571200 #> 4 0.57487220 #> 5 0.07706438 #> 6 0.03554058  f <- system.file(\"ex/lux.shp\", package=\"terra\") v <- vect(f) values(v) <- data.frame(ID=1:12, name=letters[1:12]) head(v) #>   ID name #> 1  1    a #> 2  2    b #> 3  3    c #> 4  4    d #> 5  5    e #> 6  6    f"},{"path":"https://rspatial.github.io/terra/reference/shade.html","id":null,"dir":"Reference","previous_headings":"","what":"Hill shading — shade","title":"Hill shading — shade","text":"Compute hill-shade slope aspect layers (radians). Slope aspect can computed function terrain. hill-shade layer often used backdrop top another, semi-transparent, layer drawn.","code":""},{"path":"https://rspatial.github.io/terra/reference/shade.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hill shading — shade","text":"","code":"shade(slope, aspect, angle=45, direction=0, normalize=FALSE,    filename=\"\", overwrite=FALSE, ...)"},{"path":"https://rspatial.github.io/terra/reference/shade.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hill shading — shade","text":"slope SpatRasterwith slope values (radians) aspect SpatRaster aspect values (radians) angle elevation angle(s) light source (sun), degrees direction direction (azimuth) angle(s) light source (sun), degrees normalize Logical. TRUE, values zero set zero results multiplied 255 filename character. Output filename overwrite logical. TRUE, filename overwritten ... additional arguments writing files writeRaster","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/shade.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Hill shading — shade","text":"Horn, B.K.P., 1981. Hill shading reflectance map. Proceedings IEEE 69(1):14-47","code":""},{"path":"https://rspatial.github.io/terra/reference/shade.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hill shading — shade","text":"","code":"f <- system.file(\"ex/elev.tif\", package=\"terra\") r <- rast(f) # disaggregating because the resolution of this raster is a bit low # you generally should not do that with your own data r <- disagg(r, 10, method=\"bilinear\")  slope <- terrain(r, \"slope\", unit=\"radians\") aspect <- terrain(r, \"aspect\", unit=\"radians\") hill <- shade(slope, aspect, 40, 270) plot(hill, col=grey(0:100/100), legend=FALSE, mar=c(2,2,1,4)) plot(r, col=rainbow(25, alpha=0.35), add=TRUE)   # A better hill shade may be achieved by combining  # different angles and directions. For example  hh <- shade(slope, aspect, angle = c(45, 45, 45, 80), direction = c(225, 270, 315, 135)) h1 <- Reduce(mean, hh) h2 <- mean(hh)"},{"path":"https://rspatial.github.io/terra/reference/sharedPaths.html","id":null,"dir":"Reference","previous_headings":"","what":"Shared paths — sharedPaths","title":"Shared paths — sharedPaths","text":"Get shared paths line polygon geometries. can geometries single SpatVector, two SpatVectors","code":""},{"path":"https://rspatial.github.io/terra/reference/sharedPaths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shared paths — sharedPaths","text":"","code":"# S4 method for class 'SpatVector' sharedPaths(x, y=NULL)"},{"path":"https://rspatial.github.io/terra/reference/sharedPaths.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shared paths — sharedPaths","text":"x SpatVector lines polygons y missing SpatVector lines polygons","code":""},{"path":"https://rspatial.github.io/terra/reference/sharedPaths.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shared paths — sharedPaths","text":"SpatVector","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/sharedPaths.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shared paths — sharedPaths","text":"","code":"f <- system.file(\"ex/lux.shp\", package=\"terra\") v <- vect(f) plot(v, col=\"light gray\") text(v, halo=TRUE)  x <- sharedPaths(v) lines(x, col=\"red\", lwd=2) text(x, col=\"blue\", halo=TRUE, cex=0.8)  head(x) #>   id1 id2 #> 1   1   2 #> 2   1   4 #> 3   1   5 #> 4   2   3 #> 5   2   4 #> 6   2   5  z <- sharedPaths(v[3,], v[12,])"},{"path":"https://rspatial.github.io/terra/reference/shift.html","id":null,"dir":"Reference","previous_headings":"","what":"Shift — shift","title":"Shift — shift","text":"Shift SpatRaster, SpatVector SpatExtent another location.","code":""},{"path":"https://rspatial.github.io/terra/reference/shift.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shift — shift","text":"","code":"# S4 method for class 'SpatRaster' shift(x, dx=0, dy=0, filename=\"\", ...)  # S4 method for class 'SpatVector' shift(x, dx=0, dy=0)  # S4 method for class 'SpatExtent' shift(x, dx=0, dy=0)"},{"path":"https://rspatial.github.io/terra/reference/shift.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shift — shift","text":"x SpatRaster, SpatVector SpatExtent dx numeric. shift horizontal direction dy numeric. shift vertical direction filename character. Output filename ... additional arguments writing files writeRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/shift.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shift — shift","text":"x","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/shift.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shift — shift","text":"","code":"r <- rast(xmin=0, xmax=1, ymin=0, ymax=1) r <- shift(r, dx=1, dy=-1)  e <- ext(r) shift(e, 5, 5) #> SpatExtent : 6, 7, 4, 5 (xmin, xmax, ymin, ymax)"},{"path":"https://rspatial.github.io/terra/reference/sieve.html","id":null,"dir":"Reference","previous_headings":"","what":"Sieve filter — sieve","title":"Sieve filter — sieve","text":"Apply sieve filter. , remove \"noise\", changing small clumps cells value different surrounding cells, value largest neighboring clump. Note numerical input values truncated integers.","code":""},{"path":"https://rspatial.github.io/terra/reference/sieve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sieve filter — sieve","text":"","code":"# S4 method for class 'SpatRaster' sieve(x, threshold, directions=8, filename=\"\", ...)"},{"path":"https://rspatial.github.io/terra/reference/sieve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sieve filter — sieve","text":"x SpatRaster, single layer integer categorical values threshold positive integer. clumps smaller threshold removed directions numeric indicate cells connected. Either 4 consider horizontal vertical neighbors (\"rook\"), 8 consider vertical, horizontal diagonal neighbors filename character. Output filename ... Options writing files writeRaster","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/sieve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sieve filter — sieve","text":"","code":"r <- rast(nrows=18, ncols=18, xmin=0, vals=0, crs=\"local\") r[2, 5] <- 1 r[5:8, 2:3] <- 2 r[7:12, 10:15] <- 3 r[15:16, 15:18] <- 4 freq(r, bylayer=FALSE) #>   value count #> 1     0   271 #> 2     1     1 #> 3     2     8 #> 4     3    36 #> 5     4     8  x <- sieve(r, 8) y <- sieve(r, 9)"},{"path":"https://rspatial.github.io/terra/reference/simplify.html","id":null,"dir":"Reference","previous_headings":"","what":"simplifyGeom geometries — simplifyGeom","title":"simplifyGeom geometries — simplifyGeom","text":"Reduce number nodes used represent geometries.","code":""},{"path":"https://rspatial.github.io/terra/reference/simplify.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"simplifyGeom geometries — simplifyGeom","text":"","code":"# S4 method for class 'SpatVector' simplifyGeom(x, tolerance=0.1, preserveTopology=TRUE, makeValid=TRUE)"},{"path":"https://rspatial.github.io/terra/reference/simplify.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"simplifyGeom geometries — simplifyGeom","text":"x SpatVector lines polygons tolerance numeric. minimum distance nodes units crs (.e. degrees long/lat) preserveTopology logical. TRUE topology output geometries preserved makeValid logical. TRUE, makeValid run simplification assure output polygons valid","code":""},{"path":"https://rspatial.github.io/terra/reference/simplify.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"simplifyGeom geometries — simplifyGeom","text":"SpatVector","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/simplify.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"simplifyGeom geometries — simplifyGeom","text":"","code":"f <- system.file(\"ex/lux.shp\", package=\"terra\") v <- vect(f) w <- simplifyGeom(v, .02, makeValid=FALSE) e <- erase(w) g <- gaps(e) plot(e, lwd=5, border=\"light gray\") polys(g, col=\"red\", border=\"red\")"},{"path":"https://rspatial.github.io/terra/reference/sort.html","id":null,"dir":"Reference","previous_headings":"","what":"Sort a SpatRaster or SpatVector — sort","title":"Sort a SpatRaster or SpatVector — sort","text":"Sort cell values SpatRaster across layers. can also compute sorting order. sort records SpatVector (data.frame) specifying column number(s) names(s) sort .","code":""},{"path":"https://rspatial.github.io/terra/reference/sort.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sort a SpatRaster or SpatVector — sort","text":"","code":"# S4 method for class 'SpatRaster' sort(x, decreasing=FALSE, order=FALSE, filename=\"\", ...)  # S4 method for class 'SpatVector' sort(x, v, decreasing=FALSE)"},{"path":"https://rspatial.github.io/terra/reference/sort.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sort a SpatRaster or SpatVector — sort","text":"x SpatRaster decreasing logical. TRUE, sorting decreasing order order logical. TRUE sorting order returned instead sorted values filename character. Output filename ... additional arguments writing files writeRaster v character numeric indicating column(s) sort ","code":""},{"path":"https://rspatial.github.io/terra/reference/sort.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sort a SpatRaster or SpatVector — sort","text":"SpatRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/sort.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sort a SpatRaster or SpatVector — sort","text":"","code":"f <- system.file(\"ex/elev.tif\", package=\"terra\") r <- rast(f) r <- c(r, r/2, r*2) sort(r) #> class       : SpatRaster  #> dimensions  : 90, 95, 3  (nrow, ncol, nlyr) #> resolution  : 0.008333333, 0.008333333  (x, y) #> extent      : 5.741667, 6.533333, 49.44167, 50.19167  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (EPSG:4326)  #> source(s)   : memory #> varname     : elev  #> names       : elevation, elevation, elevation  #> min values  :      70.5,       141,       282  #> max values  :     273.5,       547,      1094   ord <- sort(r, order=TRUE) # these two are the same  ord[[1]] #> class       : SpatRaster  #> dimensions  : 90, 95, 1  (nrow, ncol, nlyr) #> resolution  : 0.008333333, 0.008333333  (x, y) #> extent      : 5.741667, 6.533333, 49.44167, 50.19167  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (EPSG:4326)  #> source(s)   : memory #> varname     : elev  #> name        : elevation  #> min value   :         0  #> max value   :         1  which.min(r) #> class       : SpatRaster  #> dimensions  : 90, 95, 1  (nrow, ncol, nlyr) #> resolution  : 0.008333333, 0.008333333  (x, y) #> extent      : 5.741667, 6.533333, 49.44167, 50.19167  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (EPSG:4326)  #> source(s)   : memory #> name        : which.min  #> min value   :         2  #> max value   :         2"},{"path":"https://rspatial.github.io/terra/reference/sources.html","id":null,"dir":"Reference","previous_headings":"","what":"Data sources of a SpatRaster — sources","title":"Data sources of a SpatRaster — sources","text":"Get data sources SpatRaster SpatVector related object. Sources either files (similar resources) \"\", meaning memory. can use hasValues check -memory layers actually cell values.","code":""},{"path":"https://rspatial.github.io/terra/reference/sources.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data sources of a SpatRaster — sources","text":"","code":"# S4 method for class 'SpatRaster' sources(x, nlyr=FALSE, bands=FALSE)  # S4 method for class 'SpatVector' sources(x)  # S4 method for class 'SpatRaster' hasValues(x)  # S4 method for class 'SpatRaster' inMemory(x, bylayer=FALSE)"},{"path":"https://rspatial.github.io/terra/reference/sources.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data sources of a SpatRaster — sources","text":"x SpatRaster, SpatRasterCollection, SpatVector SpatVectorProxy nlyr logical. TRUE source, number layers returned bands logical. TRUE source, \"bands\" used, , layer number source file, returned bylayer logical. TRUE value returned layer instead source","code":""},{"path":"https://rspatial.github.io/terra/reference/sources.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Data sources of a SpatRaster — sources","text":"vector filenames, \"\" filename, nlyr bands FALSE. Otherwise data.frame","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/sources.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data sources of a SpatRaster — sources","text":"","code":"f <- system.file(\"ex/elev.tif\", package=\"terra\") r <- rast(f) s <- rast(r) values(s) <- 1:ncell(s) rs <- c(r,r,s,r) sources(rs) #> [1] \"/Users/runner/work/_temp/Library/terra/ex/elev.tif\" #> [2] \"/Users/runner/work/_temp/Library/terra/ex/elev.tif\" #> [3] \"\"                                                   #> [4] \"/Users/runner/work/_temp/Library/terra/ex/elev.tif\" hasValues(r) #> [1] TRUE x <- rast() hasValues(x) #> [1] FALSE"},{"path":"https://rspatial.github.io/terra/reference/spin.html","id":null,"dir":"Reference","previous_headings":"","what":"spin a SpatVector — spin","title":"spin a SpatVector — spin","text":"Spin (rotate) geometry SpatVector.","code":""},{"path":"https://rspatial.github.io/terra/reference/spin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"spin a SpatVector — spin","text":"","code":"# S4 method for class 'SpatVector' spin(x, angle, x0, y0)"},{"path":"https://rspatial.github.io/terra/reference/spin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"spin a SpatVector — spin","text":"x SpatVector angle numeric. Angle rotation degrees x0 numeric. x-coordinate center rotation. missing, center extent x used y0 numeric. y-coordinate center rotation. missing, center extent x used","code":""},{"path":"https://rspatial.github.io/terra/reference/spin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"spin a SpatVector — spin","text":"SpatVector","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/spin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"spin a SpatVector — spin","text":"","code":"f <- system.file(\"ex/lux.shp\", package=\"terra\") v <- vect(f) w <- spin(v, 180) plot(v) lines(w, col=\"red\")   # lower-right corner as center e <- as.vector(ext(v)) x <- spin(v, 45, e[1], e[3])"},{"path":"https://rspatial.github.io/terra/reference/split.html","id":null,"dir":"Reference","previous_headings":"","what":"Split a SpatRaster or SpatVector — split","title":"Split a SpatRaster or SpatVector — split","text":"Split SpatRaster layer, SpatVector attributes. can also split geometry polygon SpatVector another SpatVector.","code":""},{"path":"https://rspatial.github.io/terra/reference/split.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split a SpatRaster or SpatVector — split","text":"","code":"# S4 method for class 'SpatRaster,ANY' split(x, f)  # S4 method for class 'SpatVector,ANY' split(x, f)  # S4 method for class 'SpatVector,SpatVector' split(x, f)"},{"path":"https://rspatial.github.io/terra/reference/split.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split a SpatRaster or SpatVector — split","text":"x SpatRaster SpatVector f x SpatRaster: vector length nlyr(x). x SpatVector: field (variable) name vector length x; , x SpatVector polygons, SpatVector lines polygons split polygon geometries","code":""},{"path":"https://rspatial.github.io/terra/reference/split.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split a SpatRaster or SpatVector — split","text":"list SpatVector","code":""},{"path":"https://rspatial.github.io/terra/reference/split.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split a SpatRaster or SpatVector — split","text":"","code":"## split layers s <- rast(system.file(\"ex/logo.tif\", package=\"terra\"))    y <- split(s, c(1,2,1)) sds(y) #> class       : SpatRasterDataset  #> subdatasets : 2  #> dimensions  : 77, 101 (nrow, ncol) #> nlyr        : 2, 1  #> resolution  : 1, 1  (x, y) #> extent      : 0, 101, 0, 77  (xmin, xmax, ymin, ymax) #> coord. ref. : Cartesian (Meter)  #> source(s)   : logo.tif   ## split attributes v <- vect(system.file(\"ex/lux.shp\", package=\"terra\")) x <- split(v, \"NAME_1\")  ## split geometries v <- v[1:5,] line <- vect(matrix(c(5.79, 6.22, 5.75, 6.1, 5.8,    50.14, 50.05, 49.88, 49.85, 49.71), ncol=2), \"line\") s <- split(v, line)"},{"path":"https://rspatial.github.io/terra/reference/sprc.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a SpatRasterCollection — sprc","title":"Create a SpatRasterCollection — sprc","text":"Methods create SpatRasterCollection. object hold collection (list) SpatRasters. restrictions similarity SpatRaster geometry. can used combine several SpatRasters used merge mosaic can create SpatRasterCollection file subdatasets.","code":""},{"path":"https://rspatial.github.io/terra/reference/sprc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a SpatRasterCollection — sprc","text":"","code":"# S4 method for class 'character' sprc(x, ids=0, opts=NULL, raw=FALSE)   # S4 method for class 'SpatRaster' sprc(x, ...)   # S4 method for class 'list' sprc(x)   # S4 method for class 'missing' sprc(x)"},{"path":"https://rspatial.github.io/terra/reference/sprc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a SpatRasterCollection — sprc","text":"x SpatRaster, list SpatRasters, missing, filename ids optional. vector integer subdataset ids. Ignored first value positive integer opts character. GDAL dataset open options raw logical. TRUE, scale offset values ignored ... additional SpatRasters","code":""},{"path":"https://rspatial.github.io/terra/reference/sprc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a SpatRasterCollection — sprc","text":"SpatRasterCollection","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/sprc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a SpatRasterCollection — sprc","text":"","code":"x <- rast(xmin=-110, xmax=-50, ymin=40, ymax=70, ncols=60, nrows=30) y <- rast(xmin=-80, xmax=-20, ymax=60, ymin=30) res(y) <- res(x) values(x) <- 1:ncell(x) values(y) <- 1:ncell(y)  z <- sprc(x, y) z #> class       : SpatRasterCollection  #> length      : 2  #> nrow        : 30, 30  #> ncol        : 60, 60  #> nlyr        :  1,  1  #> extent      : -110, -20, 30, 70  (xmin, xmax, ymin, ymax) #> crs (first) : lon/lat WGS 84 (CRS84) (OGC:CRS84)"},{"path":"https://rspatial.github.io/terra/reference/stretch.html","id":null,"dir":"Reference","previous_headings":"","what":"Stretch — stretch","title":"Stretch — stretch","text":"Linear histogram equalization stretch values SpatRaster. linear stretch, provide desired output range (minv maxv) lower upper bounds original data, either quantiles (minq maxq, cell values (smin smax). smin smax NA, minq maxq ignored. histogram equalization, arguments ignored, can provide desired scale output maximum number cells used compute histogram (empirical cumulative distribution function).","code":""},{"path":"https://rspatial.github.io/terra/reference/stretch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stretch — stretch","text":"","code":"# S4 method for class 'SpatRaster' stretch(x, minv=0, maxv=255, minq=0, maxq=1, smin=NA, smax=NA,     histeq=FALSE, scale=1, maxcell=500000, filename=\"\", ...)"},{"path":"https://rspatial.github.io/terra/reference/stretch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stretch — stretch","text":"x SpatRaster minv numeric >= 0 smaller maxv. lower bound stretched value maxv numeric <= 255 larger maxv. upper bound stretched value minq numeric >= 0 smaller maxq. lower quantile bound original value. Ignored smin supplied maxq numeric <= 1 larger minq. upper quantile bound original value. Ignored smax supplied smin numeric < smax. user supplied lower value layers, used instead quantile computed function smax numeric > smin. user supplied upper value layers, used instead quantile computed function histeq logical. TRUE histogram equalization used instead linear stretch scale numeric. scale (maximum value) output histeq=TRUE maxcell positive integer. size regular sample used compute histogram filename character. Output filename ... additional arguments writing files writeRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/stretch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stretch — stretch","text":"SpatRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/stretch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stretch — stretch","text":"","code":"r <- rast(nc=10, nr=10) values(r) <- rep(1:25, 4) rs <- stretch(r) s <- c(r, r*2) sr <- stretch(s)"},{"path":"https://rspatial.github.io/terra/reference/subset.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset a SpatRaster or a SpatVector — subset","title":"Subset a SpatRaster or a SpatVector — subset","text":"Select subset layers SpatRaster select subset records (row) /variables (columns) SpatVector.","code":""},{"path":"https://rspatial.github.io/terra/reference/subset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset a SpatRaster or a SpatVector — subset","text":"","code":"# S4 method for class 'SpatRaster' subset(x, subset, negate=FALSE, NSE=FALSE, filename=\"\", overwrite=FALSE, ...)  # S4 method for class 'SpatVector' subset(x, subset, select, drop=FALSE, NSE=FALSE)"},{"path":"https://rspatial.github.io/terra/reference/subset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset a SpatRaster or a SpatVector — subset","text":"x SpatRaster SpatVector subset x SpatRaster: integer character select layers x SpatVector: logical expression indicating rows keep (missing values taken FALSE) select expression, indicating columns select negate logical. TRUE layers subset selected NSE logical. TRUE, non-standard evaluation (use unquoted variable names) allowed. Set FALSE calling subset function drop logical. TRUE, geometries dropped, data.frame returned filename character. Output filename overwrite logical. TRUE, filename overwritten ... additional arguments writing files writeRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/subset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset a SpatRaster or a SpatVector — subset","text":"x SpatRaster: SpatRaster x SpatVector: SpatVector , drop=TRUE, data.frame.","code":""},{"path":"https://rspatial.github.io/terra/reference/subset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset a SpatRaster or a SpatVector — subset","text":"","code":"### SpatRaster s <- rast(system.file(\"ex/logo.tif\", package=\"terra\"))    subset(s, 2:3) #> class       : SpatRaster  #> dimensions  : 77, 101, 2  (nrow, ncol, nlyr) #> resolution  : 1, 1  (x, y) #> extent      : 0, 101, 0, 77  (xmin, xmax, ymin, ymax) #> coord. ref. : Cartesian (Meter)  #> source      : logo.tif  #> names       : green, blue  #> min values  :     0,    0  #> max values  :   255,  255  subset(s, c(3,2,3,1)) #> class       : SpatRaster  #> dimensions  : 77, 101, 4  (nrow, ncol, nlyr) #> resolution  : 1, 1  (x, y) #> extent      : 0, 101, 0, 77  (xmin, xmax, ymin, ymax) #> coord. ref. : Cartesian (Meter)  #> source      : logo.tif  #> names       : blue, green, blue, red  #> min values  :    0,     0,    0,   0  #> max values  :  255,   255,  255, 255   #equivalent to  s[[ c(3,2,3,1) ]] #> class       : SpatRaster  #> dimensions  : 77, 101, 4  (nrow, ncol, nlyr) #> resolution  : 1, 1  (x, y) #> extent      : 0, 101, 0, 77  (xmin, xmax, ymin, ymax) #> coord. ref. : Cartesian (Meter)  #> source      : logo.tif  #> names       : blue, green, blue, red  #> min values  :    0,     0,    0,   0  #> max values  :  255,   255,  255, 255   s[[c(\"red\", \"green\")]] #> class       : SpatRaster  #> dimensions  : 77, 101, 2  (nrow, ncol, nlyr) #> resolution  : 1, 1  (x, y) #> extent      : 0, 101, 0, 77  (xmin, xmax, ymin, ymax) #> coord. ref. : Cartesian (Meter)  #> source      : logo.tif  #> names       : red, green  #> min values  :   0,     0  #> max values  : 255,   255  s$red #> class       : SpatRaster  #> dimensions  : 77, 101, 1  (nrow, ncol, nlyr) #> resolution  : 1, 1  (x, y) #> extent      : 0, 101, 0, 77  (xmin, xmax, ymin, ymax) #> coord. ref. : Cartesian (Meter)  #> source      : logo.tif  #> name        : red  #> min value   :   0  #> max value   : 255   # expression based (partial) matching of names with single brackets s[\"re\"] #> class       : SpatRaster  #> dimensions  : 77, 101, 2  (nrow, ncol, nlyr) #> resolution  : 1, 1  (x, y) #> extent      : 0, 101, 0, 77  (xmin, xmax, ymin, ymax) #> coord. ref. : Cartesian (Meter)  #> source      : logo.tif  #> names       : red, green  #> min values  :   0,     0  #> max values  : 255,   255  s[\"^re\"] #> class       : SpatRaster  #> dimensions  : 77, 101, 1  (nrow, ncol, nlyr) #> resolution  : 1, 1  (x, y) #> extent      : 0, 101, 0, 77  (xmin, xmax, ymin, ymax) #> coord. ref. : Cartesian (Meter)  #> source      : logo.tif  #> name        : red  #> min value   :   0  #> max value   : 255   # not with double brackets # s[[\"re\"]]   ### SpatVector  v <- vect(system.file(\"ex/lux.shp\", package=\"terra\"))  subset(v, v$NAME_1 == \"Diekirch\", c(\"NAME_1\", \"NAME_2\")) #>  class       : SpatVector  #>  geometry    : polygons  #>  dimensions  : 5, 2  (geometries, attributes) #>  extent      : 5.74414, 6.315773, 49.69933, 50.18162  (xmin, xmax, ymin, ymax) #>  coord. ref. : lon/lat WGS 84 (EPSG:4326)  #>  names       :   NAME_1   NAME_2 #>  type        :    <chr>    <chr> #>  values      : Diekirch Clervaux #>                Diekirch Diekirch #>                Diekirch  Redange  subset(v, NAME_1 == \"Diekirch\", c(NAME_1, NAME_2), NSE=TRUE) #>  class       : SpatVector  #>  geometry    : polygons  #>  dimensions  : 5, 2  (geometries, attributes) #>  extent      : 5.74414, 6.315773, 49.69933, 50.18162  (xmin, xmax, ymin, ymax) #>  coord. ref. : lon/lat WGS 84 (EPSG:4326)  #>  names       :   NAME_1   NAME_2 #>  type        :    <chr>    <chr> #>  values      : Diekirch Clervaux #>                Diekirch Diekirch #>                Diekirch  Redange  # or like this v[2:3,] #>  class       : SpatVector  #>  geometry    : polygons  #>  dimensions  : 2, 6  (geometries, attributes) #>  extent      : 5.746118, 6.315773, 49.69933, 49.98745  (xmin, xmax, ymin, ymax) #>  coord. ref. : lon/lat WGS 84 (EPSG:4326)  #>  names       :  ID_1   NAME_1  ID_2   NAME_2  AREA       POP #>  type        : <num>    <chr> <num>    <chr> <num>     <num> #>  values      :     1 Diekirch     2 Diekirch   218 3.254e+04 #>                    1 Diekirch     3  Redange   259 1.866e+04 v[1:2, 2:3] #>  class       : SpatVector  #>  geometry    : polygons  #>  dimensions  : 2, 2  (geometries, attributes) #>  extent      : 5.826232, 6.315773, 49.78479, 50.18162  (xmin, xmax, ymin, ymax) #>  coord. ref. : lon/lat WGS 84 (EPSG:4326)  #>  names       :   NAME_1  ID_2 #>  type        :    <chr> <num> #>  values      : Diekirch     1 #>                Diekirch     2 v[1:2, c(\"NAME_1\", \"NAME_2\")] #>  class       : SpatVector  #>  geometry    : polygons  #>  dimensions  : 2, 2  (geometries, attributes) #>  extent      : 5.826232, 6.315773, 49.78479, 50.18162  (xmin, xmax, ymin, ymax) #>  coord. ref. : lon/lat WGS 84 (EPSG:4326)  #>  names       :   NAME_1   NAME_2 #>  type        :    <chr>    <chr> #>  values      : Diekirch Clervaux #>                Diekirch Diekirch"},{"path":"https://rspatial.github.io/terra/reference/subset_dollar.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset a SpatRaster or a SpatVector — subset_dollar","title":"Subset a SpatRaster or a SpatVector — subset_dollar","text":"Select subset layers SpatRaster select subset records (row) /variables (columns) SpatVector.","code":""},{"path":"https://rspatial.github.io/terra/reference/subset_dollar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset a SpatRaster or a SpatVector — subset_dollar","text":"","code":"# S4 method for class 'SpatExtent' x$name"},{"path":"https://rspatial.github.io/terra/reference/subset_dollar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset a SpatRaster or a SpatVector — subset_dollar","text":"x SpatRaster, SpatVector SpatExtent name character. x SpatRaster: layer name. x SpatVector: variable name. x SpatExtent: xmin, xmax, ymin ymax","code":""},{"path":"https://rspatial.github.io/terra/reference/subset_dollar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset a SpatRaster or a SpatVector — subset_dollar","text":"x SpatRaster: SpatRaster x SpatVector: SpatVector , drop=TRUE, data.frame.","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/subset_dollar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset a SpatRaster or a SpatVector — subset_dollar","text":"","code":"### SpatRaster s <- rast(system.file(\"ex/logo.tif\", package=\"terra\"))    subset(s, 2:3) #> class       : SpatRaster  #> dimensions  : 77, 101, 2  (nrow, ncol, nlyr) #> resolution  : 1, 1  (x, y) #> extent      : 0, 101, 0, 77  (xmin, xmax, ymin, ymax) #> coord. ref. : Cartesian (Meter)  #> source      : logo.tif  #> names       : green, blue  #> min values  :     0,    0  #> max values  :   255,  255  subset(s, c(3,2,3,1)) #> class       : SpatRaster  #> dimensions  : 77, 101, 4  (nrow, ncol, nlyr) #> resolution  : 1, 1  (x, y) #> extent      : 0, 101, 0, 77  (xmin, xmax, ymin, ymax) #> coord. ref. : Cartesian (Meter)  #> source      : logo.tif  #> names       : blue, green, blue, red  #> min values  :    0,     0,    0,   0  #> max values  :  255,   255,  255, 255  #equivalent to  s[[ c(3,2,3,1) ]] #> class       : SpatRaster  #> dimensions  : 77, 101, 4  (nrow, ncol, nlyr) #> resolution  : 1, 1  (x, y) #> extent      : 0, 101, 0, 77  (xmin, xmax, ymin, ymax) #> coord. ref. : Cartesian (Meter)  #> source      : logo.tif  #> names       : blue, green, blue, red  #> min values  :    0,     0,    0,   0  #> max values  :  255,   255,  255, 255   s[[c(\"red\", \"green\")]] #> class       : SpatRaster  #> dimensions  : 77, 101, 2  (nrow, ncol, nlyr) #> resolution  : 1, 1  (x, y) #> extent      : 0, 101, 0, 77  (xmin, xmax, ymin, ymax) #> coord. ref. : Cartesian (Meter)  #> source      : logo.tif  #> names       : red, green  #> min values  :   0,     0  #> max values  : 255,   255  s$red #> class       : SpatRaster  #> dimensions  : 77, 101, 1  (nrow, ncol, nlyr) #> resolution  : 1, 1  (x, y) #> extent      : 0, 101, 0, 77  (xmin, xmax, ymin, ymax) #> coord. ref. : Cartesian (Meter)  #> source      : logo.tif  #> name        : red  #> min value   :   0  #> max value   : 255   # expression based (partial) matching of names with single brackets s[\"re\"] #> class       : SpatRaster  #> dimensions  : 77, 101, 2  (nrow, ncol, nlyr) #> resolution  : 1, 1  (x, y) #> extent      : 0, 101, 0, 77  (xmin, xmax, ymin, ymax) #> coord. ref. : Cartesian (Meter)  #> source      : logo.tif  #> names       : red, green  #> min values  :   0,     0  #> max values  : 255,   255  s[\"^re\"] #> class       : SpatRaster  #> dimensions  : 77, 101, 1  (nrow, ncol, nlyr) #> resolution  : 1, 1  (x, y) #> extent      : 0, 101, 0, 77  (xmin, xmax, ymin, ymax) #> coord. ref. : Cartesian (Meter)  #> source      : logo.tif  #> name        : red  #> min value   :   0  #> max value   : 255   # not with double brackets # s[[\"re\"]]   ### SpatVector  v <- vect(system.file(\"ex/lux.shp\", package=\"terra\")) v[2:3,] #>  class       : SpatVector  #>  geometry    : polygons  #>  dimensions  : 2, 6  (geometries, attributes) #>  extent      : 5.746118, 6.315773, 49.69933, 49.98745  (xmin, xmax, ymin, ymax) #>  coord. ref. : lon/lat WGS 84 (EPSG:4326)  #>  names       :  ID_1   NAME_1  ID_2   NAME_2  AREA       POP #>  type        : <num>    <chr> <num>    <chr> <num>     <num> #>  values      :     1 Diekirch     2 Diekirch   218 3.254e+04 #>                    1 Diekirch     3  Redange   259 1.866e+04 v[1:2, 2:3] #>  class       : SpatVector  #>  geometry    : polygons  #>  dimensions  : 2, 2  (geometries, attributes) #>  extent      : 5.826232, 6.315773, 49.78479, 50.18162  (xmin, xmax, ymin, ymax) #>  coord. ref. : lon/lat WGS 84 (EPSG:4326)  #>  names       :   NAME_1  ID_2 #>  type        :    <chr> <num> #>  values      : Diekirch     1 #>                Diekirch     2  subset(v, v$NAME_1 == \"Diekirch\", c(\"NAME_1\", \"NAME_2\")) #>  class       : SpatVector  #>  geometry    : polygons  #>  dimensions  : 5, 2  (geometries, attributes) #>  extent      : 5.74414, 6.315773, 49.69933, 50.18162  (xmin, xmax, ymin, ymax) #>  coord. ref. : lon/lat WGS 84 (EPSG:4326)  #>  names       :   NAME_1   NAME_2 #>  type        :    <chr>    <chr> #>  values      : Diekirch Clervaux #>                Diekirch Diekirch #>                Diekirch  Redange  subset(v, NAME_1 == \"Diekirch\", c(NAME_1, NAME_2), NSE=TRUE) #>  class       : SpatVector  #>  geometry    : polygons  #>  dimensions  : 5, 2  (geometries, attributes) #>  extent      : 5.74414, 6.315773, 49.69933, 50.18162  (xmin, xmax, ymin, ymax) #>  coord. ref. : lon/lat WGS 84 (EPSG:4326)  #>  names       :   NAME_1   NAME_2 #>  type        :    <chr>    <chr> #>  values      : Diekirch Clervaux #>                Diekirch Diekirch #>                Diekirch  Redange"},{"path":"https://rspatial.github.io/terra/reference/subset_double.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset a SpatRaster or a SpatVector — subset_double","title":"Subset a SpatRaster or a SpatVector — subset_double","text":"Select subset layers SpatRaster select subset records (row) /variables (columns) SpatVector.","code":""},{"path":"https://rspatial.github.io/terra/reference/subset_double.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset a SpatRaster or a SpatVector — subset_double","text":"","code":"# S4 method for class 'SpatRaster,numeric,missing' x[[i, j]]  # S4 method for class 'SpatRasterDataset,ANY,ANY' x[[i, j, drop = TRUE]]  # S4 method for class 'SpatVector,numeric,missing' x[[i, j, drop = FALSE]]"},{"path":"https://rspatial.github.io/terra/reference/subset_double.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset a SpatRaster or a SpatVector — subset_double","text":"x SpatRaster SpatVector x SpatRaster: integer, logical, character select layers x SpatVector: integer, logical, character select variables j missing, , SpatRasterDataset , numeric drop logical. TRUE, geometries dropped, data.frame returned","code":""},{"path":"https://rspatial.github.io/terra/reference/subset_double.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset a SpatRaster or a SpatVector — subset_double","text":"x SpatRaster SpatRasterDataset: SpatRaster x SpatVector: data.frame.","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/subset_double.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset a SpatRaster or a SpatVector — subset_double","text":"","code":"### SpatRaster s <- rast(system.file(\"ex/logo.tif\", package=\"terra\"))    s[[ 1:2 ]] #> class       : SpatRaster  #> dimensions  : 77, 101, 2  (nrow, ncol, nlyr) #> resolution  : 1, 1  (x, y) #> extent      : 0, 101, 0, 77  (xmin, xmax, ymin, ymax) #> coord. ref. : Cartesian (Meter)  #> source      : logo.tif  #> names       : red, green  #> min values  :   0,     0  #> max values  : 255,   255   s[[c(\"red\", \"green\")]] #> class       : SpatRaster  #> dimensions  : 77, 101, 2  (nrow, ncol, nlyr) #> resolution  : 1, 1  (x, y) #> extent      : 0, 101, 0, 77  (xmin, xmax, ymin, ymax) #> coord. ref. : Cartesian (Meter)  #> source      : logo.tif  #> names       : red, green  #> min values  :   0,     0  #> max values  : 255,   255   # expression based (partial) matching of names with single brackets s[\"re\"] #> class       : SpatRaster  #> dimensions  : 77, 101, 2  (nrow, ncol, nlyr) #> resolution  : 1, 1  (x, y) #> extent      : 0, 101, 0, 77  (xmin, xmax, ymin, ymax) #> coord. ref. : Cartesian (Meter)  #> source      : logo.tif  #> names       : red, green  #> min values  :   0,     0  #> max values  : 255,   255  s[\"^re\"] #> class       : SpatRaster  #> dimensions  : 77, 101, 1  (nrow, ncol, nlyr) #> resolution  : 1, 1  (x, y) #> extent      : 0, 101, 0, 77  (xmin, xmax, ymin, ymax) #> coord. ref. : Cartesian (Meter)  #> source      : logo.tif  #> name        : red  #> min value   :   0  #> max value   : 255   # does not with double brackets # s[[\"re\"]]   ### SpatVector  v <- vect(system.file(\"ex/lux.shp\", package=\"terra\")) v[[2:3]] #>          NAME_1 ID_2 #> 1      Diekirch    1 #> 2      Diekirch    2 #> 3      Diekirch    3 #> 4      Diekirch    4 #> 5      Diekirch    5 #> 6  Grevenmacher    6 #> 7  Grevenmacher    7 #> 8  Grevenmacher   12 #> 9    Luxembourg    8 #> 10   Luxembourg    9 #> 11   Luxembourg   10 #> 12   Luxembourg   11  # to keep the geometry use v[,2:3] #>  class       : SpatVector  #>  geometry    : polygons  #>  dimensions  : 12, 2  (geometries, attributes) #>  extent      : 5.74414, 6.528252, 49.44781, 50.18162  (xmin, xmax, ymin, ymax) #>  source      : lux.shp #>  coord. ref. : lon/lat WGS 84 (EPSG:4326)  #>  names       :   NAME_1  ID_2 #>  type        :    <chr> <num> #>  values      : Diekirch     1 #>                Diekirch     2 #>                Diekirch     3"},{"path":"https://rspatial.github.io/terra/reference/subset_single.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract values from a SpatRaster, SpatVector or SpatExtent — subset_single","title":"Extract values from a SpatRaster, SpatVector or SpatExtent — subset_single","text":"Extract values SpatRaster; subset records (row) /variables (columns) SpatVector; number SpatExtent. can use indices (row, column, layer cell numbers) extract. can also use Spat* objects.","code":""},{"path":"https://rspatial.github.io/terra/reference/subset_single.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract values from a SpatRaster, SpatVector or SpatExtent — subset_single","text":"","code":"# S4 method for class 'SpatRaster,ANY,ANY,ANY' x[i, j, k]  # S4 method for class 'SpatVector,numeric,numeric' x[i, j, drop = FALSE]  # S4 method for class 'SpatVector,SpatVector,missing' x[i, j]  # S4 method for class 'SpatExtent,numeric,missing' x[i, j]"},{"path":"https://rspatial.github.io/terra/reference/subset_single.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract values from a SpatRaster, SpatVector or SpatExtent — subset_single","text":"x SpatRaster, SpatVector SpatExtent x SpatRaster: numeric, logical missing select rows , j missing, select cells numbers. x SpatVector: numeric missing select rows.   another SpatVector: get new SpatVector geometries intersect. x SpatExtent: integer 1 4. j numeric, logical, missing select columns k numeric, character, missing select layers drop logical. FALSE object class x returned","code":""},{"path":"https://rspatial.github.io/terra/reference/subset_single.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract values from a SpatRaster, SpatVector or SpatExtent — subset_single","text":"numeric x SpatExtent. x drop=FALSE. Otherwise data.frame","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/subset_single.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract values from a SpatRaster, SpatVector or SpatExtent — subset_single","text":"","code":"### SpatRaster f <- system.file(\"ex/elev.tif\", package=\"terra\") r <- rast(f) r[3638] #>   elevation #> 1       473 rowColFromCell(r, 2638) #>      [,1] [,2] #> [1,]   28   73 r[39, 28] #>   elevation #> 1       473 x <- r[39:40, 28:29, drop=FALSE]  as.matrix(x, wide=TRUE) #>      [,1] [,2] #> [1,]  473  429 #> [2,]  430  436  ### SpatVector  v <- vect(system.file(\"ex/lux.shp\", package=\"terra\")) v[2:3,] #>  class       : SpatVector  #>  geometry    : polygons  #>  dimensions  : 2, 6  (geometries, attributes) #>  extent      : 5.746118, 6.315773, 49.69933, 49.98745  (xmin, xmax, ymin, ymax) #>  coord. ref. : lon/lat WGS 84 (EPSG:4326)  #>  names       :  ID_1   NAME_1  ID_2   NAME_2  AREA       POP #>  type        : <num>    <chr> <num>    <chr> <num>     <num> #>  values      :     1 Diekirch     2 Diekirch   218 3.254e+04 #>                    1 Diekirch     3  Redange   259 1.866e+04 v[1:2, 2:3] #>  class       : SpatVector  #>  geometry    : polygons  #>  dimensions  : 2, 2  (geometries, attributes) #>  extent      : 5.826232, 6.315773, 49.78479, 50.18162  (xmin, xmax, ymin, ymax) #>  coord. ref. : lon/lat WGS 84 (EPSG:4326)  #>  names       :   NAME_1  ID_2 #>  type        :    <chr> <num> #>  values      : Diekirch     1 #>                Diekirch     2 v[1:2, 2:3, drop=TRUE] #>     NAME_1 ID_2 #> 1 Diekirch    1 #> 2 Diekirch    2"},{"path":"https://rspatial.github.io/terra/reference/subst.html","id":null,"dir":"Reference","previous_headings":"","what":"replace cell values — subst","title":"replace cell values — subst","text":"Substitute(replace) cell values SpatRaster new value. See classify complex/flexible replacement.","code":""},{"path":"https://rspatial.github.io/terra/reference/subst.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"replace cell values — subst","text":"","code":"# S4 method for class 'SpatRaster' subst(x, from, to, others=NULL, raw=FALSE, filename=\"\", ...)"},{"path":"https://rspatial.github.io/terra/reference/subst.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"replace cell values — subst","text":"x SpatRaster numeric value(s). Normally vector length ``. x multiple layers, can also matrix numeric value(s) nrow(x) == length(). case output single layer, values based combination values input layers numeric value(s). Normally vector length ``. x single layer, can also matrix numeric value(s) nrow(x) == length(). case output multiple layers, one column others numeric. NULL values matched set value. Otherwise retain original value. raw logical. TRUE, values raw cell values, categorical labels. relevant .factor(x) filename character. Output filename ... Additional arguments writing files writeRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/subst.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"replace cell values — subst","text":"SpatRaster","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/subst.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"replace cell values — subst","text":"","code":"r <- rast(ncols=5, nrows=5, xmin=0, xmax=1, ymin=0, ymax=1, crs=\"\") r <- init(r, 1:6) x <- subst(r, 3, 7) x <- subst(r, 2:3, NA) x <- subst(x, NA, 10)  # multiple output layers z <- subst(r, 2:3, cbind(20,30))  # multiple input layers rr <- c(r, r+1, r+2) m <- rbind(c(1:3), c(3:5)) zz <- subst(rr, m, c(100, 200))"},{"path":"https://rspatial.github.io/terra/reference/summarize-generics.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize — summarize","title":"Summarize — summarize","text":"Compute summary statistics cells, either across layers layers (parallel summary). following summary methods available SpatRaster: , anyNA, , allNA, max, min, mean, median, prod, range, stdev, sum, .min, .max. See modal compute mode app compute summary statistics included . generic functions used, method applied chosen based first argument: \"x\". means r SpatRaster, mean(r, 5) work, mean(5, r) work. mean method argument \"trim\" ignored. pop=TRUE stdev computes population standard deviation, computed : f <- function(x) sqrt(sum((x-mean(x))^2) / length(x)) different sample standard deviation returned sd (uses n-1 denominator).","code":""},{"path":"https://rspatial.github.io/terra/reference/summarize-generics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize — summarize","text":"","code":"# S4 method for class 'SpatRaster' min(x, ..., na.rm=FALSE)  # S4 method for class 'SpatRaster' max(x, ..., na.rm=FALSE)  # S4 method for class 'SpatRaster' range(x, ..., na.rm=FALSE)  # S4 method for class 'SpatRaster' prod(x, ..., na.rm=FALSE)  # S4 method for class 'SpatRaster' sum(x, ..., na.rm=FALSE)  # S4 method for class 'SpatRaster' any(x, ..., na.rm=FALSE)  # S4 method for class 'SpatRaster' all(x, ..., na.rm=FALSE)  # S4 method for class 'SpatRaster' range(x, ..., na.rm=FALSE)  # S4 method for class 'SpatRaster' which.min(x)  # S4 method for class 'SpatRaster' which.max(x)  # S4 method for class 'SpatRaster' stdev(x, ..., pop=TRUE, na.rm=FALSE)  # S4 method for class 'SpatRaster' mean(x, ..., trim=NA, na.rm=FALSE)  # S4 method for class 'SpatRaster' median(x, na.rm=FALSE, ...)  # S4 method for class 'SpatRaster' anyNA(x)  # S4 method for class 'SpatRaster' countNA(x, n=0)  # S4 method for class 'SpatRaster' noNA(x, falseNA=FALSE)  # S4 method for class 'SpatRaster' allNA(x, falseNA=FALSE)"},{"path":"https://rspatial.github.io/terra/reference/summarize-generics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize — summarize","text":"x SpatRaster ... additional SpatRasters numeric values; arguments par parallel summarization (see Details), filename, overwrite wopt writeRaster na.rm logical. TRUE, NA values ignored. FALSE, NA returned x NA values trim ignored pop logical. TRUE, population standard deviation computed. Otherwise sample standard deviation computed falseNA logical. TRUE, cells otherwise FALSE set NA n integer. n > 0, cell values TRUE least n layers NA","code":""},{"path":"https://rspatial.github.io/terra/reference/summarize-generics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize — summarize","text":"SpatRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/summarize-generics.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summarize — summarize","text":"Additional argument par can used \"parallel\" summarizing SpatRaster numeric logical value. SpatRaster x three layers, max(x, 5) return single layer (number five treated layer cells value five). contrast max(x, 5, par=TRUE) returns three layers (number five treated another SpatRaster single layer cells value five.","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/summarize-generics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize — summarize","text":"","code":"set.seed(0) r <- rast(nrows=10, ncols=10, nlyrs=3) values(r) <- runif(ncell(r) * nlyr(r))  x <- mean(r) # note how this returns one layer x <- sum(c(r, r[[2]]), 5)  # and this returns three layers y <- sum(r, r[[2]], 5)  max(r) #> class       : SpatRaster  #> dimensions  : 10, 10, 1  (nrow, ncol, nlyr) #> resolution  : 36, 18  (x, y) #> extent      : -180, 180, -90, 90  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (CRS84) (OGC:CRS84)  #> source(s)   : memory #> name        :       max  #> min value   : 0.1808664  #> max value   : 0.9926841   ## when adding a number, do you want 1 layer or all layers? # 1 layer max(r, 0.5) #> class       : SpatRaster  #> dimensions  : 10, 10, 1  (nrow, ncol, nlyr) #> resolution  : 36, 18  (x, y) #> extent      : -180, 180, -90, 90  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (CRS84) (OGC:CRS84)  #> source(s)   : memory #> name        :       max  #> min value   : 0.5000000  #> max value   : 0.9926841   # all layers max(r, 0.5, par=TRUE) #> class       : SpatRaster  #> dimensions  : 10, 10, 3  (nrow, ncol, nlyr) #> resolution  : 36, 18  (x, y) #> extent      : -180, 180, -90, 90  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (CRS84) (OGC:CRS84)  #> source(s)   : memory #> names       :     lyr.1,     lyr.2,     lyr.3  #> min values  : 0.5000000, 0.5000000, 0.5000000  #> max values  : 0.9919061, 0.9926841, 0.9815635   y <- stdev(r) # not the same as  yy <- app(r, sd)  z <- stdev(r, r*2)  x <- mean(r, filename=paste0(tempfile(), \".tif\"))   v <- values(r) set.seed(3) v[sample(length(v), 50)] <- NA values(r) <- v is.na(r) #> class       : SpatRaster  #> dimensions  : 10, 10, 3  (nrow, ncol, nlyr) #> resolution  : 36, 18  (x, y) #> extent      : -180, 180, -90, 90  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (CRS84) (OGC:CRS84)  #> source(s)   : memory #> names       : lyr.1, lyr.2, lyr.3  #> min values  : FALSE, FALSE, FALSE  #> max values  :  TRUE,  TRUE,  TRUE  anyNA(r) #> class       : SpatRaster  #> dimensions  : 10, 10, 1  (nrow, ncol, nlyr) #> resolution  : 36, 18  (x, y) #> extent      : -180, 180, -90, 90  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (CRS84) (OGC:CRS84)  #> source(s)   : memory #> name        :  lyr1  #> min value   : FALSE  #> max value   :  TRUE  allNA(r) #> class       : SpatRaster  #> dimensions  : 10, 10, 1  (nrow, ncol, nlyr) #> resolution  : 36, 18  (x, y) #> extent      : -180, 180, -90, 90  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (CRS84) (OGC:CRS84)  #> source(s)   : memory #> name        :  lyr1  #> min value   : FALSE  #> max value   :  TRUE  countNA(r) #> class       : SpatRaster  #> dimensions  : 10, 10, 1  (nrow, ncol, nlyr) #> resolution  : 36, 18  (x, y) #> extent      : -180, 180, -90, 90  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (CRS84) (OGC:CRS84)  #> source(s)   : memory #> name        : lyr1  #> min value   :    0  #> max value   :    3  countNA(r, 2) #> class       : SpatRaster  #> dimensions  : 10, 10, 1  (nrow, ncol, nlyr) #> resolution  : 36, 18  (x, y) #> extent      : -180, 180, -90, 90  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (CRS84) (OGC:CRS84)  #> source(s)   : memory #> name        :  lyr1  #> min value   : FALSE  #> max value   :  TRUE"},{"path":"https://rspatial.github.io/terra/reference/summary.html","id":null,"dir":"Reference","previous_headings":"","what":"summary — summary","title":"summary — summary","text":"Compute summary statistics (min, max, mean, quartiles) SpatRaster using base summary method. sample used large files. single statistics see Summary-methods, global, quantile","code":""},{"path":"https://rspatial.github.io/terra/reference/summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"summary — summary","text":"","code":"# S4 method for class 'SpatRaster' summary(object, size=100000, warn=TRUE, ...)  # S4 method for class 'SpatVector' summary(object, ...)"},{"path":"https://rspatial.github.io/terra/reference/summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"summary — summary","text":"object SpatRaster SpatVector size positive integer. Size regular sample used large datasets (see spatSample) warn logical. TRUE warning given sample used ... additional arguments passed base summary method","code":""},{"path":"https://rspatial.github.io/terra/reference/summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"summary — summary","text":"matrix (estimate ) median, minimum maximum values, first third quartiles, number cells NA values","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"summary — summary","text":"","code":"set.seed(0) r <- rast(nrows=10, ncols=10, nlyrs=3) values(r) <- runif(nlyr(r)*ncell(r)) summary(r) #>      lyr.1             lyr.2             lyr.3         #>  Min.   :0.01339   Min.   :0.01308   Min.   :0.02779   #>  1st Qu.:0.32308   1st Qu.:0.28440   1st Qu.:0.18947   #>  Median :0.48781   Median :0.51860   Median :0.37810   #>  Mean   :0.52076   Mean   :0.51569   Mean   :0.43403   #>  3rd Qu.:0.77171   3rd Qu.:0.72570   3rd Qu.:0.63596   #>  Max.   :0.99191   Max.   :0.99268   Max.   :0.98156"},{"path":"https://rspatial.github.io/terra/reference/surfArea.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute surface area from elevation data — surfArea","title":"Compute surface area from elevation data — surfArea","text":"often said Wales flattened area bigger England. function computes surface area raster elevation values, taking account sloping nature surface.","code":""},{"path":"https://rspatial.github.io/terra/reference/surfArea.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute surface area from elevation data — surfArea","text":"","code":"# S4 method for class 'SpatRaster' surfArea(x, filename=\"\", ...)"},{"path":"https://rspatial.github.io/terra/reference/surfArea.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute surface area from elevation data — surfArea","text":"x SpatRaster elevation values. Currently raster CRS must planar distance units (e.g. m) elevation values filename character. Output filename ... additional arguments writing files writeRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/surfArea.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute surface area from elevation data — surfArea","text":"SpatRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/surfArea.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute surface area from elevation data — surfArea","text":"Jenness, Jeff S., 2004. Calculating Landscape Surface Area Digital Elevation Models. Wildlife Society Bulletin 32(3): 829-839","code":""},{"path":"https://rspatial.github.io/terra/reference/surfArea.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compute surface area from elevation data — surfArea","text":"Barry Rowlingson","code":""},{"path":"https://rspatial.github.io/terra/reference/surfArea.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute surface area from elevation data — surfArea","text":"","code":"v <- rast(volcano, crs=\"local\") x <- terra::surfArea(v)"},{"path":"https://rspatial.github.io/terra/reference/svc.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a SpatVectorCollection — svc","title":"Create a SpatVectorCollection — svc","text":"Methods create SpatVectorCollection. object hold \"sub-datasets\", SpatVector, perhaps different geometry type.","code":""},{"path":"https://rspatial.github.io/terra/reference/svc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a SpatVectorCollection — svc","text":"","code":"# S4 method for class 'missing' svc(x)   # S4 method for class 'SpatVector' svc(x, ...)   # S4 method for class 'list' svc(x)   # S4 method for class 'character' svc(x, layer=\"\", query=\"\", extent=NULL, filter=NULL)"},{"path":"https://rspatial.github.io/terra/reference/svc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a SpatVectorCollection — svc","text":"x SpatVector, character (filename), list SpatVectors, missing ... Additional SpatVectors layer character. layer name select layer file (database) multiple layers query character. query subset dataset OGR-SQL dialect extent Spat* object. extent object used spatial filter select geometries read. Ignored filter NULL filter SpatVector. Used spatial filter select geometries read (convex hull used lines points). guaranteed features overlap extent filter returned. can happen additional geometries returned","code":""},{"path":"https://rspatial.github.io/terra/reference/svc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a SpatVectorCollection — svc","text":"SpatVectorCollection","code":""},{"path":"https://rspatial.github.io/terra/reference/svc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a SpatVectorCollection — svc","text":"","code":"f <- system.file(\"ex/lux.shp\", package=\"terra\") v <- vect(f) x <- svc() x <- svc(v, v[1:3,], as.lines(v[3:5,]), as.points(v)) length(x) #> [1] 4 x #>  class       : SpatVectorCollection  #>  length      : 4  #>  geometry    : polygons (12) #>                polygons (3) #>                lines (3) #>                points (3983) #>  crs (first) : lon/lat WGS 84 (EPSG:4326)  #>  names       : , , ,    # extract x[3] #>  class       : SpatVector  #>  geometry    : lines  #>  dimensions  : 3, 6  (geometries, attributes) #>  extent      : 5.74414, 6.239243, 49.69933, 50.03632  (xmin, xmax, ymin, ymax) #>  coord. ref. : lon/lat WGS 84 (EPSG:4326)  #>  names       :  ID_1   NAME_1  ID_2  NAME_2  AREA       POP #>  type        : <num>    <chr> <num>   <chr> <num>     <num> #>  values      :     1 Diekirch     3 Redange   259 1.866e+04 #>                    1 Diekirch     4 Vianden    76      5163 #>                    1 Diekirch     5   Wiltz   263 1.674e+04  # replace x[2] <- as.lines(v[1,])"},{"path":"https://rspatial.github.io/terra/reference/symdif.html","id":null,"dir":"Reference","previous_headings":"","what":"Symmetrical difference — symdif","title":"Symmetrical difference — symdif","text":"Symmetrical difference polygons","code":""},{"path":"https://rspatial.github.io/terra/reference/symdif.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Symmetrical difference — symdif","text":"","code":"# S4 method for class 'SpatVector,SpatVector' symdif(x, y)"},{"path":"https://rspatial.github.io/terra/reference/symdif.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Symmetrical difference — symdif","text":"x SpatVector y SpatVector","code":""},{"path":"https://rspatial.github.io/terra/reference/symdif.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Symmetrical difference — symdif","text":"SpatVector","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/symdif.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Symmetrical difference — symdif","text":"","code":"p <- vect(system.file(\"ex/lux.shp\", package=\"terra\")) b <- as.polygons(ext(6, 6.4, 49.75, 50)) #sd <- symdif(p, b) #plot(sd, col=rainbow(12))"},{"path":"https://rspatial.github.io/terra/reference/tapp.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply a function to subsets of layers of a SpatRaster — tapp","title":"Apply a function to subsets of layers of a SpatRaster — tapp","text":"Apply function subsets layers SpatRaster (similar tapply aggregate). layers combined based index. number layers output SpatRaster equals number unique values index times number values supplied function returns single vector numbers. example, SpatRaster 6 layers, can use index=c(1,1,1,2,2,2) fun=sum. return SpatRaster two layers. first layer sum first three layers input SpatRaster, second layer sum last three layers input SpatRaster. Indices recycled index=c(1,2) also return SpatRaster two layers (one based odd layers (1,3,5), based even layers (2,4,6)). index can also one following values group time period (x appropriate time values): \"years\", \"months\", \"yearmonths\", \"dekads\", \"yeardekads\", \"weeks\" (ISO 8601 week number, see Details), \"yearweeks\", \"days\", \"doy\" (day year), \"7days\" (seven-day periods starting Jan 1 year), \"10days\", \"15days\". can also function makes groups time values. See app Summary-methods want use efficient function returns multiple layers based layers SpatRaster.","code":""},{"path":"https://rspatial.github.io/terra/reference/tapp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply a function to subsets of layers of a SpatRaster — tapp","text":"","code":"# S4 method for class 'SpatRaster' tapp(x, index, fun, ..., cores=1, filename=\"\", overwrite=FALSE, wopt=list())"},{"path":"https://rspatial.github.io/terra/reference/tapp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply a function to subsets of layers of a SpatRaster — tapp","text":"x SpatRaster index factor numeric (integer). Vector length nlyr(x) (shorter vectors recycled) grouping input layers. can also one following values: \"years\", \"months\", \"yearmonths\", \"days\", \"week\" (ISO 8601 week number), \"doy\" (day year) fun function applied. following functions re-implemented C++ speed: \"sum\", \"mean\", \"median\", \"modal\", \"\", \".min\", \".max\", \"min\", \"max\", \"prod\", \"\", \"\", \"sd\", \"std\", \"first\". use base-R function say, \"min\", use something like fun = \\() min() ... additional arguments passed fun cores positive integer. cores > 1, 'parallel' package cluster many cores created used. can also supply cluster object. Ignored functions implemented terra C++ (see fun) filename character. Output filename overwrite logical. TRUE, filename overwritten wopt list named options writing files writeRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/tapp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply a function to subsets of layers of a SpatRaster — tapp","text":"SpatRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/tapp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply a function to subsets of layers of a SpatRaster — tapp","text":"\"week\" follows ISO 8601 definition. Weeks start Monday. week containing 1 January four days new year, considered week \"01\". Otherwise, last week previous year (week \"52\" \"53\", next week week 1.","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/tapp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply a function to subsets of layers of a SpatRaster — tapp","text":"","code":"r <- rast(ncols=10, nrows=10) values(r) <- 1:ncell(r) s <- c(r, r, r, r, r, r) s <- s * 1:6 b1 <- tapp(s, index=c(1,1,1,2,2,2), fun=sum) b1 #> class       : SpatRaster  #> dimensions  : 10, 10, 2  (nrow, ncol, nlyr) #> resolution  : 36, 18  (x, y) #> extent      : -180, 180, -90, 90  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (CRS84) (OGC:CRS84)  #> source(s)   : memory #> names       :  X1,   X2  #> min values  :   6,   15  #> max values  : 600, 1500  b2 <- tapp(s, c(1,2,3,1,2,3), fun=sum) b2 #> class       : SpatRaster  #> dimensions  : 10, 10, 3  (nrow, ncol, nlyr) #> resolution  : 36, 18  (x, y) #> extent      : -180, 180, -90, 90  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (CRS84) (OGC:CRS84)  #> source(s)   : memory #> names       :  X1,  X2,  X3  #> min values  :   5,   7,   9  #> max values  : 500, 700, 900"},{"path":"https://rspatial.github.io/terra/reference/terra-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Description of the methods in the terra package — terra-package","title":"Description of the methods in the terra package — terra-package","text":"terra provides methods manipulate geographic (spatial) data \"raster\" \"vector\" form. Raster data divide space rectangular grid cells commonly used represent spatially continuous phenomena, elevation weather. Satellite images also data structure, context grid cells often referred pixels. contrast, \"vector\" spatial data (points, lines, polygons) typically used represent discrete spatial entities, road, country, bus stop. package implements two main classes (data types): SpatRaster SpatVector. SpatRaster supports handling large raster files loaded memory; local, focal, zonal, global raster operations; polygon, line point raster conversion; integration modeling methods make spatial predictions; . SpatVector supports types geometric operations intersections. Additional classes include SpatExtent, used define spatial extent (bounding box); SpatRasterDataset, represents collection sub-datasets area. sub-dataset SpatRaster possibly many layers, may, example, represent different weather variables; SpatRasterCollection SpatVectorCollection equivalent lists SpatRaster SpatVector objects. also SpatGraticule class assist adding longitude/latitude lines labels map another coordinate reference system. classes hold C++ pointer data \"reference class\" creates limitations. recovered saved R session either directly passed nodes computer cluster. Generally, use writeRaster save SpatRaster objects disk (pass filename cell values cluster nodes). Also see wrap. Also, package developers directly access pointer, user-interface stable. terra package conceived replacement raster package. terra similar, simpler, interface, faster raster. bottom page table shows differences methods two packages. list important methods grouped theme. ———————————————————————————————————————","code":""},{"path":"https://rspatial.github.io/terra/reference/terra-package.html","id":"spatraster","dir":"Reference","previous_headings":"","what":"SpatRaster","title":"Description of the methods in the terra package — terra-package","text":"———————————————————————————————————————","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/terra-package.html","id":"ii-changing-the-spatial-extent-or-resolution","dir":"Reference","previous_headings":"","what":"II. Changing the spatial extent or resolution","title":"Description of the methods in the terra package — terra-package","text":"Also see methods section VIII","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/terra-package.html","id":"vii-accessing-cell-values","dir":"Reference","previous_headings":"","what":"VII. Accessing cell values","title":"Description of the methods in the terra package — terra-package","text":"Apart function listed , can also use indexing [ cell numbers, row /column numbers","code":""},{"path":"https://rspatial.github.io/terra/reference/terra-package.html","id":"viii-getting-and-setting-dimensions-","dir":"Reference","previous_headings":"","what":"VIII. Getting and setting dimensions","title":"Description of the methods in the terra package — terra-package","text":"Get set basic parameters SpatRasters. values associated SpatRaster (either memory via link file) lost change number columns rows resolution. case extent changed (number columns rows affected). Similarly, crs can set coordinate reference system, transform data (see project ).","code":""},{"path":"https://rspatial.github.io/terra/reference/terra-package.html","id":"ix-computing-row-column-cell-numbers-and-coordinates","dir":"Reference","previous_headings":"","what":"IX. Computing row, column, cell numbers and coordinates","title":"Description of the methods in the terra package — terra-package","text":"Cell numbers start 1 upper-left corner. increase within rows, left right, row row top bottom. Likewise, row numbers start 1 top raster, column numbers start 1 left side raster.","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/terra-package.html","id":"xiv-spatrasterdataset","dir":"Reference","previous_headings":"","what":"XIV. SpatRasterDataset","title":"Description of the methods in the terra package — terra-package","text":"SpatRasterDataset contains SpatRasters represent sub-datasets area. extent resolution.","code":""},{"path":"https://rspatial.github.io/terra/reference/terra-package.html","id":"xv-spatrastercollections","dir":"Reference","previous_headings":"","what":"XV. SpatRasterCollections","title":"Description of the methods in the terra package — terra-package","text":"SpatRasterCollection vector SpatRaster objects. Unlike SpatRasterDataset, extent resolution SpatRasters need match .","code":""},{"path":"https://rspatial.github.io/terra/reference/terra-package.html","id":"spatvector","dir":"Reference","previous_headings":"","what":"SpatVector","title":"Description of the methods in the terra package — terra-package","text":"———————————————————————————————————————","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/terra-package.html","id":"xx-spatvector-attributes","dir":"Reference","previous_headings":"","what":"XX. SpatVector attributes","title":"Description of the methods in the terra package — terra-package","text":"use term \"attributes\" tabular data (data.frame) associated vector geometries.","code":""},{"path":[]},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/terra-package.html","id":"xxiii-spatvectorcollections","dir":"Reference","previous_headings":"","what":"XXIII. SpatVectorCollections","title":"Description of the methods in the terra package — terra-package","text":"SpatVectorCollection vector SpatVector objects.","code":""},{"path":"https://rspatial.github.io/terra/reference/terra-package.html","id":"other-classes","dir":"Reference","previous_headings":"","what":"Other classes","title":"Description of the methods in the terra package — terra-package","text":"———————————————————————————————————————","code":""},{"path":[]},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/terra-package.html","id":"general-methods","dir":"Reference","previous_headings":"","what":"General methods","title":"Description of the methods in the terra package — terra-package","text":"———————————————————————————————————————","code":""},{"path":"https://rspatial.github.io/terra/reference/terra-package.html","id":"xxvi-conversion-between-spatial-data-objects-from-different-packages","dir":"Reference","previous_headings":"","what":"XXVI. Conversion between spatial data objects from different packages","title":"Description of the methods in the terra package — terra-package","text":"can coerce SpatRasters Raster* objects, loading raster package, (object, \"Raster\"), raster(object) brick(object) stack(object)","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/terra-package.html","id":"comparison-with-the-raster-package","dir":"Reference","previous_headings":"","what":"Comparison with the raster package","title":"Description of the methods in the terra package — terra-package","text":"———————————————————————————————————————","code":""},{"path":"https://rspatial.github.io/terra/reference/terra-package.html","id":"xxviii-new-method-names","dir":"Reference","previous_headings":"","what":"XXVIII. New method names","title":"Description of the methods in the terra package — terra-package","text":"terra single class SpatRaster raster three (RasterLayer, RasterStack, RasterBrick). Likewise single class vector data SpatVector replaces six Spatial* classes. method names , note following important differences methods names raster package","code":""},{"path":"https://rspatial.github.io/terra/reference/terra-package.html","id":"xxix-changed-behavior","dir":"Reference","previous_headings":"","what":"XXIX. Changed behavior","title":"Description of the methods in the terra package — terra-package","text":"Also note even function names terra raster, output can different. cases done get consistency returned values (thus fewer errors downstream code uses ). cases simply seemed better. examples:","code":""},{"path":"https://rspatial.github.io/terra/reference/terra-package.html","id":"authors","dir":"Reference","previous_headings":"","what":"Authors","title":"Description of the methods in the terra package — terra-package","text":"Except indicated otherwise, methods functions package written Robert Hijmans. configuration scripts written Roger Bivand. code using GEOS library adapted code Edzer Pebesma sf. Michael Sumner contributed various bits pieces.","code":""},{"path":"https://rspatial.github.io/terra/reference/terra-package.html","id":"acknowledgments","dir":"Reference","previous_headings":"","what":"Acknowledgments","title":"Description of the methods in the terra package — terra-package","text":"package attempt climb shoulders giants (GDAL, PROJ, GEOS, NCDF, GeographicLib, Rcpp, R). Many people contributed asking questions raising issues. Feedback suggestions Márcia Barbosa, Kendon Bell, Andrew Gene Brown, Jean-Luc Dupouey, Krzysztof Dyba, Sarah Endicott, Derek Friend, Alex Ilich, Gerald Nelson, Jakub Nowosad, Monika Tomaszewska especially helpful.","code":""},{"path":"https://rspatial.github.io/terra/reference/terraOptions.html","id":null,"dir":"Reference","previous_headings":"","what":"Options — options","title":"Options — options","text":"Get set general options.","code":""},{"path":"https://rspatial.github.io/terra/reference/terraOptions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Options — options","text":"","code":"terraOptions(..., print=TRUE)"},{"path":"https://rspatial.github.io/terra/reference/terraOptions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Options — options","text":"... option names values (see Details). missing, get show current options print logical. TRUE option names values printed","code":""},{"path":"https://rspatial.github.io/terra/reference/terraOptions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Options — options","text":"following options available. memfrac - value 0 0.9 (larger values give warning). fraction RAM may used program. memmin - memory required threshold (GB), memory assumed available. Otherwise, terra checks available. memmax - maximum amount RAM (GB) terra allowed use processing raster dataset. less detected (see mem_info), higher values ignored. Set negative number NA set option. terraOptions shows value memmax set. tempdir - directory temporary files written. default returned tempdir(). datatype - default data type. See writeRaster. todisk - logical. TRUE write raster data disk (temp file file name specified). debugging. progress - non-negative integer. progress bar shown number chunks data processed larger number. progress bar shown value zero. verbose - logical. TRUE debugging info printed functions. tolerance - numeric. Difference raster extent (expressed fraction raster resolution) can ignored comparing alignment rasters.","code":""},{"path":"https://rspatial.github.io/terra/reference/terraOptions.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Options — options","text":"possible set default options \"etc/.Rprofile.site\" R installation like options(terra_default=list(tempdir=\"d:/temp\", memfrac=.4)) may good practice. clearer set favorite options beginning script.","code":""},{"path":"https://rspatial.github.io/terra/reference/terraOptions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Options — options","text":"list. Invisibly print=TRUE","code":""},{"path":"https://rspatial.github.io/terra/reference/terraOptions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Options — options","text":"","code":"terraOptions() #> memfrac   : 0.5 #> tolerance : 0.1 #> verbose   : FALSE #> todisk    : FALSE #> tempdir   : /private/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/T/Rtmp0oj9Ql #> datatype  : FLT4S #> memmin    : 1 #> progress  : 3 terraOptions(memfrac=0.5, tempdir = \"c:/temp\") #> Warning: [options] you cannot set the tempdir to a path that does not exist terraOptions(progress=10) terraOptions() #> memfrac   : 0.5 #> tolerance : 0.1 #> verbose   : FALSE #> todisk    : FALSE #> tempdir   : /private/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/T/Rtmp0oj9Ql #> datatype  : FLT4S #> memmin    : 1 #> progress  : 10"},{"path":"https://rspatial.github.io/terra/reference/terrain.html","id":null,"dir":"Reference","previous_headings":"","what":"terrain characteristics — terrain","title":"terrain characteristics — terrain","text":"Compute terrain characteristics elevation data. elevation values units map units (typically meter) projected (planar) raster data. meter coordinate reference system longitude/latitude. accuracy, always compute values original data (first change projection). Distances (needed slope aspect) longitude/latitude data computed WGS84 ellipsoid Karney's algorithm.","code":""},{"path":"https://rspatial.github.io/terra/reference/terrain.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"terrain characteristics — terrain","text":"","code":"# S4 method for class 'SpatRaster' terrain(x, v=\"slope\", neighbors=8, unit=\"degrees\", filename=\"\", ...)"},{"path":"https://rspatial.github.io/terra/reference/terrain.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"terrain characteristics — terrain","text":"x SpatRaster, single layer elevation values. Values unit map units, meters crs longitude/latitude v character. One options: slope, aspect, TPI, TRI, TRIriley, TRIrmsd, roughness, flowdir (see Details) unit character. \"degrees\" \"radians\" output \"slope\" \"aspect\" neighbors integer. Indicating many neighboring cells use compute slope aspect . Either 8 (queen case) 4 (rook case) filename character. Output filename ... additional arguments writing files writeRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/terrain.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"terrain characteristics — terrain","text":"neighbors=4, slope aspect computed according Fleming Hoffer (1979) Ritter (1987). neighbors=8, slope aspect computed according Horn (1981). Horn algorithm may best rough surfaces, Fleming Hoffer algorithm may better smoother surfaces (Jones, 1997; Burrough McDonnell, 1998). slope = 0, aspect set 0.5*pi radians (90 degrees unit=\"degrees\"). computing slope aspect, coordinate reference system x must known algorithm differentiate planar longitude/latitude data. terrain vectorized \"neighbors\" \"unit\" – first value used. flowdir returns \"flow direction\" (water), direction greatest drop elevation (smallest rise neighbors higher). encoded powers 2 (0 7). cell right focal cell 1, one 2, : Cells without lower neighboring cells encoded zero. two cells drop elevation, random cell picked. ideal may prevent creation connected flow networks. ArcGIS implements approach Greenlee (1987) might adopt future. terrain indices according Wilson et al. (2007), gdaldem. TRI (Terrain Ruggedness Index) mean absolute differences value cell 8 surrounding cells. TPI (Topographic Position Index) difference value cell mean value 8 surrounding cells. Roughness difference maximum minimum value cell 8 surrounding cells. TRIriley (TRI according Riley et al., 2007) returns square root summed squared differences value cell 8 surrounding cells. TRIrmsd computes square root mean squared differences cells. measures can also computed focal functions: TRI <- focal(x, w=3, fun=\\(x) sum(abs(x[-5]-x[5]))/8) TPI <- focal(x, w=3, fun=\\(x) x[5] - mean(x[-5])) rough <- focal(x, w=3, fun=\\(x) max(x) - min(x))","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/terrain.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"terrain characteristics — terrain","text":"Burrough, P., R.. McDonnell, 1998. Principles Geographical Information Systems. Oxford University Press. Fleming, M.D. Hoffer, R.M., 1979. Machine processing Landsat MSS data DMA topographic data forest cover type mapping. LARS Technical Report 062879. Laboratory Applications Remote Sensing, Purdue University, West Lafayette, Indiana. Horn, B.K.P., 1981. Hill shading reflectance map. Proceedings IEEE 69:14-47 Jones, K.H., 1998. comparison algorithms used compute hill slope property DEM. Computers & Geosciences 24: 315-323 Karney, C.F.F., 2013. Algorithms geodesics, J. Geodesy 87: 43-55. doi:10.1007/s00190-012-0578-z. Riley, S.J., De Gloria, S.D., Elliot, R. (1999): Terrain Ruggedness Quantifies Topographic Heterogeneity. Intermountain Journal Science 5: 23-27. Ritter, P., 1987. vector-based terrain aspect generation algorithm. Photogrammetric Engineering Remote Sensing 53: 1109-1111 Wilson et al 2007, Multiscale Terrain Analysis Multibeam Bathymetry Data Habitat Mapping Continental Slope. Marine Geodesy 30:3-35","code":""},{"path":"https://rspatial.github.io/terra/reference/terrain.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"terrain characteristics — terrain","text":"","code":"f <- system.file(\"ex/elev.tif\", package=\"terra\") r <- rast(f) x <- terrain(r, \"slope\")"},{"path":"https://rspatial.github.io/terra/reference/text.html","id":null,"dir":"Reference","previous_headings":"","what":"Add labels to a map — text","title":"Add labels to a map — text","text":"Plots labels, textual (rather color) representation values, top existing plot (map).","code":""},{"path":"https://rspatial.github.io/terra/reference/text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add labels to a map — text","text":"","code":"# S4 method for class 'SpatRaster' text(x, labels, digits=0, halo=FALSE, hc=\"white\", hw=0.1, ...)  # S4 method for class 'SpatVector' text(x, labels, halo=FALSE, inside=FALSE, hc=\"white\", hw=0.1, ...)"},{"path":"https://rspatial.github.io/terra/reference/text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add labels to a map — text","text":"x SpatRaster SpatVector labels character. Optional. Vector labels length(x) variable name names(x) digits integer. many digits used? halo logical. TRUE \"halo\" printed around text hc character. halo color hw numeric. halo width inside logical. text always placed inside one sub-geometries? ... additional arguments pass graphics function text","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/text.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add labels to a map — text","text":"","code":"r <- rast(nrows=4, ncols=4) values(r) <- 1:ncell(r) plot(r) text(r)   plot(r) text(r, halo=TRUE, hc=\"blue\", col=\"white\", hw=0.2)   plot(r, col=rainbow(16)) text(r, col=c(\"black\", \"white\"), vfont=c(\"sans serif\", \"bold\"), cex=2)"},{"path":"https://rspatial.github.io/terra/reference/thresh.html","id":null,"dir":"Reference","previous_headings":"","what":"Thresholding — thresh","title":"Thresholding — thresh","text":"Compute threshold divide values SpatRaster two groups, use threshold classify raster.","code":""},{"path":"https://rspatial.github.io/terra/reference/thresh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Thresholding — thresh","text":"","code":"# S4 method for class 'SpatRaster' thresh(x, method=\"otsu\", maxcell=1000000, combine=FALSE,        as.raster=TRUE, filename=\"\", ...)"},{"path":"https://rspatial.github.io/terra/reference/thresh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Thresholding — thresh","text":"x SpatRaster method character. One \"mean\", \"median\" \"otsu\" Otsu's method maxcell positive integer. Maximum number cells use compute threshold combine logical. TRUE layers x combined compute single threshold .raster logical. TRUE classified SpatRaster returned. Otherwise threshold(s) returned filename character. Output filename ... additional arguments writing files writeRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/thresh.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Thresholding — thresh","text":"numeric SpatRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/thresh.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Thresholding — thresh","text":"Otsu, N. (1979). Threshold Selection Method Gray-Level Histograms. IEEE Transactions Systems, Man, Cybernetics, 9(1), 62-66. doi:10.1109/TSMC.1979.4310076","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/thresh.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Thresholding — thresh","text":"","code":"s <- rast(system.file(\"ex/logo.tif\", package=\"terra\")) thresh(s, \"mean\", as.raster=FALSE) #>      red    green     blue  #> 182.2855 185.3509 192.8046  thresh(s, \"mean\", combine=TRUE, as.raster=FALSE) #> [1] 186.8136   plot(thresh(s, \"otsu\"))"},{"path":"https://rspatial.github.io/terra/reference/time.html","id":null,"dir":"Reference","previous_headings":"","what":"time of SpatRaster layers — time","title":"time of SpatRaster layers — time","text":"Get set time layers SpatRaster. Time can stored POSIXlt (date time,  resolution seconds, time zone), Date, \"months\", \"years\", \"yearmonths\". timeInfo .time helper functions understand time data SpatRaster .","code":""},{"path":"https://rspatial.github.io/terra/reference/time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"time of SpatRaster layers — time","text":"","code":"# S4 method for class 'SpatRaster' has.time(x)  # S4 method for class 'SpatRaster' time(x, format=\"\")  # S4 method for class 'SpatRaster' time(x, tstep = \"\") <- value  # S4 method for class 'SpatRaster' timeInfo(x)"},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"time of SpatRaster layers — time","text":"x SpatRaster SpatRasterDataset format One \"\", \"seconds\" (POSIXlt), \"days\" (Date), \"yearmonths\" (decimal years), \"years\", \"months\". \"\", returned format (based ) format used set time value Date, POSIXt, yearmon (defined package zoo), numeric tstep One \"years\", \"months\", \"yearmonths\". Used value numeric. Ignored value type Date, POSIXt, yearmon","code":""},{"path":"https://rspatial.github.io/terra/reference/time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"time of SpatRaster layers — time","text":"time: POSIXlt, Date, numeric timeInfo: data.frame time step time zone information (available) .time: logical","code":""},{"path":"https://rspatial.github.io/terra/reference/time.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"time of SpatRaster layers — time","text":"","code":"s <- rast(system.file(\"ex/logo.tif\", package=\"terra\"))     # Date\" d <- as.Date(\"2001-05-04\") + 0:2 time(s) <- d time(s) #> [1] \"2001-05-04\" \"2001-05-05\" \"2001-05-06\"  # POSIX (date/time with a resolution of seconds) time(s) <- as.POSIXlt(d) time(s) #> [1] \"2001-05-04 UTC\" \"2001-05-05 UTC\" \"2001-05-06 UTC\"  # with time zone time(s) <- as.POSIXlt(Sys.time(), \"America/New_York\") + 0:2 time(s) #> [1] \"2025-02-22 20:10:56 EST\" \"2025-02-22 20:10:57 EST\" #> [3] \"2025-02-22 20:10:58 EST\" timeInfo(s) #>   time    step             zone #> 1 TRUE seconds America/New_York  # years time(s, tstep=\"years\") <- 2000 + 0:2 s #> class       : SpatRaster  #> dimensions  : 77, 101, 3  (nrow, ncol, nlyr) #> resolution  : 1, 1  (x, y) #> extent      : 0, 101, 0, 77  (xmin, xmax, ymin, ymax) #> coord. ref. : Cartesian (Meter)  #> source      : logo.tif  #> colors RGB  : 1, 2, 3  #> names       : red, green, blue  #> min values  :   0,     0,    0  #> max values  : 255,   255,  255  #> time (years): 2000 to 2002   time(s, tstep=\"months\") <- 1:3 s  #> class       : SpatRaster  #> dimensions  : 77, 101, 3  (nrow, ncol, nlyr) #> resolution  : 1, 1  (x, y) #> extent      : 0, 101, 0, 77  (xmin, xmax, ymin, ymax) #> coord. ref. : Cartesian (Meter)  #> source      : logo.tif  #> colors RGB  : 1, 2, 3  #> names       : red, green, blue  #> min values  :   0,     0,    0  #> max values  : 255,   255,  255  #> time (mnts) : Jan to Mar"},{"path":"https://rspatial.github.io/terra/reference/tmpFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Temporary files — tmpFiles","title":"Temporary files — tmpFiles","text":"List optionally remove temporary files created terra package. files created output SpatRaster may large store memory (RAM). can happen filename provided function using functions provide filename. Temporary files automatically removed end R session ends normally. can use tmpFiles see files current sessions, including orphaned (connect SpatRaster object ) (perhaps old) sessions, remove temporary files.","code":""},{"path":"https://rspatial.github.io/terra/reference/tmpFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Temporary files — tmpFiles","text":"","code":"tmpFiles(current=TRUE, orphan=FALSE, old=FALSE, remove=FALSE)"},{"path":"https://rspatial.github.io/terra/reference/tmpFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Temporary files — tmpFiles","text":"current logical. TRUE, temporary files current R session included orphan logical. TRUE, temporary files current R session longer associated SpatRaster (current TRUE also included) old logical. TRUE, temporary files \"R\" sessions. Unless running multiple instances R time, old (possibly crashed) R  sessions removed remove logical. TRUE, temporary files removed","code":""},{"path":"https://rspatial.github.io/terra/reference/tmpFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Temporary files — tmpFiles","text":"character","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/tmpFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Temporary files — tmpFiles","text":"","code":"tmpFiles() #> [1] \"/private/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/T/Rtmp0oj9Ql/spat_55fb692d77f6_22011_CjcR62DykkoqBId.vrt\""},{"path":"https://rspatial.github.io/terra/reference/toMemory.html","id":null,"dir":"Reference","previous_headings":"","what":"Read all cell values into memory — toMemory","title":"Read all cell values into memory — toMemory","text":"Reads cell values SpatRaster SpatRasterDataset memory. Using method discouraged necessary processing data may lead excessive memory use slow computer worse. used SpatRasters based large files. method may useful relatively small dataset used repeatedly, efficiency gains made values need read disk .","code":""},{"path":"https://rspatial.github.io/terra/reference/toMemory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read all cell values into memory — toMemory","text":"","code":"# S4 method for class 'SpatRaster' toMemory(x)  # S4 method for class 'SpatRasterDataset' toMemory(x)"},{"path":"https://rspatial.github.io/terra/reference/toMemory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read all cell values into memory — toMemory","text":"x SpatRaster SpatRasterDataset","code":""},{"path":"https://rspatial.github.io/terra/reference/toMemory.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read all cell values into memory — toMemory","text":"x","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/toMemory.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read all cell values into memory — toMemory","text":"","code":"f <- system.file(\"ex/elev.tif\", package=\"terra\") r <- rast(f) sources(r) #> [1] \"/Users/runner/work/_temp/Library/terra/ex/elev.tif\" inMemory(r) #> [1] FALSE x <- toMemory(r) inMemory(x) #> [1] TRUE"},{"path":"https://rspatial.github.io/terra/reference/topology.html","id":null,"dir":"Reference","previous_headings":"","what":"Vector topology methods — topology","title":"Vector topology methods — topology","text":"makeNodes create nodes lines mergeLines connect lines form polygons removeDupNodes removes duplicate nodes geometries optionally rounds coordinates emptyGeoms returns indices empty (null) geometries. .na also checks coordinates NA. snap makes boundaries geometries identical close .","code":""},{"path":"https://rspatial.github.io/terra/reference/topology.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vector topology methods — topology","text":"","code":"# S4 method for class 'SpatVector' mergeLines(x) # S4 method for class 'SpatVector' snap(x, y=NULL, tolerance) # S4 method for class 'SpatVector' removeDupNodes(x, digits = -1) # S4 method for class 'SpatVector' makeNodes(x)"},{"path":"https://rspatial.github.io/terra/reference/topology.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vector topology methods — topology","text":"x SpatVector lines polygons y SpatVector lines polygons snap . NULL snapping geometries x tolerance numeric. Snapping tolerance (distance geometries) digits numeric. Number digits used rounding. Ignored < 0","code":""},{"path":"https://rspatial.github.io/terra/reference/topology.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Vector topology methods — topology","text":"SpatVector","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/topology.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Vector topology methods — topology","text":"","code":"p1 <- as.polygons(ext(0,1,0,1)) p2 <- as.polygons(ext(1.1,2,0,1))  p <- rbind(p1, p2)  y <- snap(p, tol=.15) plot(p, lwd=3, col=\"light gray\") lines(y, col=\"red\", lwd=2)"},{"path":"https://rspatial.github.io/terra/reference/transpose.html","id":null,"dir":"Reference","previous_headings":"","what":"Transpose — transpose","title":"Transpose — transpose","text":"Transpose SpatRaster SpatVector","code":""},{"path":"https://rspatial.github.io/terra/reference/transpose.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transpose — transpose","text":"","code":"# S4 method for class 'SpatRaster' t(x)  # S4 method for class 'SpatVector' t(x)  # S4 method for class 'SpatRaster' trans(x, filename=\"\", ...)"},{"path":"https://rspatial.github.io/terra/reference/transpose.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transpose — transpose","text":"x SpatRaster SpatVector filename character. Output filename ... additional arguments writing files writeRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/transpose.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transpose — transpose","text":"SpatRaster","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/transpose.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transpose — transpose","text":"","code":"r <- rast(nrows=18, ncols=36) values(r) <- 1:ncell(r) tr1 <- t(r) tr2 <- trans(r) ttr <- trans(tr2)"},{"path":"https://rspatial.github.io/terra/reference/trim.html","id":null,"dir":"Reference","previous_headings":"","what":"Trim a SpatRaster — trim","title":"Trim a SpatRaster — trim","text":"Trim (shrink) SpatRaster removing outer rows columns NA another value.","code":""},{"path":"https://rspatial.github.io/terra/reference/trim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trim a SpatRaster — trim","text":"","code":"# S4 method for class 'SpatRaster' trim(x, padding=0, value=NA, filename=\"\", ...)"},{"path":"https://rspatial.github.io/terra/reference/trim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trim a SpatRaster — trim","text":"x SpatRaster padding integer. Number outer rows/columns keep value numeric. value outer rows columns removed filename character. Output filename ... additional arguments writing files writeRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/trim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trim a SpatRaster — trim","text":"SpatRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/trim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Trim a SpatRaster — trim","text":"","code":"r <- rast(ncols=10, nrows=10, xmin=0,xmax=10,ymin=0,ymax=10) v <- rep(NA, ncell(r)) v[c(12,34,69)] <- 1:3 values(r) <- v s <- trim(r)"},{"path":"https://rspatial.github.io/terra/reference/union.html","id":null,"dir":"Reference","previous_headings":"","what":"Union SpatVector or SpatExtent objects — union","title":"Union SpatVector or SpatExtent objects — union","text":"want append polygon SpatVectors use rbind instead union. union also intersect overlapping polygons , within, objects. Union lines points simply combines two data sets; without geometric intersections. equivalent rbind. Attributes joined. x y different geometry type, SpatVectorCollection returned. single SpatVector supplied, overlapping polygons intersected. Original attributes lost. New attributes allow determining many, , polygons overlapped. SpatExtent: Objects combined union; equivalent +.","code":""},{"path":"https://rspatial.github.io/terra/reference/union.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Union SpatVector or SpatExtent objects — union","text":"","code":"# S4 method for class 'SpatVector,SpatVector' union(x, y)  # S4 method for class 'SpatVector,missing' union(x, y)  # S4 method for class 'SpatExtent,SpatExtent' union(x, y)"},{"path":"https://rspatial.github.io/terra/reference/union.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Union SpatVector or SpatExtent objects — union","text":"x SpatVector SpatExtent y x missing","code":""},{"path":"https://rspatial.github.io/terra/reference/union.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Union SpatVector or SpatExtent objects — union","text":"SpatVector SpatExtent","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/union.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Union SpatVector or SpatExtent objects — union","text":"","code":"e1 <- ext(-10, 10, -20, 20) e2 <- ext(0, 20, -40, 5) union(e1, e2) #> SpatExtent : -10, 20, -40, 20 (xmin, xmax, ymin, ymax)  #SpatVector v <- vect(system.file(\"ex/lux.shp\", package=\"terra\")) v <- v[,3:4] p <- vect(c(\"POLYGON ((5.8 49.8, 6 49.9, 6.15 49.8, 6 49.65, 5.8 49.8))\",  \"POLYGON ((6.3 49.9, 6.2 49.7, 6.3 49.6, 6.5 49.8, 6.3 49.9))\"), crs=crs(v)) values(p) <- data.frame(pid=1:2, value=expanse(p)) u <- union(v, p) plot(u, \"pid\")   b <- buffer(v, 1000)  u <- union(b) u$sum <- rowSums(as.data.frame(u)) plot(u, \"sum\")"},{"path":"https://rspatial.github.io/terra/reference/unique.html","id":null,"dir":"Reference","previous_headings":"","what":"Unique values — unique","title":"Unique values — unique","text":"method returns unique values SpatRaster, removes duplicates records (geometry attributes) SpatVector.","code":""},{"path":"https://rspatial.github.io/terra/reference/unique.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unique values — unique","text":"","code":"# S4 method for class 'SpatRaster' unique(x, incomparables=FALSE, digits=NA, na.rm=TRUE, as.raster=FALSE)   # S4 method for class 'SpatVector' unique(x, incomparables=FALSE, ...)"},{"path":"https://rspatial.github.io/terra/reference/unique.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unique values — unique","text":"x SpatRaster SpatVector incomparables logical. FALSE x SpatRaster: unique values determined layers together, result matrix. TRUE, layer evaluated separately, list returned. x SpatVector argument data.frame digits integer. number digits rounding values finding unique values. Use NA means rounding na.rm logical. TRUE, NaN included missing values .raster logical. TRUE, single-layer categorical SpatRaster unique values returned ... additional arguments passed unique","code":""},{"path":"https://rspatial.github.io/terra/reference/unique.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unique values — unique","text":"x SpatRaster: data.frame list (incomparables=FALSE) x SpatVector: SpatVector","code":""},{"path":"https://rspatial.github.io/terra/reference/unique.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Unique values — unique","text":"","code":"r <- rast(ncols=5, nrows=5) values(r) <- rep(1:5, each=5) unique(r) #>   lyr.1 #> 1     1 #> 2     2 #> 3     3 #> 4     4 #> 5     5 s <- c(r, round(r/3)) unique(s) #>   lyr.1 lyr.1 #> 1     1     0 #> 2     2     1 #> 3     3     1 #> 4     4     1 #> 5     5     2 unique(s,TRUE) #> [[1]] #> [1] 1 2 3 4 5 #>  #> [[2]] #> [1] 0 1 2 #>   unique(s, as.raster=TRUE) #> class       : SpatRaster  #> dimensions  : 5, 5, 1  (nrow, ncol, nlyr) #> resolution  : 72, 36  (x, y) #> extent      : -180, 180, -90, 90  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (CRS84) (OGC:CRS84)  #> source(s)   : memory #> categories  : label, lyr.1, lyr.1.1  #> name        : label  #> min value   :   1_0  #> max value   :   5_2    v <- vect(cbind(x=c(1:5,1:5), y=c(5:1,5:1)),      crs=\"+proj=utm +zone=1 +datum=WGS84\") nrow(v) #> [1] 10 u <- unique(v) nrow(u) #> [1] 5  values(v) <- c(1:5, 1:3, 5:4) unique(v) #>  class       : SpatVector  #>  geometry    : points  #>  dimensions  : 7, 1  (geometries, attributes) #>  extent      : 1, 5, 1, 5  (xmin, xmax, ymin, ymax) #>  coord. ref. : +proj=utm +zone=1 +datum=WGS84 +units=m +no_defs  #>  names       : value #>  type        : <int> #>  values      :     1 #>                    2 #>                    3"},{"path":"https://rspatial.github.io/terra/reference/units.html","id":null,"dir":"Reference","previous_headings":"","what":"units of SpatRaster or SpatRasterDataSet — units","title":"units of SpatRaster or SpatRasterDataSet — units","text":"Get set units layers SpatRaster datasets SpatRasterDataSet.","code":""},{"path":"https://rspatial.github.io/terra/reference/units.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"units of SpatRaster or SpatRasterDataSet — units","text":"","code":"# S4 method for class 'SpatRaster' units(x)  # S4 method for class 'SpatRaster' units(x) <- value  # S4 method for class 'SpatRasterDataset' units(x)  # S4 method for class 'SpatRasterDataset' units(x) <- value"},{"path":"https://rspatial.github.io/terra/reference/units.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"units of SpatRaster or SpatRasterDataSet — units","text":"x SpatRaster value character","code":""},{"path":"https://rspatial.github.io/terra/reference/units.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"units of SpatRaster or SpatRasterDataSet — units","text":"character","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/units.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"units of SpatRaster or SpatRasterDataSet — units","text":"","code":"s <- rast(system.file(\"ex/logo.tif\", package=\"terra\"))     units(s) <- c(\"m/s\", \"kg\", \"ha\") units(s) #> [1] \"m/s\" \"kg\"  \"ha\"  s #> class       : SpatRaster  #> dimensions  : 77, 101, 3  (nrow, ncol, nlyr) #> resolution  : 1, 1  (x, y) #> extent      : 0, 101, 0, 77  (xmin, xmax, ymin, ymax) #> coord. ref. : Cartesian (Meter)  #> source      : logo.tif  #> colors RGB  : 1, 2, 3  #> names       : red, green, blue  #> min values  :   0,     0,    0  #> max values  : 255,   255,  255  #> unit        : m/s,    kg,   ha   units(s) <- \"kg\" units(s) #> [1] \"kg\" \"kg\" \"kg\""},{"path":"https://rspatial.github.io/terra/reference/update.html","id":null,"dir":"Reference","previous_headings":"","what":"Change values in a file — update","title":"Change values in a file — update","text":"Change contents file data source SpatRaster. CAREFUL overwriting values existing file.","code":""},{"path":"https://rspatial.github.io/terra/reference/update.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change values in a file — update","text":"","code":"# S4 method for class 'SpatRaster' update(object, crs=FALSE, extent=FALSE)"},{"path":"https://rspatial.github.io/terra/reference/update.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change values in a file — update","text":"object SpatRaster crs logical. coordinate reference system updated? extent logical. extent updated?","code":""},{"path":"https://rspatial.github.io/terra/reference/update.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Change values in a file — update","text":"SpatRaster (invisibly)","code":""},{"path":"https://rspatial.github.io/terra/reference/update.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Change values in a file — update","text":"","code":"s <- rast(system.file(\"ex/logo.tif\", package=\"terra\"))    fname <- paste0(tempfile(), \".tif\") x <- writeRaster(s, fname) ext(x) <- ext(x) + 1 crs(x) <- \"+proj=utm +zone=1\"  update(x, crs=TRUE, extent=TRUE)  rast(fname) #> class       : SpatRaster  #> dimensions  : 77, 101, 3  (nrow, ncol, nlyr) #> resolution  : 1.019802, 1.025974  (x, y) #> extent      : -1, 102, -1, 78  (xmin, xmax, ymin, ymax) #> coord. ref. : WGS 84 / UTM zone 1N (EPSG:32601)  #> source      : file55fb6c83829.tif  #> colors RGB  : 1, 2, 3  #> names       : red, green, blue  #> min values  :   0,     0,    0  #> max values  : 255,   255,  255"},{"path":"https://rspatial.github.io/terra/reference/values.html","id":null,"dir":"Reference","previous_headings":"","what":"Cell values and geometry attributes — values","title":"Cell values and geometry attributes — values","text":"Get cell values SpatRaster attributes SpatVector. default values returned numeric. vector matrix can store one data type, SpatRaster may consist multiple data types. However, layers integer logical values, returned values also datatype. Note values(x, dataframe=TRUE) .data.frame(x) values returned match type layer, can mix numeric, logical, integer, factor.","code":""},{"path":"https://rspatial.github.io/terra/reference/values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cell values and geometry attributes — values","text":"","code":"# S4 method for class 'SpatRaster' values(x, mat=TRUE, dataframe=FALSE, row=1,      nrows=nrow(x), col=1, ncols=ncol(x), na.rm=FALSE, ...)  # S4 method for class 'SpatVector' values(x, ...)"},{"path":"https://rspatial.github.io/terra/reference/values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cell values and geometry attributes — values","text":"x SpatRaster SpatVector mat logical. TRUE, values returned matrix instead vector, except dataframe TRUE dataframe logical. TRUE, values returned data.frame instead vector (also matrix TRUE) row positive integer. Row number start , 1 nrow(x) nrows positive integer. many rows? col positive integer. Column number start , 1 ncol(x) ncols positive integer. many columns? Default number columns left start column na.rm logical. Remove NAs? ... additional arguments passed data.frame","code":""},{"path":"https://rspatial.github.io/terra/reference/values.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cell values and geometry attributes — values","text":"x SpatRaster, mat=FALSE, values returned vector. cell-order layer. mat=TRUE, matrix returned values layer represented column (ncell(x) rows). values per layer cell-order, , top-left, top-right row. Use .matrix(x, wide=TRUE) alternative matrix representation number rows columns matches x.","code":""},{"path":"https://rspatial.github.io/terra/reference/values.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Cell values and geometry attributes — values","text":"raster values NA (missing) represented NaN (--number) unless argument dataframe TRUE.","code":""},{"path":"https://rspatial.github.io/terra/reference/values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cell values and geometry attributes — values","text":"matrix data.frame","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/values.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cell values and geometry attributes — values","text":"","code":"f <- system.file(\"ex/elev.tif\", package=\"terra\") r <- rast(f) r #> class       : SpatRaster  #> dimensions  : 90, 95, 1  (nrow, ncol, nlyr) #> resolution  : 0.008333333, 0.008333333  (x, y) #> extent      : 5.741667, 6.533333, 49.44167, 50.19167  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (EPSG:4326)  #> source      : elev.tif  #> name        : elevation  #> min value   :       141  #> max value   :       547  x <- values(r) x[3650:3655, ] #> [1] 349 287 334 319 271 228 r[3650:3655] #>   elevation #> 1       349 #> 2       287 #> 3       334 #> 4       319 #> 5       271 #> 6       228   ff <- system.file(\"ex/lux.shp\", package=\"terra\") v <- vect(ff) y <- values(v) head(y) #>   ID_1       NAME_1 ID_2     NAME_2 AREA   POP #> 1    1     Diekirch    1   Clervaux  312 18081 #> 2    1     Diekirch    2   Diekirch  218 32543 #> 3    1     Diekirch    3    Redange  259 18664 #> 4    1     Diekirch    4    Vianden   76  5163 #> 5    1     Diekirch    5      Wiltz  263 16735 #> 6    2 Grevenmacher    6 Echternach  188 18899"},{"path":"https://rspatial.github.io/terra/reference/varnames.html","id":null,"dir":"Reference","previous_headings":"","what":"variable and long variable names — varnames","title":"variable and long variable names — varnames","text":"Set get names dataset (variable) SpatRasterDataset. SpatRaster _data source_ can also variable name long variable name. set reading file possibly multiple sub-datasets (e.g. netcdf hdf5 format) single SpatRaster. sub-datset seperate \"data-source\" SpatRaster. Note newly created derived SpatRasters always single variable (data source), therefore variable names lost processing multi-variable SpatRaster. Thus variable names mostly useful understand SpatRaster created files managing SpatRasterDatasets. See link{names} commonly used _layer_ names.","code":""},{"path":"https://rspatial.github.io/terra/reference/varnames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"variable and long variable names — varnames","text":"","code":"# S4 method for class 'SpatRaster' varnames(x)  # S4 method for class 'SpatRaster' varnames(x) <- value  # S4 method for class 'SpatRaster' longnames(x)  # S4 method for class 'SpatRaster' longnames(x) <- value  # S4 method for class 'SpatRasterDataset' varnames(x)  # S4 method for class 'SpatRasterDataset' varnames(x) <- value  # S4 method for class 'SpatRasterDataset' longnames(x)  # S4 method for class 'SpatRasterDataset' longnames(x) <- value"},{"path":"https://rspatial.github.io/terra/reference/varnames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"variable and long variable names — varnames","text":"x SpatRaster, SpatRasterDataset value character (vector)","code":""},{"path":"https://rspatial.github.io/terra/reference/varnames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"variable and long variable names — varnames","text":"character","code":""},{"path":"https://rspatial.github.io/terra/reference/varnames.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"variable and long variable names — varnames","text":"terra enforces neither unique valid names. See make.unique create unique names {make.names} make syntactically valid names.","code":""},{"path":"https://rspatial.github.io/terra/reference/varnames.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"variable and long variable names — varnames","text":"","code":"s <- rast(ncols=5, nrows=5, nlyrs=3) names(s) <- c(\"a\", \"b\", \"c\") x <- sds(s, s) varnames(x) <- c(\"one\", \"two\") x #> class       : SpatRasterDataset  #> subdatasets : 2  #> dimensions  : 5, 5 (nrow, ncol) #> nlyr        : 3, 3  #> resolution  : 72, 36  (x, y) #> extent      : -180, 180, -90, 90  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (CRS84) (OGC:CRS84)  #> source(s)   : memory  #> names       : one, two"},{"path":"https://rspatial.github.io/terra/reference/vect.html","id":null,"dir":"Reference","previous_headings":"","what":"Create SpatVector objects — vect","title":"Create SpatVector objects — vect","text":"Methods create SpatVector filename R object. filename can Shapefile, GeoPackage, GeoJSON, Keyhole Markup Language (KML) spatial vector file format. can use data.frame make SpatVector points; \"geom\" matrix make SpatVector supported geometry (see examples geom). can supply list SpatVectors append single SpatVector. SpatVectors can also created \"Well Known Text\", spatial vector data objects defined sf sp packages.","code":""},{"path":"https://rspatial.github.io/terra/reference/vect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create SpatVector objects — vect","text":"","code":"# S4 method for class 'character' vect(x, layer=\"\", query=\"\", extent=NULL, filter=NULL,      crs=\"\", proxy=FALSE, what=\"\", opts=NULL)  # S4 method for class 'matrix' vect(x, type=\"points\", atts=NULL, crs=\"\")  # S4 method for class 'data.frame' vect(x, geom=c(\"lon\", \"lat\"), crs=\"\", keepgeom=FALSE)  # S4 method for class 'list' vect(x, type=\"points\", crs=\"\")  # S4 method for class 'SpatExtent' vect(x, crs=\"\")  # S4 method for class 'SpatVectorCollection' vect(x)  # S4 method for class 'sf' vect(x)"},{"path":"https://rspatial.github.io/terra/reference/vect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create SpatVector objects — vect","text":"x character. filename; \"Well Known Text\" string; SpatExtent, data.frame (make SpatVector points); \"geom\" matrix make SpatVector supported geometry (see examples geom); spatial vector data object defined sf sp packages; list matrices coordinates layer character. layer name select layer file (database) multiple layers query character. query subset dataset OGR-SQL dialect extent Spat* object. extent object used spatial filter select geometries read. Ignored filter NULL filter SpatVector. Used spatial filter select geometries read (convex hull used lines points). guaranteed features overlap extent filter returned. can happen additional geometries returned type character. Geometry type. Must \"points\", \"lines\", \"polygons\" atts data.frame attributes. number rows must match number geometrical elements crs character. coordinate reference system one following formats: WKT/WKT2, <authority>:<code>, PROJ-string notation (see crs) proxy logical. TRUE SpatVectorProxy returned character indicating read. Either \"\" geometries attributes, \"geoms\" read geometries, \"attributes\" read attributes (returned data.frame) opts character. GDAL dataset open options. example \"ENCODING=LATIN1\" geom character. field name(s) geometry data. Either two names x y coordinates points, single name single column WKT geometries keepgeom logical. TRUE geom variable(s) () also included attributes","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/vect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create SpatVector objects — vect","text":"SpatVector","code":""},{"path":"https://rspatial.github.io/terra/reference/vect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create SpatVector objects — vect","text":"","code":"### SpatVector from file f <- system.file(\"ex/lux.shp\", package=\"terra\") f #> [1] \"/Users/runner/work/_temp/Library/terra/ex/lux.shp\" v <- vect(f) v #>  class       : SpatVector  #>  geometry    : polygons  #>  dimensions  : 12, 6  (geometries, attributes) #>  extent      : 5.74414, 6.528252, 49.44781, 50.18162  (xmin, xmax, ymin, ymax) #>  source      : lux.shp #>  coord. ref. : lon/lat WGS 84 (EPSG:4326)  #>  names       :  ID_1   NAME_1  ID_2   NAME_2  AREA       POP #>  type        : <num>    <chr> <num>    <chr> <num>     <num> #>  values      :     1 Diekirch     1 Clervaux   312 1.808e+04 #>                    1 Diekirch     2 Diekirch   218 3.254e+04 #>                    1 Diekirch     3  Redange   259 1.866e+04  ## subsetting (large) files ## with attribute query  v <- vect(f, query=\"SELECT NAME_1, NAME_2, ID_2 FROM lux WHERE ID_2 < 4\")  ## with an extent e <- ext(5.9, 6.3, 49.9, 50)  v <- vect(f, extent=e)  ## with polygons p <- as.polygons(e) v <- vect(f, filter=p)   ### SpatVector from a geom matrix x1 <- rbind(c(-180,-20), c(-140,55), c(10, 0), c(-140,-60)) x2 <- rbind(c(-10,0), c(140,60), c(160,0), c(140,-55)) x3 <- rbind(c(-125,0), c(0,60), c(40,5), c(15,-45)) hole <- rbind(c(80,0), c(105,13), c(120,2), c(105,-13)) z <- rbind(cbind(object=1, part=1, x1, hole=0), cbind(object=2, part=1, x3, hole=0),       cbind(object=3, part=1, x2, hole=0), cbind(object=3, part=1, hole, hole=1)) colnames(z)[3:4] <- c('x', 'y')  p <- vect(z, \"polygons\") p #>  class       : SpatVector  #>  geometry    : polygons  #>  dimensions  : 3, 0  (geometries, attributes) #>  extent      : -180, 160, -60, 60  (xmin, xmax, ymin, ymax) #>  coord. ref. :    z[z[, \"hole\"]==1, \"object\"] <- 4 lns <- vect(z[,1:4], \"lines\") plot(p) lines(lns, col=\"red\", lwd=2)   ### from wkt v <- vect(\"POLYGON ((0 -5, 10 0, 10 -10, 0 -5))\")  wkt <- c(\"MULTIPOLYGON ( ((40 40, 20 45, 45 30, 40 40)),  ((20 35, 10 30, 10 10, 30 5, 45 20, 20 35),(30 20, 20 15, 20 25, 30 20)))\",  \"POLYGON ((0 -5, 10 0, 10 -10, 0 -5))\") w <- vect(wkt)  # combine two SpatVectors  vw <- rbind(w, v)  # add a data.frame d <- data.frame(id=1:2, name=c(\"a\", \"b\")) values(w) <- d  # add data.frame on creation, here from a geom matrix g <- geom(w) d <- data.frame(id=1:2, name=c(\"a\", \"b\")) m <- vect(g, \"polygons\", atts=d, crs=\"+proj=longlat +datum=WGS84\")  ### SpatVector from a data.frame d$wkt <- wkt x <- vect(d, geom=\"wkt\")  d$wkt <- NULL d$lon <- c(0,10) d$lat <- c(0,10) x <- vect(d, geom=c(\"lon\", \"lat\"))  # SpatVector to sf #sf::st_as_sf(x)"},{"path":"https://rspatial.github.io/terra/reference/vector_layers.html","id":null,"dir":"Reference","previous_headings":"","what":"List or remove layers from a vector file — vector_layers","title":"List or remove layers from a vector file — vector_layers","text":"List remove layers vector file supports layers GPGK","code":""},{"path":"https://rspatial.github.io/terra/reference/vector_layers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List or remove layers from a vector file — vector_layers","text":"","code":"vector_layers(filename, delete=\"\", return_error=FALSE)"},{"path":"https://rspatial.github.io/terra/reference/vector_layers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List or remove layers from a vector file — vector_layers","text":"filename character. filename delete character. layers deleted (ignored value \"\" return_error logical. TRUE, error occurs layers deleted. Otherwise warning given","code":""},{"path":"https://rspatial.github.io/terra/reference/viewshed.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute a viewshed — viewshed","title":"Compute a viewshed — viewshed","text":"Use elevation data compute locations can seen, much higher seen, certain position. raster data coordinate reference system must planar (lon/lat), elevation values unit distance unit coordinate reference system.","code":""},{"path":"https://rspatial.github.io/terra/reference/viewshed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute a viewshed — viewshed","text":"","code":"# S4 method for class 'SpatRaster' viewshed(x, loc, observer=1.80, target=0, curvcoef=6/7, output=\"yes/no\", filename=\"\", ...)"},{"path":"https://rspatial.github.io/terra/reference/viewshed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute a viewshed — viewshed","text":"x SpatRaster, single layer elevation values. Values unit map units loc location (x y coordinates) cell number observer numeric. height elevation data observer target numeric. height elevation data targets curvcoef numeric. Coefficient consider effect curvature earth refraction atmosphere. elevation values corrected : elevation = elevation - curvcoeff * (distance)^2 / (earth_diameter). means default value 0.85714, lose sight 1 meter elevation 385 m planar distance output character. Can \"yes/\" get binary (logical) output showing areas visible; \"land\" get height current elevation visible; \"sea\" elevation sea level visible filename character. Output filename ... Options writing files writeRaster","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/viewshed.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute a viewshed — viewshed","text":"algorithm used Wang et al.: https://www.asprs.org/wp-content/uploads/pers/2000journal/january/2000_jan_87-90.pdf.","code":""},{"path":"https://rspatial.github.io/terra/reference/viewshed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute a viewshed — viewshed","text":"","code":"f <- system.file(\"ex/elev.tif\", package=\"terra\") r <- rast(f) x <- project(r, \"EPSG:2169\") p <- cbind(70300, 96982) v <- viewshed(x, p, 0, 0, 0.85714)"},{"path":"https://rspatial.github.io/terra/reference/voronoi.html","id":null,"dir":"Reference","previous_headings":"","what":"Voronoi diagram and Delaunay triangles — voronoi","title":"Voronoi diagram and Delaunay triangles — voronoi","text":"Get Voronoi diagram Delaunay triangles points, nodes lines polygons","code":""},{"path":"https://rspatial.github.io/terra/reference/voronoi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Voronoi diagram and Delaunay triangles — voronoi","text":"","code":"# S4 method for class 'SpatVector' voronoi(x, bnd=NULL, tolerance=0, as.lines=FALSE, deldir=FALSE)   # S4 method for class 'SpatVector' delaunay(x, tolerance=0, as.lines=FALSE, constrained=FALSE)"},{"path":"https://rspatial.github.io/terra/reference/voronoi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Voronoi diagram and Delaunay triangles — voronoi","text":"x SpatVector bnd SpatVector set outer boundary voronoi diagram tolerance numeric >= 0, snapping tolerance (0 snapping) .lines logical. TRUE, lines returned without outer boundary constrained logical. TRUE, constrained delaunay triangulation returned deldir logical. TRUE, deldir used instead GEOS C++ library method. reported deldir choke large data sets","code":""},{"path":"https://rspatial.github.io/terra/reference/voronoi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Voronoi diagram and Delaunay triangles — voronoi","text":"SpatVector","code":""},{"path":"https://rspatial.github.io/terra/reference/voronoi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Voronoi diagram and Delaunay triangles — voronoi","text":"","code":"wkt <- c(\"MULTIPOLYGON ( ((40 40, 20 45, 45 30, 40 40)),    ((20 35, 10 30, 10 10, 30 5, 45 20, 20 35),(30 20, 20 15, 20 25, 30 20)))\",    \"POLYGON ((0 -5, 10 0, 10 -10, 0 -5))\") x <- vect(wkt) v <- voronoi(x) v #>  class       : SpatVector  #>  geometry    : polygons  #>  dimensions  : 14, 0  (geometries, attributes) #>  extent      : -55, 100, -65, 100  (xmin, xmax, ymin, ymax) #>  coord. ref. :    d <- delaunay(x) d #>  class       : SpatVector  #>  geometry    : polygons  #>  dimensions  : 18, 0  (geometries, attributes) #>  extent      : 0, 45, -10, 45  (xmin, xmax, ymin, ymax) #>  coord. ref. :    plot(v, lwd=2, col=rainbow(15)) lines(x, col=\"gray\", lwd=2) points(x)"},{"path":"https://rspatial.github.io/terra/reference/vrt.html","id":null,"dir":"Reference","previous_headings":"","what":"Virtual Raster Dataset — vrt","title":"Virtual Raster Dataset — vrt","text":"Create Virtual Raster Dataset (VRT) collection file-based raster datasets (tiles). See gdalbuildvrt details.","code":""},{"path":"https://rspatial.github.io/terra/reference/vrt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Virtual Raster Dataset — vrt","text":"","code":"# S4 method for class 'character' vrt(x, filename=\"\", options=NULL, overwrite=FALSE, set_names=FALSE, return_filename=FALSE)  # S4 method for class 'SpatRasterCollection' vrt(x, filename=\"\", options=NULL, overwrite=FALSE, return_filename=FALSE)"},{"path":"https://rspatial.github.io/terra/reference/vrt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Virtual Raster Dataset — vrt","text":"x SpatRasterCollection character vector filenames raster \"tiles\". , files data , typically non-overlapping, sub-regions raster. See makeTiles filename character. output VRT filename options character. arguments separate vector elements. Options gdalbuildvrt overwrite logical. filename overwritten exists? set_names logical. Add layer names first tile vrt? return_filename logical. TRUE filename returned, otherwise SpatRaster returned","code":""},{"path":"https://rspatial.github.io/terra/reference/vrt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Virtual Raster Dataset — vrt","text":"SpatRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/vrt.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Virtual Raster Dataset — vrt","text":"VRT can reference many datasets. opened time. default open 100 files. increase performance, maximum limit can increased setting GDAL_MAX_DATASET_POOL_SIZE configuration option bigger value setGDALconfig. Note typical user process Linux limited 1024 simultaneously opened files.","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/vrt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Virtual Raster Dataset — vrt","text":"","code":"r <- rast(ncols=100, nrows=100) values(r) <- 1:ncell(r) x <- rast(ncols=2, nrows=2) filename <- paste0(tempfile(), \"_.tif\") ff <- makeTiles(r, x, filename) ff #> [1] \"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/T//Rtmp0oj9Ql/file55fb7651fde6_1.tif\" #> [2] \"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/T//Rtmp0oj9Ql/file55fb7651fde6_2.tif\" #> [3] \"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/T//Rtmp0oj9Ql/file55fb7651fde6_3.tif\" #> [4] \"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/T//Rtmp0oj9Ql/file55fb7651fde6_4.tif\"  #vrtfile <- paste0(tempfile(), \".vrt\") #v <- vrt(ff, vrtfile)   ## output in lower resolution #vrtfile <- paste0(tempfile(), \".vrt\") #v <- vrt(ff, vrtfile, options = c(\"-tr\", 5, 5)) #head(readLines(vrtfile)) #v"},{"path":"https://rspatial.github.io/terra/reference/vrt_tiles.html","id":null,"dir":"Reference","previous_headings":"","what":"filenames of VRT tiles — vrt_tiles","title":"filenames of VRT tiles — vrt_tiles","text":"Get filenames tiles Virtual Raster Dataset (VRT)","code":""},{"path":"https://rspatial.github.io/terra/reference/vrt_tiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"filenames of VRT tiles — vrt_tiles","text":"","code":"vrt_tiles(x)"},{"path":"https://rspatial.github.io/terra/reference/vrt_tiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"filenames of VRT tiles — vrt_tiles","text":"x character (filename) SpatRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/vrt_tiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"filenames of VRT tiles — vrt_tiles","text":"character","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/watershed.html","id":null,"dir":"Reference","previous_headings":"","what":"Catchment delineation — watershed","title":"Catchment delineation — watershed","text":"delineate area covered catchment SpatRaster flow direction pour-point (catchment outlet).","code":""},{"path":"https://rspatial.github.io/terra/reference/watershed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Catchment delineation — watershed","text":"","code":"# S4 method for class 'SpatRaster' watershed(x, pourpoint, filename=\"\",...)"},{"path":"https://rspatial.github.io/terra/reference/watershed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Catchment delineation — watershed","text":"x SpatRaster flow direction. See terrain. pourpoint matrix SpatVector pour point location filename character. Output filename ... additional arguments writing files writeRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/watershed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Catchment delineation — watershed","text":"SpatRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/watershed.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Catchment delineation — watershed","text":"Ezio Crestaz, Emanuele Cordano, Roman Seliger","code":""},{"path":"https://rspatial.github.io/terra/reference/watershed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Catchment delineation — watershed","text":"","code":"elev <- rast(system.file('ex/elev_vinschgau.tif', package=\"terra\")) flowdir <- terrain(elev, \"flowdir\") ## pour point at Naturns  pp <- cbind(653358.3, 5168222) w <- watershed(flowdir, pp)"},{"path":"https://rspatial.github.io/terra/reference/weighted.mean.html","id":null,"dir":"Reference","previous_headings":"","what":"Weighted mean of layers — weighted.mean","title":"Weighted mean of layers — weighted.mean","text":"Compute weighted mean cell layers SpatRaster. weights can spatially variable .","code":""},{"path":"https://rspatial.github.io/terra/reference/weighted.mean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Weighted mean of layers — weighted.mean","text":"","code":"# S4 method for class 'SpatRaster,numeric' weighted.mean(x, w, na.rm=FALSE, filename=\"\", ...)  # S4 method for class 'SpatRaster,SpatRaster' weighted.mean(x, w, na.rm=FALSE, filename=\"\", ...)"},{"path":"https://rspatial.github.io/terra/reference/weighted.mean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Weighted mean of layers — weighted.mean","text":"x SpatRaster w vector weights (one number layer), spatially variable weights, SpatRaster weights (extent, resolution number layers x) na.rm Logical. missing values removed? filename character. Output filename ... options writing files writeRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/weighted.mean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Weighted mean of layers — weighted.mean","text":"SpatRaster","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/weighted.mean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Weighted mean of layers — weighted.mean","text":"","code":"b <- rast(system.file(\"ex/logo.tif\", package=\"terra\"))     # give least weight to first layer, most to last layer wm1 <- weighted.mean(b, w=1:3)  # spatially varying weights # weigh by column number w1 <- init(b, \"col\")  # weigh by row number w2 <- init(b, \"row\") w <- c(w1, w2, w2)  wm2 <- weighted.mean(b, w=w)"},{"path":"https://rspatial.github.io/terra/reference/where.html","id":null,"dir":"Reference","previous_headings":"","what":"Where are the cells with the min or max values? — where","title":"Where are the cells with the min or max values? — where","text":"method returns cell numbers cells min max values layer SpatRaster.","code":""},{"path":"https://rspatial.github.io/terra/reference/where.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Where are the cells with the min or max values? — where","text":"","code":"# S4 method for class 'SpatRaster' where.min(x, values=TRUE, list=FALSE)  # S4 method for class 'SpatRaster' where.max(x, values=TRUE, list=FALSE)"},{"path":"https://rspatial.github.io/terra/reference/where.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Where are the cells with the min or max values? — where","text":"x SpatRaster values logical. TRUE min max values also returned list logical. TRUE list returned instead matrix","code":""},{"path":"https://rspatial.github.io/terra/reference/where.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Where are the cells with the min or max values? — where","text":"matrix list","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/where.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Where are the cells with the min or max values? — where","text":"","code":"f <- system.file(\"ex/elev.tif\", package=\"terra\") r <- rast(f) where.min(r) #>      layer cell value #> [1,]     1 7770   141 #> [2,]     1 8055   141"},{"path":"https://rspatial.github.io/terra/reference/which.html","id":null,"dir":"Reference","previous_headings":"","what":"Which cells are TRUE? — which.lyr","title":"Which cells are TRUE? — which.lyr","text":"method returns single layer SpatRaster cell values indicating first layer input TRUE. numbers zero (FALSE), considered TRUE.","code":""},{"path":"https://rspatial.github.io/terra/reference/which.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Which cells are TRUE? — which.lyr","text":"","code":"# S4 method for class 'SpatRaster' which.lyr(x)"},{"path":"https://rspatial.github.io/terra/reference/which.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Which cells are TRUE? — which.lyr","text":"x SpatRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/which.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Which cells are TRUE? — which.lyr","text":"SpatRaster","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/which.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Which cells are TRUE? — which.lyr","text":"","code":"s <- rast(system.file(\"ex/logo.tif\", package=\"terra\"))    x <- which.lyr(s > 100)"},{"path":"https://rspatial.github.io/terra/reference/width.html","id":null,"dir":"Reference","previous_headings":"","what":"SpatVector geometric properties — width","title":"SpatVector geometric properties — width","text":"width returns minimum diameter geometry, defined smallest band contains geometry, band strip plane defined two parallel lines. can thought smallest hole geometry can moved , single rotation. clearance returns minimum clearance geometry. minimum clearance smallest amount vertex moved produce invalid polygon, non-simple linestring, multipoint repeated points. geometry minimum clearance 'mc', can said : two distinct vertices geometry separated less 'mc' vertex closer 'mc' line segment endpoint. minimum clearance defined geometry (single point, multipoint whose points identical, NA returned.","code":""},{"path":"https://rspatial.github.io/terra/reference/width.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SpatVector geometric properties — width","text":"","code":"# S4 method for class 'SpatVector' width(x, as.lines=FALSE) # S4 method for class 'SpatVector' clearance(x, as.lines=FALSE)"},{"path":"https://rspatial.github.io/terra/reference/width.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SpatVector geometric properties — width","text":"x SpatVector lines polygons .lines logical. TRUE lines returned define width clearance","code":""},{"path":"https://rspatial.github.io/terra/reference/width.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SpatVector geometric properties — width","text":"numeric SpatVector","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/width.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SpatVector geometric properties — width","text":"","code":"f <- system.file(\"ex/lux.shp\", package=\"terra\") v <- vect(f) width(v) #>  [1] 25511.501 20333.498 19019.103  9255.223 20141.189 14308.518 15475.916 #>  [8] 18111.001 17435.502 15750.096 18936.122 15692.522 clearance(v) #>  [1] 24.349993 50.070894 31.878312 51.390103 13.517168 15.960117  2.871879 #>  [8] 17.584083  9.023613  4.239727  8.231322 60.918397"},{"path":"https://rspatial.github.io/terra/reference/window.html","id":null,"dir":"Reference","previous_headings":"","what":"Set a window — window","title":"Set a window — window","text":"Assign window (area interest) SpatRaster SpatExtent, set NULL remove window. similar crop without actually creating new dataset. window intersect extent SpatRaster. envisioned future version, window may also go outside boundaries.","code":""},{"path":"https://rspatial.github.io/terra/reference/window.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set a window — window","text":"","code":"# S4 method for class 'SpatRaster' window(x) <- value  # S4 method for class 'SpatRaster' window(x)"},{"path":"https://rspatial.github.io/terra/reference/window.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set a window — window","text":"x SpatRaster value SpatExtent","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/window.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set a window — window","text":"none window<- logical window","code":""},{"path":"https://rspatial.github.io/terra/reference/window.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set a window — window","text":"","code":"f <- system.file(\"ex/elev.tif\", package=\"terra\")  r <- rast(f) global(r, \"mean\", na.rm=TRUE) #>               mean #> elevation 348.3366 e <- ext(c(5.9, 6,49.95, 50))  window(r) <- e global(r, \"mean\", na.rm=TRUE) #>               mean #> elevation 396.4167 r #> class       : SpatRaster  #> dimensions  : 6, 12, 1  (nrow, ncol, nlyr) #> resolution  : 0.008333333, 0.008333333  (x, y) #> window      : 5.9, 6, 49.95, 50  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (EPSG:4326)  #> source      : elev.tif  #> name        : elevation  #> min value   :      >141  #> max value   :      547<   x <- rast(f) xe <- crop(x, e) global(xe, \"mean\", na.rm=TRUE) #>               mean #> elevation 396.4167  b <- c(xe, r) window(b) #> [1] FALSE  TRUE b #> class       : SpatRaster  #> dimensions  : 6, 12, 2  (nrow, ncol, nlyr) #> resolution  : 0.008333333, 0.008333333  (x, y) #> extent (win): 5.9, 6, 49.95, 50  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (EPSG:4326)  #> sources     : memory   #>               elev.tif   #> varnames    : elev  #>               elev  #> names       : elevation, elevation  #> min values  :       323,      >141  #> max values  :       492,      547<   window(r) <- NULL r #> class       : SpatRaster  #> dimensions  : 90, 95, 1  (nrow, ncol, nlyr) #> resolution  : 0.008333333, 0.008333333  (x, y) #> extent      : 5.741667, 6.533333, 49.44167, 50.19167  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (EPSG:4326)  #> source      : elev.tif  #> name        : elevation  #> min value   :       141  #> max value   :       547"},{"path":"https://rspatial.github.io/terra/reference/wrap.html","id":null,"dir":"Reference","previous_headings":"","what":"wrap and unwrap — wrap","title":"wrap and unwrap — wrap","text":"Use wrap pack SpatVector SpatRaster* create Packed* object. Packed objects can passed connection serializes (e.g. nodes computer cluster). receiving end need unpacked unwrap.","code":""},{"path":"https://rspatial.github.io/terra/reference/wrap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"wrap and unwrap — wrap","text":"","code":"# S4 method for class 'SpatRaster' wrap(x, proxy=FALSE)  # S4 method for class 'SpatRasterDataset' wrap(x, proxy=FALSE)  # S4 method for class 'SpatRasterCollection' wrap(x, proxy=FALSE)  # S4 method for class 'SpatVector' wrap(x)  # S4 method for class 'ANY' unwrap(x)"},{"path":"https://rspatial.github.io/terra/reference/wrap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"wrap and unwrap — wrap","text":"x SpatVector, SpatRaster, SpatRasterDataset SpatRasterCollection proxy logical. FALSE raster cell values forced memory possible. TRUE, reference source filenames stored data sources memory","code":""},{"path":"https://rspatial.github.io/terra/reference/wrap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"wrap and unwrap — wrap","text":"wrap: Packed* object unwrap: SpatVector, SpatRaster, SpatRasterCollection, SpatRasterDataset","code":""},{"path":"https://rspatial.github.io/terra/reference/wrap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"wrap and unwrap — wrap","text":"","code":"f <- system.file(\"ex/lux.shp\", package=\"terra\") v <- vect(f) p <- wrap(v) p #> [1] \"This is a PackedSpatVector object. Use 'terra::unwrap()' to unpack it\" vv <- vect(p) vv #>  class       : SpatVector  #>  geometry    : polygons  #>  dimensions  : 12, 6  (geometries, attributes) #>  extent      : 5.74414, 6.528252, 49.44781, 50.18162  (xmin, xmax, ymin, ymax) #>  coord. ref. : lon/lat WGS 84 (EPSG:4326)  #>  names       :  ID_1   NAME_1  ID_2   NAME_2  AREA       POP #>  type        : <num>    <chr> <num>    <chr> <num>     <num> #>  values      :     1 Diekirch     1 Clervaux   312 1.808e+04 #>                    1 Diekirch     2 Diekirch   218 3.254e+04 #>                    1 Diekirch     3  Redange   259 1.866e+04"},{"path":"https://rspatial.github.io/terra/reference/wrapCache.html","id":null,"dir":"Reference","previous_headings":"","what":"SpatRaster wrap with caching options — wrapCache","title":"SpatRaster wrap with caching options — wrapCache","text":"Use wrap pack SpatRaster caching options. See wrap general approach easier better use cases. method allows specifying folder, filenames, cache sources SpatRaster specific location (disk).","code":""},{"path":"https://rspatial.github.io/terra/reference/wrapCache.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SpatRaster wrap with caching options — wrapCache","text":"","code":"# S4 method for class 'SpatRaster' wrapCache(x, filename=NULL, path=NULL, overwrite=FALSE, ...)"},{"path":"https://rspatial.github.io/terra/reference/wrapCache.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SpatRaster wrap with caching options — wrapCache","text":"x SpatRaster filename character. single filename, one filename per SpatRaster data source. NULL, raster sources saved files path character. NULL, path raster sources saved. Ignored filenames NULL overwrite existing files overwritten files path NULL? value TRUE FALSE, files exist created ... Additional arguments writeRaster. used raster sources memory, sources cached copying files","code":""},{"path":"https://rspatial.github.io/terra/reference/wrapCache.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SpatRaster wrap with caching options — wrapCache","text":"PackedSpatRaster","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/wrapCache.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SpatRaster wrap with caching options — wrapCache","text":"","code":"f <- system.file(\"ex/elev.tif\", package=\"terra\") r <- rast(f)  x <- wrapCache(r, path=tempdir()) x #> [1] \"This is a PackedSpatRaster object. Use 'terra::unwrap()' to unpack it\""},{"path":"https://rspatial.github.io/terra/reference/writeCDF.html","id":null,"dir":"Reference","previous_headings":"","what":"Write raster data to a NetCDF file — writeCDF","title":"Write raster data to a NetCDF file — writeCDF","text":"Write SpatRaster SpatRasterDataset NetCDF file. using SpatRasterDataset, varname, longname, unit set object (see examples). Always use \".nc\" \".cdf\" file extension assure file can properly read GDAL","code":""},{"path":"https://rspatial.github.io/terra/reference/writeCDF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write raster data to a NetCDF file — writeCDF","text":"","code":"# S4 method for class 'SpatRaster' writeCDF(x, filename, varname, longname=\"\", unit=\"\", split=FALSE, ...)  # S4 method for class 'SpatRasterDataset' writeCDF(x, filename, overwrite=FALSE, zname=\"time\", atts=\"\",      gridmap=\"\", prec=\"float\", compression=NA, missval, ...)"},{"path":"https://rspatial.github.io/terra/reference/writeCDF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write raster data to a NetCDF file — writeCDF","text":"x SpatRaster SpatRasterDataset filename character. Output filename varname character. Name dataset longname character. Long name dataset unit character. Unit data split logical. TRUE layer x treated sub-dataset atts character. vector additional global attributes write. must formatted like c(\"x=value\", \"y=abc\") gridmap character. crs always written file standard formats. argument can also write format commonly used netcdf files. Something like c(\"grid_mapping_name=lambert_azimuthal_equal_area\", \"longitude_of_projection_origin=10\", \"latitude_of_projection_origin=52\", \"false_easting=4321000\", \"false_northing=3210000\") overwrite logical. TRUE, filename overwritten zname character. name \"time\" dimension prec character. One \"double\", \"float\", \"integer\", \"short\", \"byte\" \"char\" compression Can set integer 1 (least compression) 9 (compression) missval numeric, number used indicate missing values ... additional arguments passed SpatRasterDataset method, possibly ncvar_def","code":""},{"path":"https://rspatial.github.io/terra/reference/writeCDF.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write raster data to a NetCDF file — writeCDF","text":"SpatRaster SpatDataSet","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/writeCDF.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write raster data to a NetCDF file — writeCDF","text":"","code":"f <- system.file(\"ex/elev.tif\", package=\"terra\") r <- rast(f) fname <- paste0(tempfile(), \".nc\") rr <- writeCDF(r, fname, overwrite=TRUE, varname=\"alt\",        longname=\"elevation in m above sea level\", unit=\"m\")  a <- rast(ncols=5, nrows=5, nl=50) values(a) <- 1:prod(dim(a)) time(a) <- as.Date(\"2020-12-31\") + 1:nlyr(a) aa <- writeCDF(a, fname, overwrite=TRUE, varname=\"power\",        longname=\"my nice data\", unit=\"U/Pa\")  b <- sqrt(a) s <- sds(a, b) names(s) <- c(\"temp\", \"prec\") longnames(s) <- c(\"temperature (C)\", \"precipitation (mm)\") units(s) <- c(\"°C\", \"mm\") ss <- writeCDF(s, fname, overwrite=TRUE)  # for CRAN file.remove(fname) #> [1] TRUE"},{"path":"https://rspatial.github.io/terra/reference/writeRaster.html","id":null,"dir":"Reference","previous_headings":"","what":"Write raster data to a file — writeRaster","title":"Write raster data to a file — writeRaster","text":"Write SpatRaster file.","code":""},{"path":"https://rspatial.github.io/terra/reference/writeRaster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write raster data to a file — writeRaster","text":"","code":"# S4 method for class 'SpatRaster,character' writeRaster(x, filename, overwrite=FALSE, ...)"},{"path":"https://rspatial.github.io/terra/reference/writeRaster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write raster data to a file — writeRaster","text":"x SpatRaster filename character. Output filename. Can single filename, many filenames nlyr(x) write file layer overwrite logical. TRUE, filename overwritten ... additional arguments writing files. See Details","code":""},{"path":"https://rspatial.github.io/terra/reference/writeRaster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write raster data to a file — writeRaster","text":"SpatRaster. function used side-effect writing values file.","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/writeRaster.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Write raster data to a file — writeRaster","text":"writeRaster, methods generate SpatRasters, options writing raster files disk can provided additional arguments , cases, wopt argument (named list) additional arguments already used different purpose. See terraOptions get set default values. following options available:","code":""},{"path":"https://rspatial.github.io/terra/reference/writeRaster.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Write raster data to a file — writeRaster","text":"GeoTiff files , default, written LZW compression. want compression, use gdal=\"COMPRESS=NONE\". writing integer values lowest available value (given datatype) used represent NA signed types, highest value used unsigned values. can problem byte data (0 255) value 255 reserved NA. keep value 255, need set another value NAflag, set NAflag (NAflag=NA)","code":""},{"path":"https://rspatial.github.io/terra/reference/writeRaster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write raster data to a file — writeRaster","text":"","code":"r <- rast(nrows=5, ncols=5, vals=1:25)  # create a temporary filename for the example f <- file.path(tempdir(), \"test.tif\")  writeRaster(r, f, overwrite=TRUE)  writeRaster(r, f, overwrite=TRUE, gdal=c(\"COMPRESS=NONE\", \"TFW=YES\"), datatype='INT1U')  ## Or with a wopt argument:  writeRaster(r, f, overwrite=TRUE, wopt= list(gdal=c(\"COMPRESS=NONE\"), datatype='INT1U'))  ## remove the file unlink(f)"},{"path":"https://rspatial.github.io/terra/reference/writeVector.html","id":null,"dir":"Reference","previous_headings":"","what":"Write SpatVector data to a file — writeVector","title":"Write SpatVector data to a file — writeVector","text":"Write SpatVector file. can choose one many file formats.","code":""},{"path":"https://rspatial.github.io/terra/reference/writeVector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write SpatVector data to a file — writeVector","text":"","code":"# S4 method for class 'SpatVector,character' writeVector(x, filename, filetype=NULL, layer=NULL, insert=FALSE,     overwrite=FALSE, options=\"ENCODING=UTF-8\")"},{"path":"https://rspatial.github.io/terra/reference/writeVector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write SpatVector data to a file — writeVector","text":"x SpatVector filename character. Output filename filetype character. file format associated GDAL \"driver\" \"ESRI Shapefile\". See gdal(drivers=TRUE) GDAL docs. NULL attempted guess filetype filename extension layer character. Output layer name. NULL filename used insert logical. TRUE, new layer inserted file, existing layer overwritten (overwrite=TRUE), format supports (e.g. GPKG allows ). See vector_layers remove layer overwrite logical. TRUE insert=FALSE, filename overwritten file format layer structure permits . TRUE insert=TRUE, target layer overwritten format supports (e.g. GPKG). options character. Format specific GDAL options \"ENCODING=UTF-8\". Use NULL \"\" use options","code":""},{"path":"https://rspatial.github.io/terra/reference/writeVector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write SpatVector data to a file — writeVector","text":"","code":"v <- vect(cbind(1:5,1:5)) crs(v) <- \"+proj=longlat +datum=WGS84\" v$id <- 1:length(v) v$name <- letters[1:length(v)] tmpf1 <- paste0(tempfile(), \".gpkg\") writeVector(v, tmpf1, overwrite=TRUE) x <- vect(tmpf1)  f <- system.file(\"ex/lux.shp\", package=\"terra\") v <- vect(f) tmpf2 <- paste0(tempfile(), \".gpkg\") writeVector(v, tmpf2, overwrite=TRUE) y <- vect(tmpf2)"},{"path":"https://rspatial.github.io/terra/reference/xapp.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply a function to the cells of a two SpatRasters — xapp","title":"Apply a function to the cells of a two SpatRasters — xapp","text":"Apply function values cell two (multilayer) SpatRasters.","code":""},{"path":"https://rspatial.github.io/terra/reference/xapp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply a function to the cells of a two SpatRasters — xapp","text":"","code":"# S4 method for class 'SpatRaster,SpatRaster' xapp(x, y, fun, ..., filename=\"\", overwrite=FALSE, wopt=list())"},{"path":"https://rspatial.github.io/terra/reference/xapp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply a function to the cells of a two SpatRasters — xapp","text":"x SpatRaster y SpatRaster geometry x fun function operates two vectors ... additional arguments fun. typically numerical constants. *never* another SpatRaster filename character. Output filename overwrite logical. TRUE, filename overwritten wopt list named options writing files writeRaster","code":""},{"path":"https://rspatial.github.io/terra/reference/xapp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply a function to the cells of a two SpatRasters — xapp","text":"SpatRaster","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/xapp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply a function to the cells of a two SpatRasters — xapp","text":"","code":"r <- rast(ncols=10, nrows=10, nlyr=5) set.seed(1) r <- init(r, runif) s <- init(r, runif) x <- xapp(r, s, fun=cor)"},{"path":"https://rspatial.github.io/terra/reference/xmin.html","id":null,"dir":"Reference","previous_headings":"","what":"Get or set single values of an extent — xmin","title":"Get or set single values of an extent — xmin","text":"Get set single values extent. Values can set SpatExtent SpatRaster, SpatVector)","code":""},{"path":"https://rspatial.github.io/terra/reference/xmin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get or set single values of an extent — xmin","text":"","code":"# S4 method for class 'SpatExtent' xmin(x)  # S4 method for class 'SpatExtent' xmax(x)  # S4 method for class 'SpatExtent' ymin(x)  # S4 method for class 'SpatExtent' ymax(x)  # S4 method for class 'SpatRaster' xmin(x)  # S4 method for class 'SpatRaster' xmax(x)  # S4 method for class 'SpatRaster' ymin(x)  # S4 method for class 'SpatRaster' ymax(x)  # S4 method for class 'SpatVector' xmin(x)  # S4 method for class 'SpatVector' xmax(x)  # S4 method for class 'SpatVector' ymin(x)  # S4 method for class 'SpatVector' ymax(x)  # S4 method for class 'SpatRaster,numeric' xmin(x) <- value  # S4 method for class 'SpatRaster,numeric' xmax(x) <- value  # S4 method for class 'SpatRaster,numeric' ymin(x) <- value  # S4 method for class 'SpatRaster,numeric' ymax(x) <- value"},{"path":"https://rspatial.github.io/terra/reference/xmin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get or set single values of an extent — xmin","text":"x SpatRaster, SpatExtent, SpatVector value numeric","code":""},{"path":"https://rspatial.github.io/terra/reference/xmin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get or set single values of an extent — xmin","text":"SpatExtent numeric coordinate","code":""},{"path":"https://rspatial.github.io/terra/reference/xmin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get or set single values of an extent — xmin","text":"","code":"r <- rast() ext(r) #> SpatExtent : -180, 180, -90, 90 (xmin, xmax, ymin, ymax) ext(c(0, 20, 0, 20)) #> SpatExtent : 0, 20, 0, 20 (xmin, xmax, ymin, ymax)  xmin(r) #> [1] -180 xmin(r) <- 0 xmin(r) #> [1] 0"},{"path":"https://rspatial.github.io/terra/reference/xyCellFrom.html","id":null,"dir":"Reference","previous_headings":"","what":"Coordinates from a row, column or cell number and vice versa — xyRowColCell","title":"Coordinates from a row, column or cell number and vice versa — xyRowColCell","text":"Get coordinates center raster cells row, column, cell number SpatRaster. get row, column, cell numbers coordinates . Cell numbers start 1 upper left corner, increase left right, top bottom. last cell number equals number cells SpatRaster (see ncell). Row numbers start 1 top, column numbers start 1 left. computing row, column, cell numbers coordinates, coordinates fall edge two four cells, assigned right-/lowest cell. , cases ambiguity, highest row, column, cell number returned.","code":""},{"path":"https://rspatial.github.io/terra/reference/xyCellFrom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coordinates from a row, column or cell number and vice versa — xyRowColCell","text":"","code":"# S4 method for class 'SpatRaster,numeric' xFromCol(object, col)  # S4 method for class 'SpatRaster,numeric' yFromRow(object, row)  # S4 method for class 'SpatRaster,numeric' xyFromCell(object, cell)  # S4 method for class 'SpatRaster,numeric' xFromCell(object, cell)  # S4 method for class 'SpatRaster,numeric' yFromCell(object, cell)  # S4 method for class 'SpatRaster,numeric' colFromX(object, x)  # S4 method for class 'SpatRaster,numeric' rowFromY(object, y)  # S4 method for class 'SpatRaster,numeric,numeric' cellFromRowCol(object, row, col)  # S4 method for class 'SpatRaster,numeric,numeric' cellFromRowColCombine(object, row, col)  # S4 method for class 'SpatRaster,numeric,numeric' rowColCombine(object, row, col)  # S4 method for class 'SpatRaster,numeric' rowFromCell(object, cell)  # S4 method for class 'SpatRaster,numeric' colFromCell(object, cell)  # S4 method for class 'SpatRaster,numeric' rowColFromCell(object, cell)  # S4 method for class 'SpatRaster,matrix' cellFromXY(object, xy)"},{"path":"https://rspatial.github.io/terra/reference/xyCellFrom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coordinates from a row, column or cell number and vice versa — xyRowColCell","text":"object SpatRaster cell integer. cell number(s) col integer. column number(s) missing (equivalent columns) row integer. row number(s) missing (equivalent rows) x x coordinate(s) y y coordinate(s) xy matrix x y coordinates","code":""},{"path":"https://rspatial.github.io/terra/reference/xyCellFrom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coordinates from a row, column or cell number and vice versa — xyRowColCell","text":"xFromCol, yFromCol, xFromCell, yFromCell: vector x y coordinates xyFromCell: matrix(x,y) coordinate pairs colFromX, rowFromY, cellFromXY, cellFromRowCol, rowFromCell, colFromCell: vector row, column, cell numbers rowColFromCell, rowColCombine: matrix row column numbers","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/xyCellFrom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coordinates from a row, column or cell number and vice versa — xyRowColCell","text":"","code":"r <- rast()  xFromCol(r, c(1, 120, 180)) #> [1] -179.5  -60.5   -0.5 yFromRow(r, 90) #> [1] 0.5 xyFromCell(r, 10000) #>         x    y #> [1,] 99.5 62.5 xyFromCell(r, c(0, 1, 32581, ncell(r), ncell(r)+1)) #>           x     y #> [1,]    NaN   NaN #> [2,] -179.5  89.5 #> [3,]    0.5  -0.5 #> [4,]  179.5 -89.5 #> [5,]    NaN   NaN  cellFromRowCol(r, 5, 5) #> [1] 1445 cellFromRowCol(r, 1:2, 1:2) #> [1]   1 362 cellFromRowCol(r, 1, 1:3) #> [1] 1 2 3  # all combinations cellFromRowColCombine(r, 1:2, 1:2) #> [1]   1   2 361 362  colFromX(r, 10) #> [1] 191 rowFromY(r, 10) #> [1] 81 xy <- cbind(lon=c(10,5), lat=c(15, 88)) cellFromXY(r, xy) #> [1] 27191   906  # if no row/col specified all are returned range(xFromCol(r)) #> [1] -179.5  179.5 length(yFromRow(r)) #> [1] 180"},{"path":"https://rspatial.github.io/terra/reference/zonal.html","id":null,"dir":"Reference","previous_headings":"","what":"Zonal statistics — zonal","title":"Zonal statistics — zonal","text":"Compute zonal statistics, summarize values SpatRaster \"zone\" defined another SpatRaster, SpatVector polygon geometry. fun true R function, <SpatRaster,SpatRaster> method may fail using large SpatRasters, except functions (\"mean\", \"min\", \"max\", \"sum\", \"isNA\", \"notNA\"). can also summarize values SpatVector polygon (zone) defined another SpatVector.","code":""},{"path":"https://rspatial.github.io/terra/reference/zonal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Zonal statistics — zonal","text":"","code":"# S4 method for class 'SpatRaster,SpatRaster' zonal(x, z, fun=\"mean\", ..., w=NULL, wide=TRUE,     as.raster=FALSE, filename=\"\", overwrite=FALSE, wopt=list())  # S4 method for class 'SpatRaster,SpatVector' zonal(x, z, fun=\"mean\", na.rm=FALSE, w=NULL, weights=FALSE,     exact=FALSE, touches=FALSE, small=TRUE, as.raster=FALSE,     as.polygons=FALSE, wide=TRUE, filename=\"\", wopt=list())  # S4 method for class 'SpatVector,SpatVector' zonal(x, z, fun=mean, ..., weighted=FALSE, as.polygons=FALSE)"},{"path":"https://rspatial.github.io/terra/reference/zonal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Zonal statistics — zonal","text":"x SpatRaster SpatVector z SpatRaster cell-values representing zones SpatVector polygon geometry representing zone. z can multiple layers define intersecting zones fun function applied summarize values zone. Either character: \"mean\", \"min\", \"max\", \"sum\", \"isNA\", \"notNA\" , relatively small SpatRasters, proper function ... additional arguments passed fun, na.rm=TRUE w SpatRaster weights. single-layer non-negative values wide logical. values returned wide format? SpatRaster, SpatRaster method affects results nlyr(z) == 2. SpatRaster, SpatVector method affects results fun=table .raster logical. TRUE, SpatRaster returned zonal statistic zone filename character. Output filename (ignored .raster=FALSE overwrite logical. TRUE, filename overwritten wopt list additional arguments writing files writeRaster weights logical. TRUE y polygons, approximate fraction cell covered returned well, example compute weighted mean exact logical. TRUE y polygons, exact fraction cell covered returned well, example compute weighted mean touches logical. TRUE, values cells touched lines polygons extracted, just line render path, whose center point within polygon. relevant points; always considered TRUE weights=TRUE exact=TRUE small logical. TRUE, values cells touched polygons extracted none cells center points within polygon; even touches=FALSE weighted logical. TRUE, weighted.mean computed fun ignored. Weights based length lines area polygons x intersect z. argument ignored x SpatVector points .polygons logical. zonal statistics combined geometry z? na.rm logical. TRUE, NAs removed","code":""},{"path":"https://rspatial.github.io/terra/reference/zonal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Zonal statistics — zonal","text":"data.frame value zone, SpatRaster, SpatVector polygons.","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/reference/zonal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Zonal statistics — zonal","text":"","code":"### SpatRaster, SpatRaster r <- rast(ncols=10, nrows=10) values(r) <- 1:ncell(r) z <- rast(r) values(z) <- rep(c(1:2, NA, 3:4), each=20) names(z) <- \"zone\" zonal(r, z, \"sum\", na.rm=TRUE) #>   zone lyr.1 #> 1    1   210 #> 2    2   610 #> 3    3  1410 #> 4    4  1810  # with weights  w <- init(r, \"col\") zonal(r, z, w=w, \"mean\", na.rm=TRUE) #>   zone lyr.1 #> 1    1    12 #> 2    2    32 #> 3    3    72 #> 4    4    92  # multiple layers r <- rast(system.file(\"ex/logo.tif\", package = \"terra\"))  # zonal layer  z <- rast(r, 1) names(z) <- \"zone\" values(z) <- rep(c(1:2, NA, c(3:4)), each=ncell(r)/5, length.out=ncell(r))  zonal(r, z, \"mean\", na.rm = TRUE) #>   zone      red    green     blue #> 1    1 197.9486 198.0103 193.5556 #> 2    2 173.2219 176.7717 185.2585 #> 3    3 168.2952 172.6232 184.6939 #> 4    4 193.5859 197.0019 206.5717  # raster of zonal values zr <- zonal(r, z, \"mean\", na.rm = TRUE, as.raster=TRUE)   ### SpatRaster, SpatVector x <- rast(ncol=2,nrow=2, vals=1:4, xmin=0, xmax=1, ymin=0, ymax=1, crs=\"+proj=utm +zone=1\") p <- as.polygons(x) pp <- shift(p, .2) r <- disagg(x, 4)  zonal(r, p) #>   lyr.1 #> 1     1 #> 2     2 #> 3     3 #> 4     4 zonal(r, p, sum) #>   lyr.1 #> 1    16 #> 2    32 #> 3    48 #> 4    64 zonal(x, pp, exact=TRUE) #>   lyr.1 #> 1   1.4 #> 2   2.0 #> 3   3.4 #> 4   4.0 zonal(c(x, x*10), pp, w=x) #>   lyr.1 lyr.1 #> 1     1    10 #> 2     2    20 #> 3     3    30 #> 4     4    40   ### SpatVector, SpatVector  f <- system.file(\"ex/lux.shp\", package=\"terra\") v <- vect(f)[,c(2,4)]  p <- spatSample(v, 100) values(p) <- data.frame(b2=1:100, ssep1=100:1)  zonal(p, v, mean) #>    zone       b2    ssep1 #> 1     1 45.60000 55.40000 #> 2     2 45.66667 55.33333 #> 3     3 49.00000 52.00000 #> 4     4 66.66667 34.33333 #> 5     5 50.66667 50.33333 #> 6     6 59.33333 41.66667 #> 7     7 59.16667 41.83333 #> 8     8 48.88889 52.11111 #> 9     9 55.40000 45.60000 #> 10   10 49.42857 51.57143 #> 11   11 40.85714 60.14286 #> 12   12 48.16667 52.83333"},{"path":"https://rspatial.github.io/terra/reference/zoom.html","id":null,"dir":"Reference","previous_headings":"","what":"Zoom in on a map — zoom","title":"Zoom in on a map — zoom","text":"Zoom map (plot) providing new extent, default done clicking twice map.","code":""},{"path":"https://rspatial.github.io/terra/reference/zoom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Zoom in on a map — zoom","text":"","code":"# S4 method for class 'SpatRaster' zoom(x, e=draw(), maxcell=100000, layer=1, new=FALSE, ...)  # S4 method for class 'SpatVector' zoom(x, e=draw(), new=FALSE, ...)"},{"path":"https://rspatial.github.io/terra/reference/zoom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Zoom in on a map — zoom","text":"x SpatRaster e SpatExtent maxcell positive integer. Maximum number cells used map layer positive integer select layer used new logical. TRUE, zoomed map appear new device (window) ... additional arguments passed plot","code":""},{"path":"https://rspatial.github.io/terra/reference/zoom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Zoom in on a map — zoom","text":"SpatExtent (invisibly)","code":""},{"path":[]},{"path":[]},{"path":"https://rspatial.github.io/terra/news/index.html","id":"bug-fixes-1-8-26","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"version 1.8-26","text":"cover<SpatRaster> work well multiple replacement values supplied #1741 Tim Howard ext<-<SpatRaster,SpatExtent> made shallow copy. Reproted 79440691 katefull06 extract<SpatRaster> cells used NA flag first data source. [GSE 490433] (https://gis.stackexchange.com/questions/490433/problem-extracting-values--raster--r--terra-package) MartinL","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"enhancements-1-8-26","dir":"Changelog","previous_headings":"","what":"enhancements","title":"version 1.8-26","text":"spatSample<SpatRaster> spatSample<SpatExtent> gain argument “exact=FALSE” request exact (perhaps less regular) sample size regular sample. Currently pnly planar crs. spatSample<SpatRaster> gains argument “=TRUE” request, using stratified sampling, sample size stratum, strata combined. focal now maintains categories “fun=modal”, “min”, “max”, “first” 79449904 Sophie Père","code":""},{"path":[]},{"path":"https://rspatial.github.io/terra/news/index.html","id":"version-18-21","dir":"Changelog","previous_headings":"","what":"version 1.8-21","title":"version 1.8-21","text":"CRAN release: 2025-02-10 Released 2025-02-10","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"bug-fixes-1-8-21","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"version 1.8-21","text":"sieve failed large rasters #1729 Reed Humphrey extractRange worked SpatVector, matrix vector #1733 Victor Van der Meersch extract<SpatRaster> https multilayer SpatRaster returned values first layer layer #1736 Shannon Albeke","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"enhancements-1-8-21","dir":"Changelog","previous_headings":"","what":"enhancements","title":"version 1.8-21","text":"new argument xyz=“” rast<SpatVector> method new arguments “type” “breaks” plet<SpatRaster> method #1187 Augustin Lobo new argument “cores” lapp<SpatRasterDataset> #1190 kel44 aggregate<SpatRaster> now handles fun=\"table\" #1662 Fernando Aramburu.","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"new-1-8-21","dir":"Changelog","previous_headings":"","what":"new","title":"version 1.8-21","text":".flipped<SpatRaster> method #1627>` Timothée Giraud .array<SpatRasterDataset> method distance<SpatRaster,missing> now argument “values”. TRUE, values nearest non-target cell returned instead distance #1243 Simon Dedman thresh<SpatRaster> #1233 Agustin Lobo","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"version-18-15","dir":"Changelog","previous_headings":"","what":"version 1.8-15","title":"version 1.8-15","text":"CRAN release: 2025-01-24 Released 2025-01-24","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"bug-fixes-1-8-15","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"version 1.8-15","text":"readRDS failed rasters timestep=“seconds” #1711 Pascal Oettli divide<SpatVector> always returned NULL #1724 Márcia Barbosa erase failed cases #1710 erkent-carb","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"enhancements-1-8-15","dir":"Changelog","previous_headings":"","what":"enhancements","title":"version 1.8-15","text":"bestMatch now argument “fun” allow use different distance measures,  method wrap (writeRDS) now captures varnames/longnames #1719 Andrew Gene Brown improved raster metadata writing #1714 Andrew Gene Brown vect writeVector now properly read write date datetime data. #1718 Andrew Gene Brown improved estimate available memory linux systems #1506 Cedric Rossi","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"version-18-10","dir":"Changelog","previous_headings":"","what":"version 1.8-10","title":"version 1.8-10","text":"CRAN release: 2025-01-14 Released 2025-01-13","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"bug-fixes-1-8-10","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"version 1.8-10","text":"expanse<SpatRaster>(transform=TRUE) crashed R crs “local”. #1671 Michael Chirico patches(values=TRUE) wrapped around edges #1675 Michael Chirico spin now correctly handles spherical coordinates #1576 jeanlobry mosaic sometimes crashed R #1524 John Baums, Dave Klinges, Hugh Graham. spatSample ignored argument “exp” taking random sample na.rm=TRUE large raster #1437 Babak Naimi split<SpatVector,SpatVector> work properly #1619 Michael Sumner autocor improved handling NA cells global Moran computation #1992 Nicholas Berryman shade memory-safe. #1452 Francis van Oordt Chris English fixed bug rasterize revealed using crop(mask=TRUE) #1686 edixon1 fixed to_id = NA bug nearest #1471 Mats Blomqvist better handling date/unit #1684 #1688 Andrew Gene Brown spatSample(method=\"regular\") raster one column returned many samples #1362 Daniel R Schlaepfer","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"enhancements-1-8-10","dir":"Changelog","previous_headings":"","what":"enhancements","title":"version 1.8-10","text":"plot<SpatVector> now uses default viridis color palette plot<SpatRaster> #1670 Márcia Barbosa relate now accepts relation=“equals” #1672 Krzysztof Dyba init now accepts additional arguments function “fun” better handling 32 connections limitation set HDF4 library #1481 Dimitri Falk using RStudio per session warning given using draw, sel click #1063 Sergei Kharchenko distance<SpatRaster> lon lat lines/polygons computes distance edges instead nodes #1462 Derek Friend distance<SpatVector,SpatVector> now works lon/lat data #1615 Wencheng Lau-Medrano using overviews faster plotting COGs http #1353 Michael Sumner #1412; argument plot(x, overview=) change default behavior. extract points now faster rasters accessed http #1504 Krzysztof Dyba extract many points large rasters slower compared “raster” (uses terra !) #1584 Hassan Masoomi merge now three alternative algorithms 1366 Hassan Masoomi #1650 Agustin Lobo","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"new-1-8-10","dir":"Changelog","previous_headings":"","what":"new","title":"version 1.8-10","text":"$<SpatRaster> can now used get categorical SpatRaster different active category scale_linear<SpatRaster> method linear scaling cell values minimum maximum value 0 1 distance related methods get argument “method” choose distance algorithm lon/lat data #1677 Márcia Barbosa divide<SpatRaster> divide<SpatVector> methods nseg counts number segments SpatVector #1647 Michael Chirico extract argument “search_radius” extract values nearest raster cell NA #873 matthewseanmarcus combineLevels combine levels layers link Sam","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"version-18-5","dir":"Changelog","previous_headings":"","what":"version 1.8-5","title":"version 1.8-5","text":"CRAN release: 2024-12-12 Released 2024-12-12","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"bug-fixes-1-8-5","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"version 1.8-5","text":"spatSample(method='stratified', ext=e) returned wrong sampling coordinates #1628 Barnabas Harris spatSample(method='stratified') fail small sample sizes #1503 karluf transparency (alpha) work RGB plotting. #1642 Timothée Giraud rasterization failed large rasters #1636 Mary Fisher, #1463 Nic Spono #1281 Sebastian Dunnett tmpFiles looked default temp files folder #1630 smckenzie1986 .min work well negative values #1634 Michael Sumner plet<SpatRaster> now works RGB rasters rasters color table #1596 Agustin Lobo vect<MULTIPOINT WKT> work properly #1376 silasprincipe compareGeom<SpatVector> work #1654 Jason Flower buffer<SpatVector> now accurate buffers lonlat polygons #1616 Roberto Amaral-Santos terra:interpNear used square windows, circles, beyond 100 points #1509 Jean-Luc Dupouey vect read INT64 fields integers, sometimes leading overflows. #1666 bengannon-fc plot showed legend title even none requested title parameters specified . #1664 Márcia Barbosa","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"enhancements-1-8-5","dir":"Changelog","previous_headings":"","what":"enhancements","title":"version 1.8-5","text":"improved documentation writeVector overwrite using layers. #1573 Todd West improved treatment (supposedly) flipped rasters Timothée Giraud #1627 fchianucci #1646 added map.pal(\"random\") #1631 Agustin Lobo expressions can now used legend titles #1626 Noah Goodkind app tapp now emit warning factors coerced numeric #1566 shuysman plet<SpatRaster> now argument “stretch” RGB rasters #1596 Agustin %% %/% now behave SpatRaster (base R) numbers #1661 Klaus Huebert","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"new-1-8-5","dir":"Changelog","previous_headings":"","what":"new","title":"version 1.8-5","text":"patches option valus=TRUE can now distinguish regions based cell values (instead NA vs -NA) #495 Jakub Nowosad #1632 Agustin Lobo rowSums, rowMeans, colSums colMeans SpatRaster metags SpatRasterDataset #1624 Andrea Manica metags layers (bands) SpatRaster now saved read GTiff files #1071 Mike Koontz global new effcient functions “anyNA” “anynotNA” #1540 Kevin J Wolz wrap, saveRDS serialize SpatExtent. #1430 BastienFR vect<SpatGraticule> method suggested relation tidyterra #155 Diego Hernangómez toMemory<SpatRaster> <SpatRasterDataset> methods #1660 Derek Friend","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"version-17-83","dir":"Changelog","previous_headings":"","what":"version 1.7-83","title":"version 1.7-83","text":"CRAN release: 2024-10-14 Released 2024-10-14","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"bug-fixes-1-7-83","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"version 1.7-83","text":"flip(direction=\"vertical\") failed cases #1518 Ed Carnell zonal(.raster=TRUE) failed zonal raster categorical 1514 Jessi L Brown distance<data.frame,data.frame> <matrix,matrix> ignored unit argument. #1545 Wencheng Lau-Medrano NetCDF files month time-step encode 0-11 made R crash #1544 Martin Holdrege split<SpatVector> worked well split field type character. #1530 Igor Graczykowski gridDist (probably methods) emitted “overwrite existing file” error processing large datasets #1522 Clare Pearson terrain accept multiple variables #1561 Michael Mahoney rotate vulnerable integer overflow #1562 Sacha Ruzzante getTileExtents return overlapping tiles tiles gaps due floating point imprecision. #1564 Michael Sumner rasterize points failed using update=TRUE #1611 Jordan Adamson buffer lonlat multipoint SpatVector returned buffer around single point. #1607 Márcia Barbosa buffer<SpatVector> longer crashes (particular cases unknown reasons) windows #1331 Julian090601, #1363 Rupert Overall #1531 Igor Graczykowski","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"enhancements-1-7-83","dir":"Changelog","previous_headings":"","what":"enhancements","title":"version 1.7-83","text":".list<SpatRasterDataset> sets names list #1513 SpatVectorCollection can now subset names; made list takes names list. 1515 jedgroev argument fill_range plot plot<SpatVector> use color extreme values specified range #1553 Mike Koontz plet<SpatRaster> can now handle rasters “local” (Cartesian) CRS. #1570 Augustin Lobo. geom can now return “wkb” #1609 faster plotting color names used. response question Olle gis.stackexchange.com","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"new-1-7-83","dir":"Changelog","previous_headings":"","what":"new","title":"version 1.7-83","text":"map_extent returns coordinates axes position map created plot<Spat*> #1517 Daniel Schuch polys<leaflet> method #1543 Márcia Barbosa plot<SpatVectorCollection> method #1532 jedgroev add_mtext add text around margins map. #1567 Daniel Schuch","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"version-17-78","dir":"Changelog","previous_headings":"","what":"version 1.7-78","title":"version 1.7-78","text":"CRAN release: 2024-05-22 Released 2024-05-22","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"bug-fixes-1-7-78","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"version 1.7-78","text":"writeVector readVector better handle empty geopackage layers #1426 Andrew Gene Brown. writeCDF wrote global variables one #1443 Daniel Schlaepfer rasterize “” returned odd layernames #1435 Philippe Massicotte convHull, minCircle minRect zero-row SpatVector crashed R #1445 Andrew Gene Brown rangeFill argument circular=TRUE work properly #1460 Alice crs(describe = TRUE) returned mis-ordered extent #1485 Dimitri Falk tapp custom function index like “yearmonths” shift time considering time zone. #1483 Finn Roberts plot<SpatRaster> fail multiple values small differences #1491 srfall .data.frame<SpatRaster> “xy=TRUE” “wide=FALSE” fail coordinates similar #1476 Pascal Oettli rasterizeGeom now returns correct layer name #1472 HRodenhizer cellSize “mask=TRUE” failed output written temp file #1496 Pascal Sauer ext<SpatVectorProxy> return full extent #1501 erkent-carb","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"enhancements-1-7-78","dir":"Changelog","previous_headings":"","what":"enhancements","title":"version 1.7-78","text":"extract new argument “small=TRUE” allow strict use “touches=FALSE” #1419 Floris Vanderhaeghe. .list<SpatRaster> new argument “geom=NULL” rast<list> now recognizes (x, y, z) base R “image” structures stackoverflow Ignacio Marzan. inset new arguments “offset” “add” #1422 Armand-CT expanse<SpatRaster> argument usenames #1446 Bappa Das default color palette now terra::map.pal(\"viridis\") instead terrain.colors. default can changes options(terra.pal=...) #1474 Derek Friend .list<SpatRasterDataset> now returns named list. #1513 Eric R. Scott","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"new-1-7-78","dir":"Changelog","previous_headings":"","what":"new","title":"version 1.7-78","text":"bestMatch<SpatRaster> method argument “pairs=TRUE” cells #1487 Floris Vanderhaeghe add_grid add grid map","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"version-17-71","dir":"Changelog","previous_headings":"","what":"version 1.7-71","title":"version 1.7-71","text":"CRAN release: 2024-01-31 Released 2024-01-31","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"bug-fixes-1-7-71","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"version 1.7-71","text":"k_means work NAs #1314 Jakub Nowosad layerCor custom function work anymore #1387 Jakub Nowosad plet broke using “panel=TRUE” #1384 Elise Hellwig using /vis3/ open SpatRaster work #1382 Mike Koontz plot<SpatRaster>(add=TRUE) sampled raster data without considering extent map. #1394 Márcia Barbosa plot<SpatRaster>(add=TRUE) now considers first layer multi-layer SpatRaster 1395 Márcia Barbosa set.cats failed tibble used instead data.frame #1406 Mike Koontz polys argument “alpha” ignored single color used. #1413 Derek Friend query ignore “vars” argument rows selected. #1398 erkent-carb. spatSample ignored “replace=TRUE” random sampling, na.rm=TRUE, sample size larger non NA cells. #1411 Babak Naimi spatSample sometimes returned fewer values requested available lonlat rasters. #1396 Márcia Barbosa.","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"enhancements-1-7-71","dir":"Changelog","previous_headings":"","what":"enhancements","title":"version 1.7-71","text":"vect<character> now argument “opts” GDAL open options, e.g. declare file encoding. #1389 Mats Blomqvist plot(plg=list(tic=\"\")) now allows choosing alternative continuous legend tic-mark styles (“”, “”, “” “none”) makeTiles new argument “buffer” #1408 Joy Flowers.","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"new-1-7-71","dir":"Changelog","previous_headings":"","what":"new","title":"version 1.7-71","text":"prcomp<SpatRaster> method #1361 Jakub Nowosad add_box add box around map. box drawn axes , around plotting region. getTileExtents provides extents tiles. may used parallelization. See #1391 Alex Ilich.","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"version-17-65","dir":"Changelog","previous_headings":"","what":"version 1.7-65","title":"version 1.7-65","text":"CRAN release: 2023-12-15 Released 2023-12-15","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"bug-fixes-1-7-65","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"version 1.7-65","text":"flip argument direction=\"vertical\" filed cases large rasters processed chunks 0b714b0 Dulci stackoveflow SpatRaster now correctly handles NA & FALSE NA | TRUE #1316 John Baums set.names wasn’t working properly SpatRasterDataset SpatRasterCollection #1333 Derek Friend extract argument “layer” NULL shifted layers #1332 Ewan Wakefield terraOptions capture “memmin” stackoverflow dww rasterize points built-function crash field used #1369 anjelinejeline","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"enhancements-1-7-65","dir":"Changelog","previous_headings":"","what":"enhancements","title":"version 1.7-65","text":"mosaic can now use fun=\"modal\" rast<matrix> rast<data.frame> now option ’type=“xylz” #1318 Agustin Lobo extract<SpatRaster,SpatVector> can now use multiple summarizing functions #1335 Derek Friend disagg focal optimistic memory requirement estimation #1334 Mikko Kuronen","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"new-1-7-65","dir":"Changelog","previous_headings":"","what":"new","title":"version 1.7-65","text":"k_means<SpatRaster> method #1314 Agustin Lobo princomp<SpatRaster> method #1361 Alex Ilich .time<SpatRaster> method new argument “raw=FALSE” rast, sds, sprc allow ignoring scale offset 1354 Insang Song","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"version-17-55","dir":"Changelog","previous_headings":"","what":"version 1.7-55","title":"version 1.7-55","text":"CRAN release: 2023-10-13 Released 2023-10-14","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"bug-fixes-1-7-55","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"version 1.7-55","text":"mosaic ignored filename argument SpatRasterCollection single SpatRaster #1267 Michael Mahoney Attempting use extract raster file deleted crashed R. #1268 Derek Friend split<SpatVector,SpatVector> work well cases. #1256 Derek Corcoran Barrios intersect two SpatVectors crashed R date/time variable #1273 Dave Dixon “values=FALSE” ignored spatSample<SpatRaster>(method=\"weights\") #1275 François Rousseu coltab<- works list value #1280 Diego Hernangómez stretch histogram equalization memory-safe #1305 Evan Hersh plot now resets “mar” parameter #1297 Márcia Barbosa plotRGB ignored “smooth” argument #1307 Timothée Giraud","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"enhancements-1-7-55","dir":"Changelog","previous_headings":"","what":"enhancements","title":"version 1.7-55","text":"argument “gdal” project renamed “use_gdal” #1269 Stuart Brown. SpatVector attributes can now stored ordered factor #1277 Ben Notkin plot<SpatVector> now uses “interval” legend breaks supplied #1303 Gonzalo Rizzo crop<SpatRaster> now keeps metadata, including variable names #1302 rhgof extract(fun=\"table\") now returns easier use data.frame #1294 Fernando Aramburu.","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"new-1-7-55","dir":"Changelog","previous_headings":"","what":"new","title":"version 1.7-55","text":"metags<- metags set arbitrary SpatRaster/file level metadata #1304 Francesco Chianucci","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"version-17-46","dir":"Changelog","previous_headings":"","what":"version 1.7-46","title":"version 1.7-46","text":"CRAN release: 2023-09-06 Released 2023-09-06","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"bug-fixes-1-7-46","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"version 1.7-46","text":"plot<SpatVector> used wrong main label cases #1210 Márcia Barbosa plotRGB failed “ext=” argument #1228 Dave Edge rast<array> failed badly array less three dimensions. #1254 andreimirt. .equal SpatRaster multiple layers #1236 Sarah Endicott zonal(wide=FALSE) give wrong results zonal SpatRaster “layer” layername. #1251 Jeff Hanson panel now support argument “range” #141 Jakub Nowosad rasterize = returned wrong layernames field sorted #1266 Sebastian Dunnett mosaic multiple layers correct #1262 Jean-Romain","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"enhancements-1-7-46","dir":"Changelog","previous_headings":"","what":"enhancements","title":"version 1.7-46","text":"wrap<SpatRaster> now stores color tables #1215 Patrick Brown global now “maxcell” argument #1213 Alex Ilich layerCor fun=‘pearson’ now returns output layer names #1206 vrt now argument “set_names” #1244 sam--levy vrt now argument “return_filename” #1258 Krzysztof Dyba project<SpatRaster> new argument “by_util” exposing GDAL warp utility #1222 Michael Sumner.","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"new-1-7-46","dir":"Changelog","previous_headings":"","what":"new","title":"version 1.7-46","text":"compareGeom list SpatRasterCollection #1207 Sarah Endicott .rotated<SpatRaster> method #1229 Andy Lyons forceCCW<SpatVector> method force counter-clockwise orientation polygons #1249 srfall. vrt_tiles returns filenames tiles vrt file #1261 Derek Friend extractAlong extract raster cell values line ordered along line. #1257 adamkc.","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"version-17-39","dir":"Changelog","previous_headings":"","what":"version 1.7-39","title":"version 1.7-39","text":"CRAN release: 2023-06-23 Released 2023-06-23","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"bug-fixes-1-7-39","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"version 1.7-39","text":"tempdir option use path.expand. #1195 Alex Ilich layer names returned predict inconsistent using argument “index”. #1194 Michael Mahoney compilation failed older compilers use std::filesystem #1191 Small changes RGB<- coltab<- terra can installed R-devel (bug fix https://bugs.r-project.org/show_bug.cgi?id=18538)","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"version-17-37","dir":"Changelog","previous_headings":"","what":"version 1.7-37","title":"version 1.7-37","text":"CRAN release: 2023-06-18 Released 2023-06-18","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"bug-fixes-1-7-37","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"version 1.7-37","text":"rasterize points custom function work large rasters. #1127 Skip Woolley crop<SpatRaster, SpatVector> “mask=TRUE” work well raster scale/offset #1128 Monika Anna Tomaszewska zonal<SpatRaster> custom function always removed NAs. #1133 Matthias Weigand wrap<SpatRaster> lost changed layer names source disk; information time-step cases. #1144 Pascal Führlich global(fun=\"isNA\") correct SpatRaster multiple layers #1141 Robin Freeman interpIDW near=TRUE work properly (near=TRUE now default). #1186 Hugh Graham “YYYY-1-1” sometimes encoded “YYYY-13-1”. #1168 Colin Brust","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"enhancements-1-7-37","dir":"Changelog","previous_headings":"","what":"enhancements","title":"version 1.7-37","text":"panel categorical SpatRasters. #1143 Jason Flower argument “ext” plot<SpatRaster> can now also expand plot. #1136 Jakub Nowosad. argument overwrite=FALSE makeTiles. #1167 Gray Martin. legend options <plet,SpatVector>. #1177 Agustin Lobo. better handling mixed geometry type vector data vect svc. #1160 Mike Sumner. new argument sql query<SpatVectorProxy>. #1157 Carl Boettiger support writing raster data vitual file system #1209 Carl Boettiger","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"new-1-7-37","dir":"Changelog","previous_headings":"","what":"new","title":"version 1.7-37","text":"wrap<SpatRasterDataset> wrap<SpatRasterCollection> methods. #954 James Camac","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"version-17-29","dir":"Changelog","previous_headings":"","what":"version 1.7-29","title":"version 1.7-29","text":"CRAN release: 2023-04-21 Released 2023-04-22","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"new-1-7-29","dir":"Changelog","previous_headings":"","what":"new","title":"version 1.7-29","text":"regress<SpatRaster,numeric> get regression model coefficients cell, fixed “X”. regress<SpatRaster,SpatRaster> get regression model coefficients cell.","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"enhancements-1-7-29","dir":"Changelog","previous_headings":"","what":"enhancements","title":"version 1.7-29","text":"lapp<SpatRasterDataset> now flexible can now also use functions vectorized cell, chunk. See #1029 project<SpatVector> new argument “partial=FALSE” can used keep geometries can partially included output crs. extracting SpatVector column non-existing variable name now returns NULL (data.frame ) instead throwing error. #1118 Derek Friend.","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"bug-fixes-1-7-29","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"version 1.7-29","text":"problem reading empty categories .img files created buggy SpatRasters global fun=“notNA” wrong #111 Jeffrey Hanson extract<SpatRaster,SpatVector> “bind=TRUE” work extract<SpatRaster,SpatVector> point geometries “fun” returned values wrong order plot<SpatRaster> argument “colNA” work “alpha” also set #1102 Márcia Barbosa crop<SpatRaster> “extend=TRUE” extend SpatRaster input cell values. #1114 Jasper van Doninck setting factor date/time variable SpatVector work #1117 MK Schneider focalMat work well using terraOptions(todisk=T) #1116","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"version-17-23","dir":"Changelog","previous_headings":"","what":"version 1.7-23","title":"version 1.7-23","text":"CRAN release: 2023-04-08 Released 2023-04-08","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"new-1-7-23","dir":"Changelog","previous_headings":"","what":"new","title":"version 1.7-23","text":"halo function adding halo-ed text plots now exposed add_legend allow using keyword “topleft” position custom legend. #1053 Márcia Barbosa .crs function now exported countNA<SpatRaster> method split<SpatVector,SpatVector> split polygons lines","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"enhancements-1-7-23","dir":"Changelog","previous_headings":"","what":"enhancements","title":"version 1.7-23","text":"better support color spaces RGB #1060 Dominic Royé path expansion writeVector #1055 Andrew Gene Brown. clamp<SpatRaster> now also accepts SpatRasters set lower upper boundaries. freq new arguments “zones=NULL” “wide=FALSE”, allow tabulation values zone. expanse<SpatRaster> new arguments “zones=NULL” “wide=FALSE”, allow tabulation values zone. unique<SpatRaster> new argument “digits=NA” rasterize<SpatRaster,SpatVector> now accepts fun=“table” tabulate cells cell value rast<character> new argument “snap” snap window . #1094 Derek Friend plot new argument “clip=TRUE” can set FALSE avoid clipping axes mapped area #1080 Márcia Barbosa better error message coercing sf object fully formed #1098 Brandon McNellis writeCDF<SpatRaster> new argument “split” allowing treat layer subdataset #1077 Andrea Manica global now accepts multiple summarizing functions","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"bug-fixes-1-7-23","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"version 1.7-23","text":"SpatRaster RGB layers forced INT1U writing #1051 Cesar Aybar files multiple vector layers, crs first layer always used; ignoring crs different layers #1052 Andrew Gene Brown sieve able write file #1061 leo rasterize work sf objects #1054 Jakub Nowosad query work hyphenated layer names #1058 Robbie Price focal3D na.policy work #1057 Flávio Mota layerCor na.rm=TRUE failed SpatRaster 2 layers #1056 Alex Ilich. inset keyword positioning work well #1053 Márcia Barbosa yearmonths time stamps read file years <1970 >2037 #1062 Colin Brust compareGeom work multiple SpatRasters #1063 viewshed handle filename argument. #1100 kamistick","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"version-17-18","dir":"Changelog","previous_headings":"","what":"version 1.7-18","title":"version 1.7-18","text":"CRAN release: 2023-03-06 Released 2023-03-06","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"new-1-7-18","dir":"Changelog","previous_headings":"","what":"new","title":"version 1.7-18","text":"argument order=FALSE sort<SpatRaster> sort<SpatVector> (<data.frame> method argument =NULL rasterize> #986 Sam Weber meta<SpatRaster> method get metadata compare<SpatRaster> logic<SpatRaster> methods vect<SpatExtent> method panel<SpatRaster> “panel” plots (multiple layers, single legend)","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"enhancements-1-7-18","dir":"Changelog","previous_headings":"","what":"enhancements","title":"version 1.7-18","text":"now possible save terra options across sessions #995 Guillaume Patoine. better warnings .lonlat #1006 Andrew Gene Brown argument na.rm merge<SpatRaster> axes maps created plot now snug around mapped area, instead limits graphics figure region. C++ cleaning avoid warnings clang-tidy (e.g. now using .empty() instead .size()==0). [#1013-1017] Michael Chirico rasterize lines polygons can now use “fun” argument (min, max, mean, sum) #1041 Bart Huntley","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"bug-fixes-1-7-18","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"version 1.7-18","text":"legend created plet always correct. #983 Simon Rolph spatSample<SpatRaster>(regular=TRUE) failed providing two numbers (row, col) sample size. #991 srfall merge<SpatRaster> ignore NAs #1002 jmmonnet. writeCDF failed using argument force_v4 #1009 R. Kyle Bocinsky predict better handling rasters many NAs #988 Lucas Johnson layerCor handle NAs well different cells across layers #1034 François Rousseu.","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"version-17-3","dir":"Changelog","previous_headings":"","what":"version 1.7-3","title":"version 1.7-3","text":"CRAN release: 2023-01-24 Released 2023-01-24","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"new-1-7-3","dir":"Changelog","previous_headings":"","what":"new","title":"version 1.7-3","text":"argument w zonal<SpatRaster,SpatRaster> compute weighted means zonal<SpatRaster,SpatVector> method clamp_ts method","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"bug-fixes-1-7-3","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"version 1.7-3","text":"previous version, bug introduced order operation arithmetic operations SpatRasters ignored. #978 Andrew Marx Fixed split<SpatVector>. #979 srfall spatSample .df=FALSE returned data.frame instead matrix #982 Alex Ilich","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"version-16-53","dir":"Changelog","previous_headings":"","what":"version 1.6-53","title":"version 1.6-53","text":"CRAN release: 2023-01-17 Released 2023-01-17","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"new-1-6-53","dir":"Changelog","previous_headings":"","what":"new","title":"version 1.6-53","text":"arithmetic logical operations SpatRaster matrix, allow using cell-varying cell/layer-varying scalars. layer-varying scalars already supported via vectors.","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"enhancements-1-6-53","dir":"Changelog","previous_headings":"","what":"enhancements","title":"version 1.6-53","text":"shade now vectorized arguments angle direction facilitate generating multiple hillshades can combined better result #948 Jürgen Niedballa sharedPaths now uses spatial indices #960 Jeff Hanson predict better support models ranger return anything missing values #968 Alex Ilich","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"bug-fixes-1-6-53","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"version 1.6-53","text":"writeCDF now supports writing yearly time steps #926 Andrea Manica .contour now works single level #966 Johannes Signer subsetting SpatRaster window returned SpatRaster dimensions non-windowed raster, thus changing resolution. #964 Derek Friend removing factor variable SpatVector crashed R. #969 Andrew Gene Brown median always return correct number SpatRaster 3 layers #970 MatteaE","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"version-16-47","dir":"Changelog","previous_headings":"","what":"version 1.6-47","title":"version 1.6-47","text":"CRAN release: 2022-12-02 Released 2022-12-02","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"new-1-6-47","dir":"Changelog","previous_headings":"","what":"new","title":"version 1.6-47","text":"roll<SpatRaster> method rolling (moving) average rolling functions noNA<SpatRaster> method identify cells NA (across layers) rangeFill<SpatRaster> method","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"enhancements-1-6-47","dir":"Changelog","previous_headings":"","what":"enhancements","title":"version 1.6-47","text":"argument exhaustive spatSample<SpatRaster> large sparse rasters. [#905] PetiteTong. focalPairs focalReg can now use values custom windows weights. [#907] Fabian Fischer. focalReg now additional argument “intercept=TRUE”. [#916] Jordan Adamson crs(x, warn=TRUE)<- now emits warning difference transforming setting crs x already crs. [#897] Márcia Barbosa. now possible write scale offset writeRaster [#900] Kyle David crosstab now shows labels names categorical SpatRaster. [895] Derek Corcoran Barrios makeTiles can now take SpatVector define tiles. [920] Tristan Goodbody","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"bug-fixes-1-6-47","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"version 1.6-47","text":"focalPairs focalReg now work custom windows [#907] Fabian Fischer argument “alpha” plot<SpatVector> working properly. [#906] Márcia Barbosa. time<- time-step “years” handle negative years. [#911] Andrea Manica wrap/unwrap (extension saveRDS/readRDS) handle categorical rasters well [#912] Christine Anderson. interpIDW failed GDAL 3.6 [#910] Roger Bivand spatSample strata bug fix “unable find inherited method function ‘trim’” [#919] Alfredo Ascanio possible slice SpatRaster SpatExtent [#914] Jakub Nowosad. merge/mosaic handle NAs using two layers [#913] Joao Carreiras.","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"name-changes-1-6-47","dir":"Changelog","previous_headings":"","what":"name changes","title":"version 1.6-47","text":"focalCor -> focalPairs reflect possible use beyond correlation","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"version-16-41","dir":"Changelog","previous_headings":"","what":"version 1.6-41","title":"version 1.6-41","text":"CRAN release: 2022-11-18 Released 2022-11-18","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"new-1-6-41","dir":"Changelog","previous_headings":"","what":"new","title":"version 1.6-41","text":"[ [<- SpatRaster now third index k subsetting assigning values layer anyNA allNA SpatRaster unwrap restore PackedSpatVector PackedSpatRaster rasterizeWin method rasterization moving window (circle, ellipse, rectangle, buffer) interpIDW method inverse-distance-weighted interpolation points moving window interpNear method nearest neighbor interpolation points moving window viewshed method SpatRaster update method SpatRaster write new names new extent crs existing raster file. sieve filter SpatRaster argument segments=FALSE disagg<SpatRaster> sprc<character> method create SpatRasterCollection file subdatasets graticule function create SpatGraticule related methods plot<SpatGraticule> crop<SpatGraticule> elongate method SpatVector lines","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"enhancements-1-6-41","dir":"Changelog","previous_headings":"","what":"enhancements","title":"version 1.6-41","text":"faster mosaic merge<SpatRaster> [#577] Jean-Romain wrap<SpatRaster> now uses file references data deemed large load memory. [#801] Jean-Romain readRDS unserialize now return SpatRaster SpatVector (instead PackedSpat*) better support “local” arbitrary Euclidean crs [#797] Agustin Lobo clamp can now take low high values layer pax argument plot now provides control draw axis via parameters side, tick lab pax argument plot now argument retro use sexagesimal notation degrees extend new argument fill=NA warning now given combining SpatRasters different CRSs. [#818] Andrew Marx plotRGB now accounts value zlim stretching; allowing use coloring scheme across SpatRasters [#810] Agustin Lobo. center rotation spin now vectorized","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"bug-fixes-1-6-41","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"version 1.6-41","text":"annoying garbage collection messages Error x$.self$finalize() : attempt apply non-function now suppressed cases. [#218] Charlie Joey Hadley. problem go away altogether new version “Rcpp” released (ETA Jan 2023) thanks fix Kevin Ushey [#30] spatSample na.rm SpatRasters multiple layers work. [#800] Andrea Manica adjacent<SpatRaster> pairs=TRUE, include=TRUE ignored include=TRUE [#808] Joseph Lewis rasterize accept “NA” value updating [#809] Márcia Barbosa extract perfectly vertical horizontal line failed cases [#823] Dimitri Falk wrap<SpatVector> failed single point geometry [#815] Patrick Schaefer extract<SpatRaster> weights=TRUE return values [#814] Jean-Luc Dupouey. x[[\"newname\"]] <- r SpatRasters x r work [#795] Jim Shady fixed support non-conventional netCDF files [#869] Mike Sumner, [#864] eleanorecc, [#851] Philippe Massicotte.","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"name-changes-1-6-41","dir":"Changelog","previous_headings":"","what":"name changes","title":"version 1.6-41","text":"costDistance -> costDist avoid conflict {gdistance} gridDistance -> gridDist consistency","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"version-16-17","dir":"Changelog","previous_headings":"","what":"version 1.6-17","title":"version 1.6-17","text":"CRAN release: 2022-09-10 Released 2022-09-10","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"new-1-6-17","dir":"Changelog","previous_headings":"","what":"new","title":"version 1.6-17","text":"droplevels SpatRaster. [#757] Rodolfo Jaffe. normalize.longitude SpatVector. scoff get scoff<- set scale (gain) offset SpatRaster.","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"enhancements-1-6-17","dir":"Changelog","previous_headings":"","what":"enhancements","title":"version 1.6-17","text":"new argument raw=FALSE extract<SpatRaster> [#776] Thomas Roh. .data.frame now takes na.rm=NA remove rows NA layers. default value changed TRUE NA. [#792] Ed Carnell faster plotting SpatVector data [#774] Krzysztof Dyba distance<SpatRaster> new arguments “target” “exclude”. [#560] Bernardo Brandão Niebuhr new argument sparse=FALSE `relate<SpatVector,SpatVector>. new argument usenames=FALSE lapp<SpatRasterDataset> [#793] Colin Brust. vect<character> now reports file non-existent [#784] John Baums faster relate [#716] Krzysztof Dyba focal3D now checks window’s dimensions odd [#772] Neander Marcel Heming","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"bug-fixes-1-6-17","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"version 1.6-17","text":".equal bug [#756] fixed John Baums extract<\"SpatRaster\",\"sf\"> ignored ID argument. [#755] Dainius Masiliūnas. now (cases) check avoid overwriting (one ) input file(s) writing raster file [#760] John Baums vrt longer constrained maximum number files can opened [#780] 8Ginette8 weighted.mean crashed numeric weights na.rm=TRUE [#777] David Holstius project<SpatRaster> consider extent set user [#775] Philippe Massicotte focalCor failed large rasters [#607] John Clark focal expand=TRUE prone run memory [#610] Nathan Elliott crop<SpatVector> work well second argument points lines [#782] Márcia Barbosa adjacent pairs=TRUE now respects include=TRUE argument [808] Joseph Lewis","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"version-16-7","dir":"Changelog","previous_headings":"","what":"version 1.6-7","title":"version 1.6-7","text":"CRAN release: 2022-08-07 Released 2022-08-07","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"new-1-6-7","dir":"Changelog","previous_headings":"","what":"new","title":"version 1.6-7","text":"method blocks guide reading raster data chunks. [#748] John Baums","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"enhancements-1-6-7","dir":"Changelog","previous_headings":"","what":"enhancements","title":"version 1.6-7","text":"warning given writing raster values outside limits requested datatype [#752] Jim Shady Arguments extract simplified. [#736] François Rousseu","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"bug-fixes-1-6-7","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"version 1.6-7","text":"values focal correct input SpatRaster multiple layers “custom” function. [#727] Jean-Luc Dupouey. plot<SpatRaster> honor argument legend=FALSE. [#738] Grzegorz Sapijaszko expanse failed processing chunks [#741] Gareth Davies crop<SpatRaster,SpatExtent> argument snap=\"\" lead crash extent beyond SpatRaster. [#740] Mauricio Zambrano-Bigiarini","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"version-16-3","dir":"Changelog","previous_headings":"","what":"version 1.6-3","title":"version 1.6-3","text":"CRAN release: 2022-07-25 Released 2022-07-25","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"bug-fixes-1-6-3","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"version 1.6-3","text":"subst longer uses values changed earlier . [#639] Paul Smith .points<SpatRaster> return wrong factor labels. [#640] Attilio Benini mask<SpatRaster,SpatVector> crashed results written disk. [#646] Monika Anna Tomaszewska extract<SpatRaster,SpatVector(points)>(xy=TRUE) returned locations points, xy-coordinates cells. [#650] Ward Fonteyn wrap<SpatRaster> return correct labels categorical rasters. [#652] Jakub Nowosad better support non-latin characters legend [#658] Krzysztof Dyba holes small lon/lat polygons now properly buffered [#689] David Hofmann","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"enhancements-1-6-3","dir":"Changelog","previous_headings":"","what":"enhancements","title":"version 1.6-3","text":"subst can now substitute values multiple input layers single output value (layer) subset<SpatVector> now behaves like subset<data.frame> [#648] Andrew Gene Brown setting category labels vector names now deprecated. data.frame least two columns used. first column cell values (IDs). now possible “drop” layer SpatRaster setting NULL [#664] Daniel Valentins freq now provides labels factors, even bylayer=FALSE. now always returns data.frame (used return matrix cases. [#687] Rodolfo Jaffé disagg aggregate now return warning instead error using (dis)aggregation factor 1.[#684] Justin Fain. project crashed erroneously projecting raster data one celestial body another [#688] Mike Sumner can now set color table two column (value, ID) data.frame categorical rasters can now updated easily [#667] Alex Ilich control matching values colors using plot. [#673] Jakub Nowosad. SpatVector attributes can now also factor, date, POSIXct. [#697] Grant Williamson improved handling missing values extract(method=\"bilinear\"). [#693] swooping-magpie","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"new-1-6-3","dir":"Changelog","previous_headings":"","what":"new","title":"version 1.6-3","text":"argument .raster unique<SpatRaster> create categorical raster unique combinations layers input raster. default argument na.rm changed FALSE sort<SpatRaster> sort cell values across layers. .colors .RGB SpatRaster cover can now combine categorical rasters concats combine levels two SpatRaster new categories [#663] Alex Ilich zonal<SpatVector,SpatVector> method aggregate SpatVector attributes polygons","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"version-15-34","dir":"Changelog","previous_headings":"","what":"version 1.5-34","title":"version 1.5-34","text":"CRAN release: 2022-06-09 Released 2022-06-09","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"bug-fixes-1-5-34","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"version 1.5-34","text":"“flipped” rasters always handled well. [#546] Dan Baston better reading GTiff subdatsets. [#601] Kyle Doherty better handling multi-layer categorical rasters extract. [#580] André M. Bellvé weighted.mean adjust weights NAs values. [#574] Lars Dalby bug masking. [#552] reported Márcia Barbosa [565] Jakub Nowosad. fixed stretch option plotRGB [#550] Agustin Lobo unwrap SpatRaster failed crs including “’”. [#602] Jean Romain. spatSample cells=TRUE failed planar data [#544] Benjamin Misiuk compareGeom(x, y, stopOnError=FALSE) remove error messages stored x leading unexpected warnings later . [#568] David Hofmann.","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"enhancements-1-5-34","dir":"Changelog","previous_headings":"","what":"enhancements","title":"version 1.5-34","text":"Using & | SpatRasters now returns boolean SpatRaster. [#594] Dan Baston SpatVector now supports logical values. [#593] Derek Friend Attempt create SpatRaster invalid number rows now gives error. [#544] Dan Baston layerCor create temp files anymore. [#551] Christine Anderson using iterator symbols nested loops avoid warnings Intel compiler. [#573] Gareth Davies.","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"new-1-5-34","dir":"Changelog","previous_headings":"","what":"new","title":"version 1.5-34","text":"new arguments res origin project<SpatRaster> method. [#596] Alex Ilich new argument inside=TRUE centroids get centroid-like point guaranteed geometry (“point surface”). [#588] Márcia Barbosa new argument keepgeom=FALSE vect<data.frame> allows setting (keeping) geometry attribute. [#586] Márcia Barbosa saveRDS serialize methods SpatRaster SpatVector. [#549] Andrei Mîrț xFromCol yFromCol now <SpatRaster,missing> method. [#583] Michael Sumner. svc<sf> method deal GeometryCollection types. [#585] Sarah Endicott .points<SpatRaster> .polygons<SpatRaster> new argument na.=FALSE affects interpretation na.rm. [#548] Jean-Luc Dupouey. setGDALconfig getGDALconfig set GDAL configuration options. [#608] Erik Bolch. new argument circular rapp allow start end (layers represent days year) new method costDistance<SpatRaster> new methods .min .max SpatRaster get cell numbers extreme values SpatRaster. new method emptyGeoms<SpatVector> get indices empty (null) geometries new method rasterizeGeom rasterize geometry count area (small) polygons length lines. new method .na SpatRaster shortcut !.na(x). .list implemented <SpatRasterDataset>. sources implemented <SpatRasterDataset>, <SpatVector> <SpatVectorProxy> [#638] Andrew Gene Brown","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"name-changes-1-5-34","dir":"Changelog","previous_headings":"","what":"name changes","title":"version 1.5-34","text":"delauny -> delaunay [#627] Derek Friend","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"version-15-21","dir":"Changelog","previous_headings":"","what":"version 1.5-21","title":"version 1.5-21","text":"CRAN release: 2022-02-16 Released 2022-02-17 writeVector vect now work GPGK path non-ascii characters [#518] results predict cores > 1 one output variable garbled zonal dropped category names using external (R) function [#527] Jakub Nowosad focal/focalCpp showed strange patterns window size larger block size [#519] Alex Ilich using xy=TRUE .data.frame normalized names [#538] Kodi Arfer new argument options vrt [#629] Monika Tomaszewska.","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"enhancements-1-5-21","dir":"Changelog","previous_headings":"","what":"enhancements","title":"version 1.5-21","text":"makeTiles new arguments extend na.rm [#520] L. Dalby project<SpatRaster> now uses nearest neighbor default method RGB rasters new argument na.rm=TRUE unique. [#561] Matthieu Stigler","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"version-15-17","dir":"Changelog","previous_headings":"","what":"version 1.5-17","title":"version 1.5-17","text":"CRAN release: 2022-01-30 Released 2022-01-30","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"bug-fixes-1-5-17","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"version 1.5-17","text":"app<SpatRasterDataset> ignored filename. [#498] jszhao vect<data.frame> failed silently xy coordinates integers [#496] Márcia Barbosa output aggregate<SpatRaster> malformed nrow(x) %% fact != 0. [#492] Jean-François Bourdon Integer NAs SpatVector attributes recognized Windows [#491] Márcia Barbosa plot<SpatVector> failed using character variable many unique values. [#489] Márcia Barbosa rotate failed large files. Reported Ujjawal Singh writing raster files color table lead crash [#501] Kodi Arfer crds replicated coordinates [#504] Murray Efford .data.frame<SpatRaster> returned integers file stored values integers, even scale/offset creates decimal numbers [#509] Kodi Arfer project opened input raster file read/write mode instead read mode. work files updated.","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"enhancements-1-5-17","dir":"Changelog","previous_headings":"","what":"enhancements","title":"version 1.5-17","text":"distance, gridDistance, direction patches now process layers input SpatRaster. [#503] Chris Haak consistent copy--modify behavior ()<- methods. -place updating available set. methods set.names set.values. [#493] Jean Romain [#511] Bryan Fuentes much faster writing GPGK vector data using single transaction (following sf) [#460] Krzysztof Dyba aggregate<SpatRaster> now accepts functions return one value per aggregated cell writeVector new argument insert add layer existing file (e.g. GPKG).","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"new-1-5-17","dir":"Changelog","previous_headings":"","what":"new","title":"version 1.5-17","text":"new option method=\"weights\" spatSample<SpatRaster> new mask<SpatVector,SpatVector> method select intersecting geometries new method .related values<SpatRaster> new option na.rm=TRUE. [#490] Henk Harmsen new class SpatVectorProxy provide access large vector databases read memory entirety. new argument proxy=FALSE vect create SpatVectorProxy object new method query<SpatVectorProxy> extract parts SpatVectorProxy new method vector_layers returns, can delete, vector format layers database/file GPKG","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"name-changes-1-5-17","dir":"Changelog","previous_headings":"","what":"name changes","title":"version 1.5-17","text":"avoid name clashes tidyverse arrow -> north src -> sprc simplify -> simplifyGeom consistency setCats -> set.cats","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"version-15-12","dir":"Changelog","previous_headings":"","what":"version 1.5-12","title":"version 1.5-12","text":"CRAN release: 2022-01-13 Released 2022-01-13","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"bug-fixes-1-5-12","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"version 1.5-12","text":"setValues init failed (even crashed R) using single value largish raster. [#414] conversion sfc SpatVector lost crs. [#415] Jean-Luc Dupouey buffer SpatRaster values caused crash [#416] Sebastian Brinkmann writeVector now assumes “traditional GIS order” (long/lat) CRS specifies lat/long. [#333]( Agustin Lobo argument main ignored density using single layer SpatRaster [#424] dvictori Summary type math functions min mean, used multiple SpatRasters numbers, ignored additional SpatRasters [#426] Zhuonan Wang names now conserved creating SpatRaster RasterStack points file(s) [#430] Dan Baston classify right=FALSE ignored include.lowest=TRUE [#442] Alex Ilich patches now combines patches connect across data line [#366] Hirscht patches(directions=8) now connects NE/SW direction [#451] Jean-François Bourdon. centroids now considers cases SpatVector parts nearest crossing date line instead zero-meridian [#366] Hirscht terrain created empty (NA) rows chunks used processing large rasters. [#453] Robert Ritson. inset draw “box” correctly. [#457] Márcia Barbosa .lines now works points SpatVector [#464] Márcia Barbosa","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"enhancements-1-5-12","dir":"Changelog","previous_headings":"","what":"enhancements","title":"version 1.5-12","text":"values(x)<- now accepts (hex coded) colors values focal now wraps around dateline like raster::focal [#242] Alexander Marbler aggregate now show progress bar cases [#249] Lachlan .data.frame<SpatRaster> <SpatVector> now also implemented S3 methods assure correct dispatch S3 methods data.table::.data.table. See [#284] Patrick Schratz crs now shows correct authority EPSG. [#419] Matthew Williamson now possible add SpatRaster empty SpatRaster (values), even different geometry, ignoring empty SpatRaster [#421] Alex Ilich. rast<filename> new argument lyrs subset layers open file one step. rast<array> now crs extent argument. [#439] RS-eco type=\"xyz\" now default rast<data.frame>. [#438] RS-eco classify new argument brackets show side interval open closed. support categorical data freq .data.frame. [#441] ngould7 speed processing multi-layer memory data. [#437] Krzysztof Dyba vect<matrix> vect<data.frame> now much faster. [#413] BastienFR extract points provided matrix cell numbers much faster. [#341] focal new argument na.policy can set one “” (default), “” “omit”. argument na.removed, can now use na.policy=\"\" inset argument border changed perimeter allow passing border plot<Spat*>. [#456] Márcia Barbosa compile-time run-time versions GEOS now compared warning given . [#459] Edzer Pebesma now possible add sub-datasets GPKG GTiff files. [#300] gtitov general option memfrac can now set zero (stead lower 0.1). [#476] Matt Strimas-Mackey new argument allowGaps patches disallow gaps patch IDs. See [#478] Dunbar Carpenter.","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"new-1-5-12","dir":"Changelog","previous_headings":"","what":"new","title":"version 1.5-12","text":"timestamps units now saved auxiliary file (filename.aux.json) raster formats except NetCDF using writeCDF (case stored netcdf file) new method mergeTime combine multiple rasters, perhaps partly overlapping time, single time series new method fillTime can add empty layers existing layers assure time step layers constant new method approximate fill missing values cell across layers new methods .bool .bool SpatRaster explicit recognition Boolean raster data various places (e.g., extract, plot) new methods .int .int SpatRaster. assigning integer values SpatRaster, reading integer file, corresponding layers now classified integer type [#446] L. Dalby new method layerCor (like raster::layerStats). [#420] Alex Ilich new method focalCor (like raster::corLocal). [#427] Zhuonan Wang new method .equal SpatRaster. See [#428] Dongdong Kong new method math SpatRaster implements Math-generic methods accepts filename new method sds<array> new method rasterize<matrix>, see [#413] BastienFR new method colorize transform color representations new method arrow draw (North) arrow map. [#461] Márcia Barbosa new method densify insert nodes existing nodes line polygon SpatVector new method direction SpatRaster. [#462] Márcia Barbosa new method focal3D compute focal values three-dimensional (row, column, layer) window new function makeVRT create vrt file file needs header read. new option method=\"stratified\" spatSample<SpatRaster>. [#470] Michael Mahoney new general option memmax cap amount RAM terra can used raster processing [#476] Matt Strimas-Mackey new method gridDistance compute distances traversing raster, perhaps obstacles. [#477] Márcia Barbosa","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"version-14-22","dir":"Changelog","previous_headings":"","what":"version 1.4-22","title":"version 1.4-22","text":"CRAN release: 2021-11-24 Released 2021-11-24","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"changes-1-4-22","dir":"Changelog","previous_headings":"","what":"changes","title":"version 1.4-22","text":"focal now ellipses (...) allow providing additional arguments fun. reason na.rm argument anymore can supplied via ellipses. practice means default na.rm=FALSE standard functions mean sum.","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"bug-fixes-1-4-22","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"version 1.4-22","text":"app grossly overestimated RAM needed, slowing . Reported Jerry Nelson terra now installs, , older versions GEOS [#406] fparyani terra install Clang CRAN/OSX due using C++13 idiom.","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"enhancements-1-4-22","dir":"Changelog","previous_headings":"","what":"enhancements","title":"version 1.4-22","text":"lapp tapp now cores argument (app predict). Suggested Dongdong Kong [#365] focal now also works function returns multiple values. See [#318] Alex Ilich. focal can now process multiple layers one step. expanded support conversion stars objects [#220] Jakub Nowosad","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"new-1-4-22","dir":"Changelog","previous_headings":"","what":"new","title":"version 1.4-22","text":"focalCpp takes C++ function iterates cells speed computation avoiding apply (see [#318] Alex Ilich). focalReg focal OLS regression models layers","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"version-14-20","dir":"Changelog","previous_headings":"","what":"version 1.4-20","title":"version 1.4-20","text":"CRAN release: 2021-11-16 Released 2021-11-16","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"bug-fixes-1-4-20","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"version 1.4-20","text":"terra install versions GDAL 3 [#402] Alex Ilich. distance two SpatVectors matrices pairwise=FALSE returned matrix filled column instead row [#403] Paul Smith","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"version-14-19","dir":"Changelog","previous_headings":"","what":"version 1.4-19","title":"version 1.4-19","text":"CRAN release: 2021-11-15 Released 2021-11-15","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"bug-fixes-1-4-19","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"version 1.4-19","text":"rast NetCDF files failed bad parsing dates. [#361] Juan Carlos Zamora-Pereira distance<SpatRaster> lon/lat data correct. [#368] Greg Schmidt .polygons<SpatRaster> failed SpatRaster categorical layer first layer. [#370] Patrick Schratz filename argument rasterize ignored, also causing errors writing temporary files. [#377] Robbie Price rast<character> crashed sds empty character string. [#381] Dan Baston plot<SpatVector> now responds range argument [#385] Márcia Barbosa zonal failed user-defined functions. [#393] mqueinnec","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"new-1-4-19","dir":"Changelog","previous_headings":"","what":"new","title":"version 1.4-19","text":"new method selectHighest select n cell values highest lowest values. new method vect<list> append SpatVectors (faster .call(rbind, x)) new argument align=FALSE project align template SpatRaster ignore resolution new method gdalCache set GDAL cache size, contributed Dan Baston [#387] new method fileBlocksize new argument options writeVector pass layer creation options GDAL new SpatVector topology methods mergeLines, snap, makeNodes, removeDupNodes, gaps, simplify new SpatVector characterization methods width clearance","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"enhancements-1-4-19","dir":"Changelog","previous_headings":"","what":"enhancements","title":"version 1.4-19","text":"terra now installs older versions GEOS [#363] terra now installs CentOS 7 GDAL 2.1.4 C++ compiler support std::regexp. [#384] Ariel Paulson","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"version-14-11","dir":"Changelog","previous_headings":"","what":"version 1.4-11","title":"version 1.4-11","text":"CRAN release: 2021-10-11 Released 2021-10-11","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"enhancements-1-4-11","dir":"Changelog","previous_headings":"","what":"enhancements","title":"version 1.4-11","text":"definition setValues now two arguments (x values), just like raster ; avoid reverse dependency problems raster","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"version-14-9","dir":"Changelog","previous_headings":"","what":"version 1.4-9","title":"version 1.4-9","text":"CRAN release: 2021-10-07 Released 2021-10-07","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"name-changes-1-4-9","dir":"Changelog","previous_headings":"","what":"name changes","title":"version 1.4-9","text":"avoid name conflicts sp (via raster) disaggregate now called disagg bbox,SpatRaster bbox<SpatVector> removed (resurrected raster another name).","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"enhancements-1-4-9","dir":"Changelog","previous_headings":"","what":"enhancements","title":"version 1.4-9","text":"project resample now choose resampling method based first layer, using “near” categorical data. Thanks Matthew Lewis [#355]","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"bug-fixes-1-4-9","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"version 1.4-9","text":"hist failed small samples. Issue [#356] Martin Queinnec","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"version-14-7","dir":"Changelog","previous_headings":"","what":"version 1.4-7","title":"version 1.4-7","text":"CRAN release: 2021-10-05 Released 2021-10-05","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"note-1-4-7","dir":"Changelog","previous_headings":"","what":"note","title":"version 1.4-7","text":"terra longer depends raster. avoid name clashes two packages, allow replacing methods rgeos rgdal raster, raster now depends terra instead.","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"enhancements-1-4-7","dir":"Changelog","previous_headings":"","what":"enhancements","title":"version 1.4-7","text":"freq new argument usenames. See issue [#309] Bappa Das rast<character> new argument opts can used pass GDAL open options. See issue [#314] rast<SpatRaster> now takes arguments names vals. See issue [#323] Dongdong Kong crs<- now warns unsupported datum used. See issue [#317] spatSample now returns factor values SpatRaster layer .factor except using .df=FALSE new method origin<- set origin SpatRaster. See issue [#326] Jakub Nowosad crs new argument parse. See [#344] plot<SpatRaster,missing> new argument reset=FALSE allows resetting par()$mar parameters plotting. See issue [#340] Derek Friend crds new argument na.rm. See [#338] Kodi Arfer show(Spat*) now prints name EPSG code crs available. See [#317] Jakub Nowosad","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"bug-fixes-1-4-7","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"version 1.4-7","text":"plotRGB failed NAs. Issue [#308] Jakub Nowosad writeVector crashed R used SpatVector geometries. Reported Timothy White issue [#319] summary<SpatRaster> now returns counts classes (instead numerical summary indices) [#324] Jakub Nowosad tapp character index now returns SpatRaster correct names [#345] Stuart Brown rasterize character variable now adds ID column categories [#337] Tate Brasel cellSize now masks values cases (requested mask=TRUE). Issue [#339] Jean-Luc Dupouey buffer<SpatVector> longer treats lines like polygons [#332] Márcia Barbosa plot now passes layer index fun [#310] Ben Tupper to_id nearest sometimes wrong. See [#328] Shawn Ligocki better support ESRI value attribute tables (VAT). See question focal reset initial values NA cells processing chunks. [#312] Jeffrey Evans focal run memory using large window user-defined function, inexact chunk boundary [#347] zonal .raster=TRUE failed categorical SpatRasters [#348] Jakub Nowosad","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"version-13-22","dir":"Changelog","previous_headings":"","what":"version 1.3-22","title":"version 1.3-22","text":"CRAN release: 2021-08-20 Released 2021-08-20","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"enhancements-1-3-22","dir":"Changelog","previous_headings":"","what":"enhancements","title":"version 1.3-22","text":"time(x) <- d set Date class object, time(x) now returns Date object instead POSIXct object. Issue [#256] Mauricio Zambrano-Bigiarini UTF-8 encoding character attributes SpatVector now declared display correctly R. See issue [#258] AGeographer. Also implemented names SpatVector SpatRaster rast<data.frame> method avoid confusion matrix list methods response question Stackbeans extreme values used represent NA intended (one two lower) INT2U INT4U. Reported Jean-Luc Dupouey stackoverflow writeCDF now also writes time dimensions one time-step. See question vect<character> (filename) now argument layer select layer multi-layer file / database, arguments query, extent filter reading subset subst can now create multiple output layers See [issue 276] Agustin Lobo classify can now create different multiple output layers See [issue 276] Agustin Lobo Argument alpha plot<SpatRaster> can now SpatRaster. See question James McCarthy","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"bug-fixes-1-3-22","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"version 1.3-22","text":"filename overwrite arguments ignored rasterize gdal options now also honored create-copy drivers [#260] buffer lonlat now works better world’s “edges” [#261] scale/offset ignored project. Reported Fabian Fischer rasterize<SpatRaster,SpatVector> inverse=TRUE crashed R session. Issue [#264] Jean-Luc Dupouey output merge mosaic correct large rasters (first rows used). Reported Zavud Baghirov [#271] .points,SpatRaster remove NA’s correctly shifted values. Issues [#269] [#273] Julian Hagenauer rast<matrix> rotated values using equal-sided matrix [#274] Jakub Nowosad number rows columns reversed using project crs argument. [#283] Timothée Giraud classify, argument right TRUE FALSE reversed. terrain edge effects [#303] Andrew Gene Brown. terrain can now compute multiple variables [#286] Žan Kuralt wrap<SpatRaster> changed factors numeric [#302] Patrick Schratz writeVector failed “FlatGeobuf” (probably formats well) using proper MultiPolygon [#299] L Dalby regular sampling polygons spatSample now much regular [#289] Jakub Nowosad","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"version-13-4","dir":"Changelog","previous_headings":"","what":"version 1.3-4","title":"version 1.3-4","text":"CRAN release: 2021-06-20 Released 2021-06-20","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"new-1-3-4","dir":"Changelog","previous_headings":"","what":"new","title":"version 1.3-4","text":"na.omit<SpatVector> remove empty geometries /attribute records NA new method src create SpatRasterCollection (loose collection tiles). merge mosaic now methods SpatRasterCollection. avoid (inefficient) use .call. #210 Matthew Talluto. activeCat activeCat<- get set “active” category multiple categories (raster attributes) .numeric catalyze transfer categories numeric cell values summarize methods range mean (attributes ) SpatVector new method shade, compute hill shading","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"enhancements-1-3-4","dir":"Changelog","previous_headings":"","what":"enhancements","title":"version 1.3-4","text":"additional arguments (na.rm) now used rasterize point geometries. #209 Jakub Nowosad improved handling (documentation) gstat models interpolate. #208 Jakub Nowosad new argument cpkgs predict list packages need exported cores argument cores larger one. ?predict now shows different approaches parallelize predict (based examples issue. #178 Matthew Coghill. freq now returns labels categorical layers adjacent now pairs argument. #239 Kenneth Blake Vernon adjacent now also takes matrix specify adjacent cells mean summarize methods now take filename argument disallow non-recognized named arguments. #238 Jessica Nephin raster attribute table ESRI-GRID integer data, ESRI vat.dbf file now ignored counts values. #234 Jullee time attributes longer lost raster operations. #246 Mauricio Zambrano-Bigiarini resample (project) longer ignore gdal=\"\" write options use BIGTIFF necessary (suggested Ani Ghosh) new argument layer extract-SpatRaster,SpatVector method extract values single layers specified geometry (see question).","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"bug-fixes-1-3-4","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"version 1.3-4","text":"better handling paths non-ASCII characters (e.g., Chinese) GeoTiff still fails NetCDF. [#233] Dongdong Kong extract points cells=TRUE xy=TRUE gave garbled output .character<SpatRaster> (called wrap) capture layer names. [#213] Pascal Title focal mirrored weight matrix, thus affecting results using asymmetrical weight matrix. Reported Sebastiano Trevisani terra::terraOptions now works without attaching package. [#229] Karl Dunkle Werner app ncores > 0 function returns multiple layers now works. [#240] BastienFR. autocor (local) can now handle NA values. [#245] Jakub Nowosad . mask SpatVector large (memory) multi-layer SpatRaster worked first layer. Reported Monika Tomaszewska.","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"version-12-10","dir":"Changelog","previous_headings":"","what":"version 1.2-10","title":"version 1.2-10","text":"CRAN release: 2021-05-13 Released 2021-05-13","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"new-1-2-10","dir":"Changelog","previous_headings":"","what":"new","title":"version 1.2-10","text":".lines method SpatRaster .polygons method SpatVector lines autocor<numeric> new methods mean, compute local mean, locmor, local Moran’s sharedPaths method SpatVector (lines polygons) RGB2col method reduce three-layer RGB SpatRaster single layer SpatRaster color-table (<= 256 colors) split methods SpatVector SpatRaster","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"enhancements-1-2-10","dir":"Changelog","previous_headings":"","what":"enhancements","title":"version 1.2-10","text":"rast<Raster*> now takes crs Raster object, file may point . [#200] Floris Vanderhaeghe convhull new argument =\"\" make convex hulls sub-sets SpatVector. faster processing large memory rasters. See issue [#206] Krzysztof Dyba.","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"bug-fixes-1-2-10","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"version 1.2-10","text":"extract multiple layers return data.frame values correct order (row instead column) crop works sf objects. [#201] Sebastian Brinkmann vect<sf> now also works lines, faster vect<character> crashed R file empty geometries. [#202] consumere extract(points, bilinear=TRUE, cells=TRUE) now works. [#203] fab4app zonal now works min max. [#207] Reported Jakub Nowosad","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"name-changes-1-2-10","dir":"Changelog","previous_headings":"","what":"name changes","title":"version 1.2-10","text":"avoid name conflicts spatstat package area,SpatRaster-method(x, sum=FALSE) -> cellSize(x) area,SpatRaster/SpatVector-method(x, sum=TRUE) -> expanse(x) convexhull -> convHull perimeter -> perim tiles -> makeTiles coords -> crds","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"version-12-5","dir":"Changelog","previous_headings":"","what":"version 1.2-5","title":"version 1.2-5","text":"CRAN release: 2021-04-30 Released 2021-04-30","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"new-1-2-5","dir":"Changelog","previous_headings":"","what":"new","title":"version 1.2-5","text":"trim new argument value allows trimming rows columns values default NA rapp new argument clamp allows clamping start end values 1:nlyr(x), avoiding values considered NA spatSample<SpatRaster> new arguments .points values. Getting values, cells coordinates longer mutually exclusive. response [#191] Agustin Lobo area<SpatRaster> new argument mask=FALSE classify can now take single number request many cuts mosaic merge now warn resample rasters aligned extract new argument exact get fraction covered cell","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"bug-fixes-1-2-5","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"version 1.2-5","text":"flip(x, direction=\"vertical\") longer reverses order layers extract work horizontal vertical lines extent considered invalid. Reported Monika Tomaszewska autocor handle NA values [#192] Laurence Hawker nearest now works angular coordinates unit slope terrain correct (tangent returned instead slope), [#196] Sven Alder quantile now works rasters cells NA. Reported Jerry Nelson","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"name-changes-1-2-5","dir":"Changelog","previous_headings":"","what":"name changes","title":"version 1.2-5","text":"avoid name conflicts tidyverse deprecation warning: separate -> segregate expand -> extend near -> nearby pack -> wrap without deprecation warning: transpose -> trans collapse -> tighten fill -> fillHoles select -> sel","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"version-11-17","dir":"Changelog","previous_headings":"","what":"version 1.1-17","title":"version 1.1-17","text":"CRAN release: 2021-04-14 Released 2021-04-14","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"major-changes-1-1-17","dir":"Changelog","previous_headings":"","what":"major changes","title":"version 1.1-17","text":"c<SpatVector> now returns list. rbind used append SpatVector objects overhaul handling factors. rats removed, levels cats changed","code":""},{"path":"https://rspatial.github.io/terra/news/index.html","id":"version-11-4","dir":"Changelog","previous_headings":"","what":"version 1.1-4","title":"version 1.1-4","text":"CRAN release: 2021-03-09 news recorded earlier versions","code":""}]
